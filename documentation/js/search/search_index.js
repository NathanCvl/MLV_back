var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/Alert.html",[0,0.175,1,2.682]],["body/classes/Alert.html",[0,0.271,1,4.832,2,1.608,3,0.259,4,0.211,5,0.211,6,5.4,7,0.259,8,0.013,9,0.012,10,0.012]],["title/controllers/AlertController.html",[11,1.389,12,2.886]],["body/controllers/AlertController.html",[0,0.171,1,3.598,3,0.163,4,0.133,5,0.133,7,0.163,8,0.014,9,0.009,10,0.009,11,1.354,12,3.873,13,1.354,14,3.398,15,2.18,16,0.533,17,1.393,18,2.012,19,3.343,20,2.712,21,2.588,22,3.906,23,4.501,24,2.056,25,3.259,26,1.022,27,3.906,28,1.712,29,1.651,30,0.948,31,1.712,32,1.717,33,5.379,34,3.906,35,1.97,36,1.795,37,3.37,38,3.906,39,2.386,40,1.97,41,3.37,42,3.906,43,0.511,44,2.18,45,2.447,46,2.447,47,0.626,48,3.854,49,3.398,50,1.97,51,4.218,52,2.613,53,1.97,54,1.97,55,2.813,56,2.18,57,1.087,58,3.906,59,3.906,60,1.648,61,1.582,62,3.063,63,1.982,64,3.906,65,3.906,66,2.447,67,3.906,68,2.613,69,3.906]],["title/modules/AlertModule.html",[70,1.156,71,2.682]],["body/modules/AlertModule.html",[0,0.219,3,0.209,4,0.17,5,0.17,7,0.209,8,0.014,9,0.011,10,0.011,12,5.006,13,2.195,43,0.519,47,0.802,48,4.825,49,4.35,70,2.005,71,5.296,72,2.11,73,2.11,74,2.299,75,2.299,76,2.11,77,3.196,78,2.299,79,4.35,80,4.35,81,2.303,82,2.912,83,2.11,84,2.11,85,5,86,5,87,2.025]],["title/injectables/AlertService.html",[48,2.511,88,0.749]],["body/injectables/AlertService.html",[0,0.166,1,2.547,3,0.159,4,0.13,5,0.13,7,0.159,8,0.014,9,0.009,10,0.009,16,0.519,17,1.369,19,3.307,20,2.665,21,2.543,23,4.108,26,1.062,28,1.824,29,1.76,30,1.011,31,1.824,32,1.698,35,2.665,39,2.36,40,2.665,43,0.49,47,0.611,48,3.311,50,1.92,51,4.144,52,2.547,53,1.92,54,1.92,60,1.607,61,1.542,63,1.961,81,1.961,87,1.542,88,0.988,89,1.371,90,3.312,91,2.512,92,5.285,93,1.371,94,2.017,95,3.808,96,2.92,97,5.285,98,3.808,99,3.216,100,3.307,101,3.808,102,3.138,103,3.808,104,2.327,105,3.808,106,3.808,107,3.808,108,3.808,109,3.808]],["title/controllers/AppController.html",[11,1.389,110,2.682]],["body/controllers/AppController.html",[0,0.098,3,0.093,4,0.076,5,0.076,7,0.093,8,0.014,9,0.006,10,0.006,11,1.23,13,0.774,16,0.602,17,0.919,24,1.971,25,1.183,26,0.98,28,1.769,29,1.706,30,0.846,31,1.769,32,1.646,43,0.487,44,1.246,47,0.358,56,1.246,57,0.621,61,1.437,63,1.504,84,1.497,91,2.396,93,0.804,104,1.562,110,2.374,111,1.942,112,3.548,113,4.375,114,4.415,115,3.548,116,3.548,117,3.548,118,3.548,119,2.233,120,2.233,121,2.233,122,5.03,123,3.353,124,3.548,125,2.233,126,4.208,127,2.233,128,2.233,129,2.233,130,4.804,131,2.233,132,1.437,133,2.233,134,2.233,135,2.782,136,2.42,137,3.548,138,2.233,139,3.086,140,3.548,141,2.233,142,2.233,143,2.233,144,3.548,145,2.233,146,2.233,147,3.568,148,4.415,149,2.233,150,6.357,151,6.357,152,2.923,153,3.086,154,2.233,155,2.233,156,2.233,157,2.374,158,2.233,159,2.233,160,2.233,161,2.782,162,2.233,163,2.233,164,2.233,165,3.086,166,2.233,167,1.751,168,1.751,169,1.399,170,2.605,171,2.233,172,1.608,173,2.233,174,2.374,175,2.782,176,6.357,177,3.841,178,2.555,179,2.233,180,1.751,181,1.317,182,1.246,183,1.608,184,1.246,185,1.608,186,3.063,187,1.751,188,0.983,189,1.074,190,2.093,191,1.942,192,2.233,193,1.88,194,1.317,195,2.233,196,2.233,197,6.126,198,1.027,199,2.374,200,1.942,201,2.233,202,1.942,203,1.789,204,1.751,205,0.804,206,2.053,207,2.233,208,2.233,209,2.233,210,2.233,211,1.246,212,2.233,213,3.841,214,3.365,215,2.233,216,2.233,217,5.03,218,1.942,219,2.233,220,2.233,221,1.494,222,2.233,223,2.233,224,1.942,225,2.233,226,2.233,227,1.399,228,1.751,229,2.233,230,2.233,231,2.233,232,2.233,233,2.233,234,2.233,235,2.233,236,1.183,237,2.233,238,2.233]],["title/modules/AppModule.html",[70,1.156,239,2.886]],["body/modules/AppModule.html",[0,0.142,3,0.136,4,0.111,5,0.111,7,0.136,8,0.014,9,0.008,10,0.008,13,1.638,17,0.842,26,0.501,28,0.905,29,0.873,30,0.501,31,0.905,32,0.842,43,0.553,47,0.522,70,1.605,71,4.528,72,1.373,73,1.373,74,1.496,75,1.496,76,1.373,77,2.559,78,1.496,81,2.024,82,2.173,83,1.373,84,1.373,87,1.317,110,3.723,190,3.993,191,2.829,211,1.815,239,5.846,240,2.829,241,2.829,242,2.829,243,4.528,244,4.528,245,4.528,246,4.528,247,4.528,248,4.528,249,4.24,250,4.528,251,3.253,252,3.403,253,3.253,254,4.725,255,6.108,256,3.253,257,3.253,258,2.55,259,4.725,260,2.829,261,3.253,262,2.829,263,3.253,264,3.253,265,3.253,266,3.253,267,2.829,268,2.55,269,3.705,270,1.432,271,3.253,272,3.253,273,3.253,274,3.253,275,3.253,276,2.55,277,3.253]],["title/injectables/AppService.html",[88,0.749,250,2.682]],["body/injectables/AppService.html",[0,0.246,3,0.235,4,0.192,5,0.192,7,0.235,8,0.014,9,0.011,10,0.011,16,0.768,17,1.766,26,0.868,32,1.458,36,1.703,43,0.4,47,0.903,63,1.684,88,1.274,89,2.027,250,4.561,278,4.899,279,7.619,280,5.632,281,4.899,282,5.632]],["title/classes/Article.html",[0,0.175,283,2.365]],["body/classes/Article.html",[0,0.271,2,1.608,3,0.259,4,0.211,5,0.211,7,0.259,8,0.013,9,0.012,10,0.012,283,4.262,284,5.4]],["title/controllers/ArticleController.html",[11,1.389,285,2.886]],["body/controllers/ArticleController.html",[0,0.112,3,0.107,4,0.087,5,0.087,7,0.107,8,0.014,9,0.007,10,0.007,11,0.89,13,0.89,15,1.434,16,0.35,17,1.026,18,1.482,19,2.738,20,1.997,21,1.905,24,1.819,25,1.361,26,0.904,28,1.511,29,1.663,30,0.955,31,1.511,32,1.519,35,1.296,36,1.709,37,1.61,39,2.231,40,1.296,41,1.61,43,0.486,44,2.697,45,1.61,46,1.61,47,0.412,50,1.296,53,1.296,55,3.48,56,1.434,57,0.715,60,1.084,63,1.853,66,1.61,68,1.719,91,2.321,104,2.391,126,3.48,135,3.789,136,1.905,139,2.235,167,2.015,168,2.015,169,1.61,174,1.719,177,3.445,182,1.434,183,1.85,184,1.434,185,1.85,186,3.274,187,2.015,188,2.582,189,1.236,199,2.649,200,4.204,203,1.296,206,0.961,214,3.633,221,4.461,227,3.402,228,5.228,236,2.098,283,3.461,285,2.852,286,2.235,287,2.56,288,2.569,289,4.045,290,4.724,291,2.569,292,2.569,293,4.577,294,3.96,295,3.96,296,2.481,297,3.96,298,3.106,299,4.832,300,2.569,301,3.96,302,2.569,303,2.235,304,2.569,305,2.569,306,2.738,307,4.258,308,2.569,309,1.516,310,4.461,311,2.569,312,2.569,313,1.85,314,2.697,315,2.235,316,3.106,317,3.96,318,2.569,319,2.569,320,2.569,321,1.719,322,2.569,323,2.569,324,5.102,325,5.102,326,2.569,327,2.235,328,2.569,329,2.569,330,2.569,331,2.015,332,2.569,333,2.569,334,2.569,335,2.569,336,2.235,337,2.569,338,2.569,339,1.719,340,2.015,341,2.569,342,2.569]],["title/modules/ArticleModule.html",[70,1.156,243,2.682]],["body/modules/ArticleModule.html",[0,0.214,3,0.205,4,0.167,5,0.167,7,0.205,8,0.014,9,0.011,10,0.011,13,2.168,43,0.533,47,0.786,70,1.987,72,2.069,73,2.069,74,2.255,75,2.255,76,2.069,77,3.167,78,2.255,81,2.292,82,2.876,83,2.069,84,2.069,243,5.275,270,2.159,285,4.96,314,4.277,315,4.265,343,4.265,344,4.265,345,4.903,346,4.903,347,3.845,348,3.154]],["title/injectables/ArticleService.html",[88,0.749,314,2.237]],["body/injectables/ArticleService.html",[0,0.104,3,0.099,4,0.081,5,0.081,7,0.099,8,0.014,9,0.006,10,0.006,16,0.323,17,0.963,18,1.391,19,2.621,20,1.875,21,1.789,26,1,28,1.744,29,1.682,30,0.966,31,1.744,32,1.623,35,1.875,36,1.668,39,2.729,40,1.875,43,0.474,47,0.38,50,1.194,53,1.194,54,1.194,61,0.959,63,1.874,81,1.554,87,0.959,88,0.695,89,0.853,91,2.147,93,1.338,94,1.255,96,1.789,99,3.535,100,3.444,102,3.159,104,1.637,123,1.789,157,3.477,188,1.043,189,1.14,193,1.969,203,2.621,205,2.157,206,1.717,221,1.585,227,1.484,270,1.043,283,3.332,287,1.255,289,3.926,293,2.487,306,1.194,310,1.585,314,2.075,316,2.915,331,1.857,348,3.16,349,2.06,350,4.589,351,3.718,352,3.718,353,3.718,354,2.369,355,2.369,356,2.369,357,2.369,358,2.369,359,2.369,360,3.718,361,2.369,362,3.718,363,6.489,364,2.369,365,2.487,366,3.718,367,2.369,368,1.398,369,3.598,370,2.06,371,1.398,372,2.369,373,3.718,374,2.369,375,2.369,376,1.857,377,1.585,378,1.585,379,4.589,380,2.369,381,1.706,382,2.06,383,2.369,384,2.369,385,2.915,386,2.369,387,2.369,388,4.589,389,3.256,390,2.06,391,2.369,392,2.369]],["title/classes/Auth.html",[0,0.175,393,2.886]],["body/classes/Auth.html",[0,0.271,2,1.608,3,0.259,4,0.211,5,0.211,7,0.259,8,0.013,9,0.012,10,0.012,393,5.202,394,5.4]],["title/modules/AuthModule.html",[70,1.156,244,2.682]],["body/modules/AuthModule.html",[0,0.152,3,0.146,4,0.119,5,0.119,7,0.146,8,0.014,9,0.008,10,0.008,13,1.721,43,0.555,47,0.559,70,1.668,72,1.47,73,1.47,74,1.602,75,1.602,76,1.47,77,2.66,78,2.66,81,2.072,82,2.283,83,1.47,84,1.47,87,1.411,110,3.87,170,4.536,190,4.088,198,2.283,244,5.397,249,4.34,252,3.575,260,3.031,262,3.031,269,2.732,270,1.534,371,2.056,377,2.331,378,2.331,395,3.031,396,3.031,397,3.031,398,3.484,399,4.635,400,4.635,401,4.34,402,3.494,403,3.484,404,4.166,405,3.031,406,4.965,407,2.183,408,2.509,409,3.484,410,3.484,411,3.575,412,3.484,413,3.031,414,2.509,415,3.484,416,3.484,417,3.484,418,3.031,419,3.484]],["title/injectables/AuthService.html",[88,0.749,170,2.365]],["body/injectables/AuthService.html",[0,0.146,3,0.14,4,0.114,5,0.114,7,0.14,8,0.014,9,0.008,10,0.008,16,0.456,17,1.249,26,0.954,28,1.722,29,1.661,30,0.954,31,1.722,32,1.465,36,1.708,43,0.501,47,0.537,61,2.291,63,1.691,88,0.901,89,1.204,91,2.363,93,1.736,100,3.446,113,4.919,123,3.288,132,1.954,147,3.121,152,2.218,170,2.845,180,2.624,181,1.974,188,2.725,189,1.61,193,2.996,205,1.736,206,1.804,270,1.473,306,3.308,348,3.552,368,1.974,381,2.409,385,2.624,402,3.121,414,2.409,420,2.91,421,4.823,422,4.823,423,3.346,424,3.814,425,5.655,426,3.346,427,4.823,428,3.346,429,4.823,430,3.346,431,4.823,432,4.919,433,3.346,434,4.195,435,3.782,436,2.624,437,3.346,438,3.346,439,4.823,440,4.195,441,2.692,442,3.346,443,2.238,444,2.91,445,2.91,446,2.91,447,3.346,448,2.91,449,3.346,450,3.346]],["title/classes/CreateAlertDto.html",[0,0.175,23,2.511]],["body/classes/CreateAlertDto.html",[0,0.214,2,1.266,3,0.204,4,0.166,5,0.166,7,0.204,8,0.014,9,0.01,10,0.01,16,0.666,23,3.91,24,2.247,26,1.117,30,1.117,36,1.811,43,0.347,57,1.36,236,3.643,451,6.513,452,3.833,453,2.163,454,5.983,455,5.983,456,6.878,457,4.275,458,3.659,459,4.888,460,4.888,461,4.888,462,4.888]],["title/classes/CreateArticleDto.html",[0,0.175,289,2.511]],["body/classes/CreateArticleDto.html",[0,0.143,2,0.846,3,0.137,4,0.111,5,0.111,7,0.137,8,0.014,9,0.008,10,0.008,16,0.445,24,2.413,26,1.2,30,1.2,36,2.03,43,0.232,57,0.909,136,2.684,199,3.732,289,2.969,389,3.495,453,1.643,457,3.611,458,3.771,463,6.812,464,2.561,465,4.853,466,4.018,467,4.375,468,4.853,469,4.853,470,4.853,471,4.375,472,4.853,473,4.853,474,4.375,475,4.853,476,4.018,477,3.267,478,2.841,479,3.267,480,2.841,481,3.267,482,3.267,483,3.267,484,3.267,485,2.841,486,3.267,487,3.267,488,3.267,489,3.267,490,3.267,491,3.267]],["title/classes/CreateImageDto.html",[0,0.175,492,2.886]],["body/classes/CreateImageDto.html",[0,0.27,2,1.601,3,0.258,4,0.21,5,0.21,7,0.258,8,0.013,9,0.012,10,0.012,492,5.189,493,5.378,494,4.848]],["title/classes/CreateMessageDto.html",[0,0.175,495,2.511]],["body/classes/CreateMessageDto.html",[0,0.172,2,1.017,3,0.164,4,0.134,5,0.134,7,0.164,8,0.014,9,0.009,10,0.009,16,0.535,24,2.06,26,1.024,30,1.21,36,1.876,39,2.391,43,0.279,57,1.092,102,3.306,136,3.196,203,3.512,211,4.191,236,2.86,281,4.696,321,4.659,453,1.871,458,3.203,495,3.382,496,6.058,497,3.079,498,6.169,499,6.169,500,5.779,501,5.889,502,4.704,503,3.926,504,4.696,505,4.696,506,3.926,507,5.779,508,3.611,509,3.926,510,5.398,511,5.398,512,3.926]],["title/classes/CreatePageDto.html",[0,0.175,513,2.511]],["body/classes/CreatePageDto.html",[0,0.204,2,1.211,3,0.195,4,0.159,5,0.159,7,0.195,8,0.014,9,0.01,10,0.01,16,0.638,24,2.29,26,1.138,30,1.138,36,1.989,43,0.332,57,1.301,389,4.219,453,2.103,458,3.687,466,4.85,471,5.281,474,5.281,476,4.85,513,3.801,514,6.583,515,3.667,516,4.677,517,4.677,518,4.677,519,4.677,520,4.677]],["title/classes/CreateUtilisateurDto.html",[0,0.175,147,2.021]],["body/classes/CreateUtilisateurDto.html",[0,0.142,2,0.844,3,0.136,4,0.111,5,0.111,7,0.136,8,0.014,9,0.008,10,0.008,16,0.444,24,2.22,26,1.125,30,1.125,36,1.93,43,0.336,55,2.347,57,0.907,132,2.63,136,3.444,147,2.387,152,1.499,188,2.453,189,1.568,198,2.176,293,2.181,306,2.81,453,1.64,457,3.831,458,3.356,500,6.228,502,4.904,508,3.166,521,6.448,522,2.347,523,4.344,524,5.572,525,3.491,526,4.013,527,4.344,528,3.728,529,4.676,530,4.733,531,4.733,532,4.878,533,3.408,534,4.733,535,3.26,536,4.733,537,3.26,538,4.117,539,2.835,540,3.711,541,3.711,542,3.26,543,4.733,544,4.733,545,3.26,546,4.733,547,2.835,548,4.733,549,4.733,550,3.26,551,3.26,552,4.733,553,3.26]],["title/classes/CreateVisitorDto.html",[0,0.175,554,2.886]],["body/classes/CreateVisitorDto.html",[0,0.27,2,1.601,3,0.258,4,0.21,5,0.21,7,0.258,8,0.013,9,0.012,10,0.012,554,5.189,555,5.378,556,4.848]],["title/classes/Image.html",[0,0.175,557,2.682]],["body/classes/Image.html",[0,0.271,2,1.608,3,0.259,4,0.211,5,0.211,7,0.259,8,0.013,9,0.012,10,0.012,557,4.832,558,5.4]],["title/controllers/ImagesController.html",[11,1.389,559,2.886]],["body/controllers/ImagesController.html",[0,0.115,3,0.11,4,0.09,5,0.222,7,0.11,8,0.014,9,0.007,10,0.007,11,0.914,13,0.914,15,1.471,16,0.359,17,1.046,24,1.253,25,1.397,26,0.848,28,1.531,29,1.593,30,0.965,31,1.531,32,1.425,36,1.758,39,1.981,43,0.463,45,1.652,46,3.076,47,0.423,56,1.471,57,0.733,60,1.113,61,1.068,63,1.468,70,0.76,91,2.335,99,2.601,102,2.162,104,1.161,126,2.909,152,1.212,175,3.168,202,2.293,205,1.768,206,2.22,211,2.741,283,1.555,293,1.764,296,1.652,298,3.168,365,3.285,368,1.555,441,1.471,453,0.914,501,2.067,505,2.293,533,3.536,557,4.498,559,2.909,560,2.293,561,2.293,562,4.039,563,4.039,564,4.039,565,2.636,566,4.039,567,2.636,568,4.272,569,4.039,570,2.636,571,3.514,572,4.039,573,4.788,574,2.636,575,2.636,576,2.636,577,4.039,578,2.636,579,2.636,580,2.636,581,2.636,582,4.039,583,3.076,584,2.293,585,2.636,586,2.293,587,1.898,588,4.039,589,2.636,590,2.636,591,3.514,592,2.636,593,2.293,594,3.514,595,1.898,596,2.636,597,2.636,598,2.636,599,2.293,600,2.636,601,2.636,602,2.636,603,2.636,604,2.293,605,3.168,606,2.636,607,2.636,608,2.636,609,1.898,610,2.067,611,2.636,612,2.636,613,2.636,614,2.636,615,2.636,616,2.293,617,2.636,618,2.636,619,4.039,620,2.636,621,2.636,622,4.039,623,2.636,624,2.636,625,2.636,626,2.636,627,2.636,628,2.293,629,2.636,630,2.636,631,2.636,632,4.039,633,2.636,634,2.636,635,2.636,636,2.636,637,2.636,638,2.293,639,2.067,640,2.636,641,2.293,642,2.636,643,2.636,644,2.636,645,2.636,646,2.636,647,2.636,648,2.636,649,2.636,650,2.636,651,2.293,652,1.898,653,2.293,654,2.636,655,2.636,656,2.636,657,2.636,658,2.293,659,2.293,660,2.636]],["title/modules/ImagesModule.html",[70,1.156,245,2.682]],["body/modules/ImagesModule.html",[0,0.206,3,0.197,4,0.16,5,0.16,7,0.197,8,0.014,9,0.01,10,0.01,13,2.111,43,0.539,47,0.755,70,1.948,72,1.986,73,1.986,74,2.164,75,2.164,76,1.986,77,3.106,78,2.164,81,2.267,82,2.801,83,1.986,84,1.986,87,1.906,245,5.332,270,2.072,314,4.231,348,3.072,559,4.864,583,4.749,584,4.093,661,4.093,662,4.093,663,4.706,664,4.706,665,4.093]],["title/injectables/ImagesService.html",[88,0.749,583,2.511]],["body/injectables/ImagesService.html",[0,0.092,3,0.088,4,0.071,5,0.144,7,0.088,8,0.014,9,0.006,10,0.006,16,0.286,17,0.873,21,1.622,26,0.988,28,1.728,29,1.667,30,0.957,31,1.728,32,1.546,36,1.878,39,2.236,43,0.441,47,0.336,61,1.964,63,1.857,81,1.45,87,0.848,88,0.63,89,0.754,91,2.418,93,1.213,94,1.109,96,1.622,99,1.109,100,3.132,102,2.5,104,1.862,135,2.643,152,2.23,193,3.008,205,2.369,206,2.323,211,1.169,283,3.35,314,3.332,365,2.83,368,1.235,389,1.312,390,1.822,441,2.361,443,1.401,453,1.168,557,1.401,561,4.218,568,2.932,571,4.623,573,5.724,583,2.112,591,2.932,610,3.317,616,3.68,639,2.643,641,2.932,651,1.822,652,3.827,658,1.822,659,3.68,665,1.822,666,1.822,667,4.23,668,3.371,669,3.371,670,3.371,671,3.371,672,3.371,673,3.371,674,3.371,675,3.371,676,4.23,677,2.094,678,1.881,679,2.255,680,3.371,681,2.094,682,3.371,683,2.094,684,3.371,685,2.094,686,3.371,687,2.094,688,3.371,689,2.094,690,3.371,691,2.094,692,2.094,693,4.23,694,2.094,695,2.094,696,4.849,697,2.094,698,2.094,699,2.094,700,2.094,701,4.849,702,2.094,703,3.371,704,2.094,705,2.094,706,2.094,707,2.094,708,3.371,709,4.23,710,4.23,711,3.371,712,3.371,713,2.094,714,2.094,715,2.094,716,2.094,717,2.094,718,2.094,719,3.371,720,2.094,721,2.094,722,2.094,723,4.23,724,2.094,725,1.822,726,2.094,727,2.094,728,2.094,729,2.094,730,2.094,731,2.094,732,3.371,733,2.094,734,1.822,735,2.094,736,2.094,737,2.094,738,2.094,739,2.094,740,1.642,741,2.094,742,1.508,743,1.642,744,2.094]],["title/injectables/JwtAuthGuard.html",[88,0.749,182,2.237]],["body/injectables/JwtAuthGuard.html",[0,0.257,3,0.245,4,0.2,5,0.2,7,0.245,8,0.014,9,0.012,10,0.012,43,0.497,47,0.941,88,1.306,89,2.113,182,3.901,407,3.678,745,5.107,746,4.604,747,5.107,748,2.478,749,5.871]],["title/injectables/JwtStrategy.html",[88,0.749,399,2.682]],["body/injectables/JwtStrategy.html",[0,0.207,3,0.198,4,0.161,5,0.161,7,0.198,8,0.014,9,0.01,10,0.01,16,0.646,17,1.584,26,0.943,28,1.317,29,1.271,30,0.73,31,1.317,32,1.226,43,0.509,47,0.759,63,1.416,88,1.143,89,1.704,91,2.179,93,2.439,104,2.085,132,1.918,204,3.713,296,2.966,306,2.388,371,2.794,378,3.168,399,4.092,407,2.966,408,3.41,445,4.119,748,1.998,750,4.119,751,5.32,752,4.735,753,6.116,754,4.735,755,4.119,756,4.735,757,4.119,758,3.713,759,4.796,760,4.119,761,3.713,762,4.735,763,4.735,764,4.735,765,4.735,766,4.735,767,4.735,768,4.735,769,4.735,770,4.735]],["title/injectables/LocalAuthGuard.html",[88,0.749,172,2.886]],["body/injectables/LocalAuthGuard.html",[0,0.257,3,0.245,4,0.2,5,0.2,7,0.245,8,0.014,9,0.012,10,0.012,43,0.497,47,0.941,88,1.306,89,2.113,172,5.034,407,3.678,746,4.604,747,5.107,748,2.478,771,5.107,772,5.871]],["title/injectables/LocalStrategy.html",[88,0.749,400,2.682]],["body/injectables/LocalStrategy.html",[0,0.195,3,0.186,4,0.152,5,0.152,7,0.186,8,0.014,9,0.01,10,0.01,16,0.608,17,1.523,26,0.906,28,1.636,29,1.578,30,0.906,31,1.636,32,1.154,36,1.866,43,0.497,47,0.715,60,1.881,63,1.333,88,1.099,89,1.604,91,2.116,93,1.604,100,2.965,123,3.165,132,1.805,152,2.049,170,4.406,198,3.217,205,1.604,206,1.667,400,3.933,405,3.877,407,2.792,434,5.114,441,2.487,525,2.792,748,1.881,751,5.114,755,3.877,757,3.877,758,3.495,760,3.877,761,3.495,773,3.877,774,4.457,775,4.457,776,5.879,777,4.457,778,4.457,779,3.877,780,4.457,781,4.457,782,4.457]],["title/classes/LoginDto.html",[0,0.175,178,2.886]],["body/classes/LoginDto.html",[0,0.221,2,1.312,3,0.212,4,0.172,5,0.172,7,0.212,8,0.014,9,0.011,10,0.011,16,0.691,24,1.981,26,0.984,30,0.984,36,1.835,43,0.36,57,1.41,123,3.533,132,3.066,136,3.533,178,4.599,198,3.377,453,2.213,458,3.216,502,4.001,525,4.381,538,5.556,783,4.408,784,5.008,785,5.067,786,5.067]],["title/modules/MailModule.html",[70,1.156,246,2.682]],["body/modules/MailModule.html",[0,0.179,3,0.171,4,0.139,5,0.139,7,0.171,8,0.014,9,0.009,10,0.009,43,0.518,47,0.657,70,1.95,72,1.729,73,1.729,74,1.883,75,1.883,76,1.729,77,2.9,78,2.9,82,2.555,83,1.729,84,1.729,91,1.318,123,1.97,152,1.883,211,2.286,246,4.987,252,4.001,267,4.833,268,3.212,296,2.566,393,2.949,424,4.412,432,3.563,787,3.563,788,3.563,789,3.563,790,4.096,791,4.096,792,4.357,793,3.212,794,5.556,795,4.096,796,5.556,797,4.096,798,6.306,799,4.096,800,4.096,801,4.096,802,4.096,803,4.096,804,5.556,805,4.096,806,3.563,807,4.096,808,4.096,809,4.096,810,4.096,811,4.096,812,4.096,813,3.563,814,4.096,815,4.096,816,4.096,817,4.096,818,4.096,819,4.096]],["title/injectables/MailService.html",[88,0.749,424,2.237]],["body/injectables/MailService.html",[0,0.172,3,0.165,4,0.134,5,0.134,7,0.165,8,0.014,9,0.009,10,0.009,16,0.538,17,1.403,26,0.953,28,1.721,29,1.787,30,0.953,31,1.721,32,1.403,36,1.801,43,0.44,47,0.633,60,1.666,88,1.012,89,1.421,91,2.319,93,1.421,123,1.899,132,2.194,147,3.357,180,3.095,181,2.328,203,3.635,205,1.95,206,2.027,321,2.64,365,4.138,424,3.023,446,3.433,678,2.203,792,3.095,793,3.095,813,3.433,820,3.433,821,5.417,822,5.417,823,3.947,824,7.208,825,3.947,826,5.417,827,3.947,828,5.417,829,3.947,830,3.947,831,5.417,832,3.901,833,5.417,834,3.947,835,3.433,836,3.947,837,3.947,838,2.842,839,3.433,840,3.947,841,3.947,842,3.947,843,3.947,844,3.947,845,3.433,846,3.947,847,3.947,848,3.433,849,3.947,850,3.947,851,3.947,852,3.947]],["title/classes/Message.html",[0,0.175,236,2.123]],["body/classes/Message.html",[0,0.271,2,1.608,3,0.259,4,0.211,5,0.211,7,0.259,8,0.013,9,0.012,10,0.012,236,3.827,853,5.4]],["title/controllers/MessagesController.html",[11,1.389,854,2.886]],["body/controllers/MessagesController.html",[0,0.153,3,0.147,4,0.119,5,0.119,7,0.147,8,0.014,9,0.008,10,0.008,11,1.216,13,1.216,15,1.958,16,0.478,17,1.292,18,1.867,19,3.189,20,2.516,21,2.4,24,2.072,25,3.076,26,1.03,28,1.76,29,1.698,30,0.975,31,1.76,32,1.731,35,1.769,36,1.924,37,3.126,39,2.5,40,1.769,41,3.126,43,0.475,44,2.785,45,2.198,46,2.198,47,0.563,50,1.769,53,1.769,61,1.421,62,2.751,63,1.998,66,2.198,68,2.347,93,1.263,99,2.643,169,2.198,193,2.643,203,2.928,205,1.263,270,1.545,287,2.643,309,2.07,313,2.526,339,3.338,348,2.928,495,3.962,854,3.593,855,3.052,856,3.508,857,3.508,858,3.508,859,3.508,860,3.508,861,3.508,862,4.885,863,3.508,864,3.638,865,3.052,866,3.913,867,3.508,868,3.508,869,3.052,870,3.508,871,3.508,872,3.508,873,3.508,874,3.508,875,3.052,876,3.508,877,3.508]],["title/modules/MessagesModule.html",[70,1.156,247,2.682]],["body/modules/MessagesModule.html",[0,0.214,3,0.205,4,0.167,5,0.167,7,0.205,8,0.014,9,0.011,10,0.011,13,2.168,43,0.533,47,0.786,70,1.987,72,2.069,73,2.069,74,2.255,75,2.255,76,2.069,77,3.167,78,2.255,81,2.292,82,2.876,83,2.069,84,2.069,87,1.986,247,5.275,270,2.159,348,3.154,854,4.96,864,4.801,865,4.265,878,4.265,879,4.265,880,4.903,881,4.903]],["title/injectables/MessagesService.html",[88,0.749,864,2.511]],["body/injectables/MessagesService.html",[0,0.138,3,0.132,4,0.107,5,0.107,7,0.132,8,0.014,9,0.008,10,0.008,16,0.43,17,1.196,18,1.727,19,3.034,20,2.328,21,2.221,26,1.032,28,1.782,29,1.719,30,0.987,31,1.782,32,1.659,35,2.328,39,2.684,40,2.328,43,0.455,47,0.505,50,1.589,53,1.589,54,1.589,60,1.33,61,1.276,63,1.799,81,1.799,87,1.276,88,0.863,89,1.134,91,2.489,93,1.134,94,1.669,96,2.221,99,2.446,100,3.709,102,3.186,205,1.662,206,2.045,236,1.669,287,2.895,309,1.859,321,3.089,369,3.621,495,4.013,504,4.017,507,4.017,862,4.627,864,2.893,866,3.621,882,2.741,883,3.151,884,4.617,885,3.151,886,3.151,887,3.151,888,3.151,889,3.151,890,4.017,891,3.151,892,3.151,893,3.151,894,3.151,895,3.151,896,3.151,897,3.151,898,3.151,899,3.151,900,3.151,901,3.151]],["title/controllers/PagesController.html",[11,1.389,902,2.886]],["body/controllers/PagesController.html",[0,0.124,3,0.118,4,0.096,5,0.096,7,0.118,8,0.014,9,0.007,10,0.007,11,0.982,13,0.982,15,1.581,16,0.386,17,1.105,18,1.92,19,2.88,20,2.152,21,2.469,24,1.9,25,2.26,26,0.944,28,1.589,29,1.793,30,0.88,31,1.589,32,1.587,35,1.429,36,1.758,37,2.673,39,2.318,40,1.429,41,1.775,43,0.5,44,2.864,45,1.775,46,1.775,47,0.454,50,1.429,53,1.429,55,4.113,56,1.581,57,0.788,60,1.196,61,1.148,63,1.832,66,1.775,91,2.263,104,2.259,167,2.222,169,1.775,174,1.895,182,1.581,183,2.04,184,1.581,185,2.04,186,3.188,187,2.222,188,3.37,189,1.363,214,3.433,227,4.407,287,2.719,306,3.831,307,5.048,309,1.672,313,2.04,339,1.895,340,3.346,513,4.033,678,2.864,679,3.433,902,3.073,903,2.465,904,2.833,905,2.465,906,5.6,907,2.833,908,2.833,909,2.833,910,2.833,911,2.833,912,2.833,913,4.6,914,2.833,915,2.833,916,3.215,917,2.465,918,3.346,919,2.833,920,2.833,921,5.132,922,2.833,923,2.833,924,2.833,925,2.833,926,2.833]],["title/modules/PagesModule.html",[70,1.156,248,2.682]],["body/modules/PagesModule.html",[0,0.214,3,0.205,4,0.167,5,0.167,7,0.205,8,0.014,9,0.011,10,0.011,13,2.168,43,0.533,47,0.786,70,1.987,72,2.069,73,2.069,74,2.255,75,2.255,76,2.069,77,3.167,78,2.255,81,2.292,82,2.876,83,2.069,84,2.069,87,1.986,248,5.275,270,2.159,348,3.154,902,4.96,916,4.801,917,4.265,927,4.265,928,4.265,929,4.903,930,4.903]],["title/injectables/PagesService.html",[88,0.749,916,2.511]],["body/injectables/PagesService.html",[0,0.126,3,0.12,4,0.098,5,0.098,7,0.12,8,0.014,9,0.007,10,0.007,16,0.392,17,1.118,18,1.614,19,2.902,20,2.176,21,2.076,26,1.035,28,1.801,29,1.738,30,0.998,31,1.801,32,1.677,35,2.176,39,2.72,40,2.176,43,0.46,47,0.692,50,1.45,53,1.45,54,1.45,60,1.214,63,2.008,81,1.721,87,1.165,88,0.806,89,1.035,91,2.451,93,1.035,94,1.524,96,2.492,99,2.744,100,3.684,102,3.11,152,2.382,205,2.22,206,2.307,287,2.286,309,2.546,368,1.697,441,2.89,443,3.465,513,3.863,652,5.087,734,3.754,905,3.754,913,4.621,916,2.703,918,3.384,931,2.502,932,4.315,933,2.876,934,2.876,935,4.315,936,5.179,937,2.876,938,2.876,939,2.876,940,2.876,941,2.876,942,2.876,943,2.876,944,2.876,945,5.179,946,4.315,947,2.876,948,4.315,949,4.315]],["title/controllers/PasswordResetController.html",[11,1.389,404,2.886]],["body/controllers/PasswordResetController.html",[0,0.118,3,0.113,4,0.092,5,0.092,7,0.113,8,0.014,9,0.007,10,0.007,11,0.938,13,0.938,15,1.511,16,0.369,17,1.067,24,1.278,25,1.434,26,0.635,28,1.147,29,1.106,30,0.635,31,1.147,32,1.067,43,0.519,44,2.786,47,0.434,56,1.511,57,0.753,61,2.26,63,0.809,83,2.107,91,2.035,93,0.974,100,2.078,104,1.192,132,2.022,152,2.566,169,1.696,174,1.811,182,1.511,184,1.511,186,2.786,188,1.192,189,1.302,193,2.956,198,2.909,203,2.517,205,1.484,206,2.088,214,2.757,270,1.192,348,2.517,401,3.127,402,2.517,404,2.968,411,3.594,413,2.355,414,1.949,418,2.355,424,2.786,436,2.123,441,3.114,444,3.585,523,1.811,532,4.324,533,2.968,540,2.123,541,2.123,599,2.355,604,2.355,605,4.376,740,2.123,742,1.949,759,2.123,950,3.914,951,2.355,952,4.122,953,3.585,954,2.707,955,4.018,956,4.122,957,2.707,958,2.707,959,2.707,960,4.018,961,2.707,962,2.707,963,6.005,964,2.355,965,4.122,966,2.707,967,2.707,968,2.707,969,2.707,970,2.707,971,2.707,972,2.707,973,4.122,974,2.707,975,2.707,976,2.707,977,4.991,978,2.707,979,3.585,980,2.707,981,4.122,982,2.707,983,2.355,984,4.122,985,4.342,986,2.707,987,4.854,988,3.496,989,2.707,990,2.707,991,2.707,992,2.707,993,2.707,994,2.707,995,2.707,996,5.58,997,2.707,998,2.707,999,2.707,1000,2.707,1001,2.707,1002,2.355,1003,2.355,1004,2.707,1005,4.122,1006,2.707,1007,2.707,1008,2.707,1009,2.707,1010,2.707,1011,2.707,1012,2.707,1013,4.122,1014,2.707,1015,2.707,1016,2.707,1017,4.122,1018,2.355,1019,2.707,1020,2.707,1021,2.707,1022,2.707,1023,2.707,1024,2.707,1025,2.707]],["title/injectables/PasswordResetService.html",[88,0.749,401,2.511]],["body/injectables/PasswordResetService.html",[0,0.129,3,0.124,4,0.101,5,0.101,7,0.124,8,0.014,9,0.007,10,0.007,16,0.403,17,1.14,26,0.899,28,1.623,29,1.565,30,0.899,31,1.623,32,1.363,36,1.913,39,1.064,43,0.465,47,0.474,61,2.362,63,1.574,81,1.744,83,1.858,87,1.197,88,0.823,89,1.064,91,2.104,93,1.585,94,1.565,96,2.118,99,1.565,100,2.22,104,1.301,132,2.526,152,2.42,193,3.589,198,3.007,203,3.707,205,1.894,206,1.969,211,1.649,270,1.301,296,1.851,348,3.416,368,1.743,371,1.743,376,2.317,377,2.946,378,1.977,401,2.758,402,3.416,408,2.128,411,4.492,414,2.128,424,3.781,436,2.317,441,2.457,454,2.57,457,1.743,725,2.57,740,3.453,742,3.171,743,4.127,839,2.57,950,4.891,953,3.83,1026,2.57,1027,4.403,1028,4.403,1029,2.955,1030,4.403,1031,2.955,1032,4.403,1033,2.955,1034,4.403,1035,2.955,1036,3.83,1037,4.403,1038,2.955,1039,2.955,1040,4.403,1041,2.955,1042,2.955,1043,2.955,1044,2.955,1045,2.955,1046,2.955,1047,2.955,1048,2.955,1049,2.955,1050,4.403,1051,2.955,1052,2.955]],["title/classes/PrismaClientExceptionFilter.html",[0,0.175,1053,3.143]],["body/classes/PrismaClientExceptionFilter.html",[0,0.189,2,1.118,3,0.18,4,0.147,5,0.147,7,0.18,8,0.014,9,0.01,10,0.01,16,0.589,17,1.491,26,0.665,28,1.201,29,1.159,30,0.665,31,1.201,32,1.118,43,0.491,47,0.692,54,2.177,96,2.077,199,3.851,205,2.487,236,3.431,258,3.385,325,5.007,327,3.755,336,3.755,587,3.109,678,3.213,742,4.664,743,3.385,748,2.429,806,6.009,964,3.755,1053,4.514,1054,5.007,1055,6.009,1056,5.007,1057,3.755,1058,6.476,1059,5.757,1060,6.476,1061,6.908,1062,4.317,1063,4.317,1064,3.385,1065,4.317,1066,4.317,1067,4.317,1068,4.317,1069,4.317,1070,4.317,1071,3.755,1072,4.317,1073,3.755,1074,4.317,1075,4.317,1076,4.317,1077,5.007,1078,3.755,1079,4.317]],["title/modules/PrismaModule.html",[70,1.156,1080,2.886]],["body/modules/PrismaModule.html",[0,0.227,3,0.217,4,0.177,5,0.177,7,0.217,8,0.014,9,0.011,10,0.011,43,0.461,47,0.832,70,2.039,72,2.19,73,2.19,74,2.386,75,2.386,76,2.19,77,3.251,78,3.251,81,2.447,82,2.981,83,2.19,84,2.19,1080,5.68,1081,4.513,1082,4.513,1083,5.188,1084,5.188,1085,5.188]],["title/injectables/PrismaService.html",[81,1.199,88,0.749]],["body/injectables/PrismaService.html",[0,0.194,3,0.186,4,0.151,5,0.151,7,0.186,8,0.014,9,0.01,10,0.01,16,0.606,17,1.52,26,0.904,28,1.236,29,1.193,30,0.685,31,1.236,32,1.151,43,0.417,47,0.713,54,2.241,81,1.755,88,1.096,89,1.6,91,2.248,93,2.365,206,1.662,365,2.973,532,5.032,533,4.731,748,2.476,761,3.484,838,3.2,1002,3.865,1003,3.865,1086,3.865,1087,6.57,1088,5.868,1089,4.444,1090,5.868,1091,6.988,1092,4.444,1093,4.444,1094,5.868,1095,4.444,1096,4.444,1097,4.444,1098,4.444,1099,4.444,1100,4.444,1101,3.865,1102,5.104,1103,4.444,1104,4.444,1105,4.444,1106,4.444,1107,4.444,1108,4.444,1109,4.444,1110,4.444]],["title/guards/RoleGuard.html",[186,2.237,1111,3.143]],["body/guards/RoleGuard.html",[0,0.179,3,0.171,4,0.139,5,0.139,7,0.171,8,0.014,9,0.009,10,0.009,16,0.557,17,1.436,26,0.855,28,1.543,29,1.489,30,0.855,31,1.543,32,1.058,43,0.502,47,0.655,61,1.654,63,1.883,88,1.036,93,1.996,123,1.965,168,3.203,184,2.28,186,3.095,188,1.798,189,1.965,193,2.938,203,2.797,205,2.542,211,2.28,270,1.798,276,3.203,296,2.559,306,2.06,348,3.757,371,2.41,376,3.203,377,2.733,378,2.733,381,2.941,385,3.203,408,2.941,845,3.553,869,4.824,1036,4.824,1064,3.203,1112,4.085,1113,3.553,1114,6.754,1115,4.085,1116,7.283,1117,4.085,1118,5.546,1119,6.754,1120,4.085,1121,5.546,1122,4.085,1123,4.085,1124,4.085,1125,4.085,1126,4.085,1127,4.085,1128,4.085]],["title/classes/UpdateAlertDto.html",[0,0.175,52,2.682]],["body/classes/UpdateAlertDto.html",[0,0.257,2,1.521,3,0.245,4,0.2,5,0.2,7,0.245,8,0.014,9,0.012,10,0.012,18,2.197,23,3.678,43,0.497,51,4.604,52,4.676,57,1.633,452,4.604,748,2.478,1129,5.107,1130,3.277,1131,5.871]],["title/classes/UpdateArticleDto.html",[0,0.175,310,2.682]],["body/classes/UpdateArticleDto.html",[0,0.192,2,0.761,3,0.123,4,0.1,5,0.1,7,0.123,8,0.014,9,0.007,10,0.007,16,0.401,18,1.099,24,2.371,26,1.179,30,1.179,36,2.008,43,0.413,57,0.817,136,2.523,199,3.509,289,1.84,310,2.933,316,2.303,389,3.285,453,1.519,457,3.431,458,3.542,464,2.303,465,4.562,466,3.777,467,4.113,468,4.562,469,4.562,470,4.562,471,4.113,472,4.562,473,4.562,474,4.113,475,4.562,476,3.777,478,2.555,480,2.555,485,2.555,748,1.24,1130,1.639,1132,6.7,1133,7.514,1134,2.938,1135,2.938,1136,4.384,1137,2.938,1138,2.938,1139,2.938,1140,2.938,1141,2.938,1142,2.938,1143,2.938,1144,2.938,1145,2.938,1146,2.938,1147,2.115,1148,1.965,1149,5.245,1150,7.702,1151,7.585,1152,2.555,1153,2.938]],["title/classes/UpdateImageDto.html",[0,0.175,1154,3.143]],["body/classes/UpdateImageDto.html",[0,0.257,2,1.521,3,0.245,4,0.2,5,0.2,7,0.245,8,0.014,9,0.012,10,0.012,18,2.197,43,0.497,57,1.633,492,4.228,494,4.604,748,2.478,1130,3.277,1154,5.481,1155,5.107,1156,5.871,1157,5.871]],["title/classes/UpdateMessageDto.html",[0,0.175,862,2.682]],["body/classes/UpdateMessageDto.html",[0,0.257,2,1.521,3,0.245,4,0.2,5,0.2,7,0.245,8,0.014,9,0.012,10,0.012,18,2.197,43,0.497,57,1.633,495,3.678,497,4.604,748,2.478,862,4.676,866,4.604,1130,3.277,1158,5.107,1159,5.871]],["title/classes/UpdatePageDto.html",[0,0.175,913,2.682]],["body/classes/UpdatePageDto.html",[0,0.217,2,1.286,3,0.208,4,0.169,5,0.169,7,0.208,8,0.014,9,0.011,10,0.011,16,0.677,18,1.858,24,2.149,26,1.068,30,1.068,36,1.921,43,0.448,57,1.382,389,4.341,453,2.186,458,3.592,466,4.99,476,4.99,513,3.112,515,3.895,748,2.096,913,4.219,918,3.895,1130,2.772,1160,6.341,1161,4.968,1162,4.968,1163,4.968,1164,4.968]],["title/classes/UpdatePasswordUtilisateurDto.html",[0,0.175,1165,2.682]],["body/classes/UpdatePasswordUtilisateurDto.html",[0,0.22,2,1.304,3,0.21,4,0.171,5,0.171,7,0.21,8,0.014,9,0.011,10,0.011,16,0.686,18,1.883,24,1.972,26,0.98,30,0.98,36,1.83,43,0.495,57,1.4,147,3.207,181,2.97,198,3.206,453,2.204,458,3.474,522,3.625,539,4.378,748,2.124,1130,3.549,1147,3.625,1148,3.367,1165,4.255,1166,5.467,1167,6.972,1168,6.972,1169,5.034]],["title/classes/UpdateUtilisateurDto.html",[0,0.175,1170,2.682]],["body/classes/UpdateUtilisateurDto.html",[0,0.179,2,1.058,3,0.171,4,0.139,5,0.139,7,0.171,8,0.014,9,0.009,10,0.009,16,0.557,18,1.528,24,2.31,26,1.148,30,1.148,36,1.999,43,0.48,57,1.136,132,2.551,147,2.06,181,2.41,188,1.798,189,1.965,453,1.922,458,3.696,522,2.941,523,4.213,525,3.945,526,4.535,527,4.213,528,4.213,529,4.535,547,3.553,748,1.724,1130,2.28,1147,2.941,1148,2.733,1166,5.944,1170,3.71,1171,4.085,1172,4.085,1173,4.085,1174,4.085,1175,4.085,1176,4.085,1177,4.085]],["title/classes/UpdateVisitorDto.html",[0,0.175,1178,2.886]],["body/classes/UpdateVisitorDto.html",[0,0.257,2,1.521,3,0.245,4,0.2,5,0.2,7,0.245,8,0.014,9,0.012,10,0.012,18,2.197,43,0.497,57,1.633,554,4.228,556,4.604,748,2.478,1130,3.277,1178,5.034,1179,5.107,1180,5.871,1181,5.871]],["title/classes/Utilisateur.html",[0,0.175,988,2.511]],["body/classes/Utilisateur.html",[0,0.179,2,1.058,3,0.171,4,0.139,5,0.139,7,0.171,8,0.014,9,0.009,10,0.009,16,0.557,24,2.383,26,1.184,30,1.184,36,1.975,39,2.267,43,0.29,96,1.965,102,2.442,132,2.551,306,3.175,453,1.922,457,3.985,467,4.938,525,3.945,527,4.213,528,4.213,595,4.535,988,3.474,1182,3.553,1183,6.297,1184,8.104,1185,4.085,1186,4.085,1187,4.085,1188,6.297,1189,4.085,1190,4.085,1191,4.085,1192,4.085,1193,4.085,1194,4.085]],["title/controllers/UtilisateursController.html",[11,1.389,1195,2.886]],["body/controllers/UtilisateursController.html",[0,0.105,3,0.1,4,0.082,5,0.082,7,0.1,8,0.014,9,0.006,10,0.006,11,0.833,13,0.833,15,1.341,16,0.328,17,0.974,18,1.406,19,2.641,20,1.896,21,1.808,24,2.022,25,1.991,26,1.005,28,1.753,29,1.691,30,1.057,31,1.753,32,1.689,35,1.211,36,1.84,37,1.505,39,2.347,40,1.211,41,1.505,43,0.487,44,2.584,45,1.505,46,1.505,47,0.385,50,1.211,53,1.896,56,1.341,57,0.668,60,1.014,61,0.973,62,1.884,63,1.95,66,1.505,68,1.607,102,2.871,132,1.876,147,3.177,157,1.607,169,1.505,174,1.607,175,2.948,181,2.732,182,1.341,183,1.73,184,1.341,185,1.73,186,3.741,188,2.306,189,1.156,198,1.105,213,3.27,214,4.362,221,3.098,227,3.777,228,2.948,287,2.453,290,5.244,293,1.607,298,1.884,303,2.09,306,2.641,309,1.417,313,1.73,331,1.884,339,1.607,340,2.948,402,2.335,453,0.833,609,1.73,906,5.964,1165,3.504,1170,4.75,1195,2.707,1196,2.09,1197,2.09,1198,4.631,1199,4.028,1200,3.759,1201,2.403,1202,5.685,1203,2.403,1204,2.403,1205,5.238,1206,2.403,1207,2.403,1208,2.403,1209,2.403,1210,2.403,1211,2.403,1212,2.403,1213,2.403,1214,2.403,1215,2.403,1216,2.403,1217,2.403,1218,2.403,1219,2.403,1220,2.403,1221,3.27,1222,2.403,1223,2.403,1224,2.403,1225,2.403,1226,2.09,1227,2.403,1228,2.403,1229,2.403,1230,2.403,1231,2.403,1232,2.403,1233,2.403,1234,2.403,1235,2.403,1236,2.403,1237,2.403,1238,2.403,1239,2.403,1240,2.403,1241,2.403,1242,2.403,1243,2.403]],["title/modules/UtilisateursModule.html",[70,1.156,249,2.511]],["body/modules/UtilisateursModule.html",[0,0.206,3,0.197,4,0.161,5,0.161,7,0.197,8,0.014,9,0.01,10,0.01,13,2.115,43,0.526,47,0.757,70,1.951,72,1.992,73,1.992,74,2.171,75,2.171,76,1.992,77,3.111,78,3.111,81,2.269,82,2.807,83,1.992,84,1.992,87,1.912,249,4.953,252,3.399,269,4.786,270,2.078,402,4.073,1195,4.872,1226,4.106,1244,4.106,1245,4.72,1246,4.106,1247,4.72,1248,4.72]],["title/injectables/UtilisateursService.html",[88,0.749,402,2.021]],["body/injectables/UtilisateursService.html",[0,0.068,3,0.065,4,0.053,5,0.053,7,0.065,8,0.014,9,0.004,10,0.004,16,0.212,17,0.684,19,2.039,20,1.331,21,1.27,26,0.915,28,1.597,29,1.541,30,0.915,31,1.597,32,1.486,35,1.331,36,1.228,39,2.688,40,1.331,43,0.422,47,0.25,50,0.786,53,1.331,54,0.786,60,0.658,61,0.631,63,1.647,81,1.209,87,0.631,88,0.493,89,0.561,91,2.378,93,0.561,94,0.826,96,1.27,99,3.04,100,3.288,102,3.068,104,1.162,123,3.014,132,1.833,147,2.641,152,2.408,157,2.705,161,2.694,181,2.027,188,1.78,189,0.75,198,1.214,205,2.482,206,2.608,218,1.356,221,1.043,224,1.356,227,0.976,287,1.82,306,2.479,307,1.222,309,0.919,368,1.558,369,4.107,381,1.122,382,1.356,402,1.331,435,2.07,440,1.356,441,2.923,443,2.705,448,3.518,523,1.043,525,3.079,526,1.122,527,1.043,528,1.043,529,1.122,532,1.901,540,2.07,541,2.07,593,1.356,594,2.297,595,1.901,605,1.222,653,1.356,678,0.87,890,3.518,979,1.356,983,1.356,985,2.297,987,3.936,988,4.009,1018,1.356,1071,1.356,1073,3.518,1077,3.518,1165,3.504,1170,3.504,1197,1.356,1199,2.297,1249,1.043,1250,2.64,1251,3.435,1252,2.64,1253,3.435,1254,1.558,1255,2.64,1256,4.915,1257,1.558,1258,4.044,1259,2.64,1260,1.558,1261,1.558,1262,1.558,1263,1.558,1264,1.558,1265,2.64,1266,1.558,1267,1.558,1268,1.558,1269,1.558,1270,1.558,1271,1.558,1272,1.558,1273,1.558,1274,2.07,1275,1.222,1276,1.356,1277,1.558,1278,1.356,1279,1.356,1280,1.558,1281,4.915,1282,3.435,1283,4.915,1284,2.64,1285,1.558,1286,1.558,1287,1.356,1288,1.558,1289,1.558,1290,1.558,1291,1.558,1292,1.558,1293,1.558,1294,3.435,1295,2.64,1296,3.435,1297,1.558,1298,1.558,1299,1.558,1300,1.558,1301,2.64,1302,1.558,1303,3.435,1304,1.558,1305,1.558,1306,1.558,1307,1.558,1308,1.558,1309,1.558,1310,1.558,1311,1.558,1312,2.64,1313,1.558,1314,1.558,1315,1.558,1316,1.558,1317,1.558,1318,1.558,1319,1.558,1320,1.558,1321,1.558,1322,1.558]],["title/classes/Visitor.html",[0,0.175,194,2.365]],["body/classes/Visitor.html",[0,0.271,2,1.608,3,0.259,4,0.211,5,0.211,7,0.259,8,0.013,9,0.012,10,0.012,194,4.262,1323,5.4]],["title/controllers/VisitorController.html",[11,1.389,1324,2.886]],["body/controllers/VisitorController.html",[0,0.19,3,0.182,4,0.148,5,0.148,7,0.182,8,0.014,9,0.01,10,0.01,11,1.509,13,1.509,15,2.43,16,0.594,17,1.499,24,1.35,25,2.307,26,0.671,32,1.128,36,1.625,37,2.728,39,2.341,41,2.728,43,0.462,44,2.43,47,0.698,56,2.43,57,1.211,60,1.838,63,2.158,66,2.728,68,2.913,91,2.092,104,1.917,194,2.569,205,1.567,206,1.629,339,2.913,875,3.788,1178,4.684,1324,4.169,1325,3.788,1326,6.03,1327,5.789,1328,4.354,1329,4.074,1330,3.788,1331,4.354,1332,4.354,1333,4.354,1334,4.354,1335,5.036,1336,4.354,1337,4.354,1338,4.354,1339,4.354]],["title/injectables/VisitorCounterMiddleware.html",[88,0.749,190,2.365]],["body/injectables/VisitorCounterMiddleware.html",[0,0.186,3,0.177,4,0.144,5,0.144,7,0.177,8,0.014,9,0.01,10,0.01,16,0.579,17,1.474,18,1.588,26,0.877,28,1.584,29,1.528,30,0.877,31,1.584,32,1.099,39,1.528,43,0.404,47,0.681,60,1.791,63,1.269,81,2.052,88,1.063,89,1.528,91,2.066,93,1.528,94,2.249,96,2.738,102,1.869,126,3.057,130,5.035,190,3.358,194,3.358,205,1.528,206,1.588,258,4.463,276,3.328,287,2.249,347,3.328,508,4.296,1340,3.692,1341,4.951,1342,4.245,1343,5.692,1344,5.968,1345,4.245,1346,3.692,1347,5.692,1348,4.245,1349,3.692,1350,3.328,1351,4.245,1352,5.692,1353,4.245,1354,5.586,1355,5.692,1356,3.692,1357,3.692,1358,4.245]],["title/modules/VisitorModule.html",[70,1.156,1359,2.886]],["body/modules/VisitorModule.html",[0,0.219,3,0.209,4,0.17,5,0.17,7,0.209,8,0.014,9,0.011,10,0.011,13,2.195,43,0.519,47,0.802,70,2.005,72,2.11,73,2.11,74,2.299,75,2.299,76,2.11,77,3.196,78,2.299,81,2.303,82,2.912,83,2.11,84,2.11,347,3.921,1324,5.006,1329,4.825,1330,4.35,1359,5.701,1360,4.35,1361,4.35,1362,5,1363,5]],["title/injectables/VisitorService.html",[88,0.749,1329,2.511]],["body/injectables/VisitorService.html",[0,0.182,3,0.174,4,0.142,5,0.142,7,0.174,8,0.014,9,0.009,10,0.009,16,0.568,17,1.455,26,1.049,28,1.563,29,1.508,30,0.866,31,1.563,32,1.455,43,0.452,47,0.668,54,2.099,60,1.757,63,1.245,81,2.036,87,1.686,88,1.05,89,1.499,91,2.356,93,1.499,94,2.205,96,2.703,102,1.833,104,1.833,130,3.265,193,3.369,194,3.314,205,2.022,206,1.558,453,1.947,678,2.323,679,2.785,838,2.998,1326,5.921,1329,3.519,1335,4.887,1344,4.887,1349,5.531,1350,4.986,1354,3.621,1356,3.621,1357,3.621,1364,3.621,1365,5.618,1366,5.618,1367,4.163,1368,5.618,1369,4.163,1370,4.163,1371,4.163,1372,4.163,1373,4.163,1374,4.163,1375,4.163]],["title/coverage.html",[1376,4.293]],["body/coverage.html",[0,0.344,1,1.638,5,0.083,6,2.13,8,0.014,9,0.006,10,0.006,11,2.337,12,1.764,14,2.13,23,1.534,30,0.377,48,1.534,52,1.638,76,1.034,81,0.732,88,1.405,90,2.13,110,1.638,111,2.13,147,1.235,152,1.126,170,1.445,172,1.764,178,1.764,182,1.367,184,1.367,186,1.367,190,1.445,194,1.445,198,1.126,236,1.297,250,1.638,278,2.13,283,1.445,284,2.13,285,1.764,286,2.13,289,1.534,310,1.638,314,1.367,349,2.13,371,1.445,393,1.764,394,2.13,399,1.638,400,1.638,401,1.534,402,1.235,404,1.764,411,2.748,420,2.13,424,1.367,451,2.13,452,2.992,463,2.13,464,2.992,492,1.764,493,2.13,494,2.992,495,1.534,496,2.13,497,2.992,513,1.534,514,2.13,515,2.992,521,2.13,522,3.376,554,1.764,555,2.13,556,2.992,557,1.638,558,2.13,559,1.764,560,2.13,583,1.534,666,2.13,745,2.13,746,2.992,750,2.13,771,2.13,773,2.13,783,2.13,820,2.13,853,2.13,854,1.764,855,2.13,862,1.638,864,1.534,882,2.13,902,1.764,903,2.13,913,1.638,916,1.534,931,2.13,950,2.992,951,2.13,955,1.764,960,1.764,988,1.534,1026,2.13,1053,1.92,1054,2.13,1055,3.319,1056,2.13,1057,2.13,1086,2.13,1111,1.92,1113,2.13,1129,2.13,1132,2.13,1154,1.92,1155,2.13,1158,2.13,1160,2.13,1165,1.638,1166,2.992,1170,1.638,1178,1.764,1179,2.13,1182,2.13,1195,1.764,1196,2.13,1249,3.136,1274,1.92,1275,1.92,1287,2.13,1323,2.13,1324,1.764,1325,2.13,1329,1.534,1340,2.13,1346,2.13,1350,6.489,1364,2.13,1376,1.92,1377,2.13,1378,2.449,1379,2.449,1380,6.346,1381,5.737,1382,7.622,1383,4.688,1384,5.293,1385,3.816,1386,2.13,1387,5.293,1388,6.743,1389,2.992,1390,2.13,1391,2.13,1392,2.13,1393,4.688,1394,3.816,1395,2.13,1396,2.449,1397,3.816,1398,2.449,1399,2.449]],["title/dependencies.html",[73,2.035,1400,2.91]],["body/dependencies.html",[0,0.265,8,0.014,9,0.01,10,0.01,47,0.75,54,2.358,57,1.301,73,1.974,204,3.667,268,3.667,370,4.068,407,2.93,435,3.667,586,5.278,587,4.369,595,3.368,639,3.667,758,5.281,759,3.667,779,4.068,792,3.667,793,3.667,1064,3.667,1147,3.368,1148,3.129,1152,4.068,1401,4.677,1402,7.127,1403,4.677,1404,4.677,1405,4.677,1406,4.677,1407,4.677,1408,4.677,1409,4.677,1410,4.677,1411,4.677,1412,4.677,1413,4.677,1414,4.677,1415,4.677,1416,4.677,1417,4.677,1418,4.677,1419,4.677,1420,4.677,1421,4.677,1422,4.677,1423,4.677,1424,4.677,1425,4.677,1426,4.677,1427,4.677,1428,4.677,1429,4.677,1430,4.677,1431,4.677,1432,4.677]],["title/miscellaneous/enumerations.html",[1433,1.867,1434,4.195]],["body/miscellaneous/enumerations.html",[8,0.014,9,0.012,10,0.012,16,0.779,153,5.984,157,4.602,161,5.394,165,5.984,188,3.028,678,3.19,679,5.242,1249,3.824,1278,5.984,1279,4.973,1433,3.19,1434,4.973,1435,5.716,1436,4.483,1437,5.716]],["title/miscellaneous/functions.html",[1433,1.867,1438,4.195]],["body/miscellaneous/functions.html",[8,0.012,9,0.012,10,0.012,16,0.853,76,3.235,1395,5.444,1433,3.493,1438,5.444,1439,6.259]],["title/index.html",[16,0.456,1440,2.91,1441,2.91]],["body/index.html",[4,0.158,8,0.014,9,0.01,10,0.01,136,2.236,832,3.347,838,3.347,1102,5.257,1376,3.645,1442,4.648,1443,4.648,1444,6.043,1445,4.648,1446,4.648,1447,4.648,1448,4.648,1449,4.648,1450,4.648,1451,6.715,1452,4.648,1453,4.648,1454,4.043,1455,4.648,1456,7.693,1457,4.648,1458,4.648,1459,7.555,1460,4.648,1461,4.648,1462,6.043,1463,4.648,1464,4.648,1465,4.648,1466,4.648,1467,6.043,1468,4.648,1469,4.648,1470,4.648,1471,6.043,1472,5.257,1473,4.648,1474,4.648,1475,4.648,1476,4.648,1477,4.648,1478,4.648,1479,4.648,1480,4.648,1481,4.648,1482,4.648,1483,4.648,1484,4.043,1485,4.648,1486,4.648,1487,4.648,1488,4.043,1489,4.648,1490,4.648,1491,4.648,1492,4.648,1493,4.648,1494,4.648,1495,3.347]],["title/license.html",[1440,2.91,1441,2.91,1495,2.409]],["body/license.html",[0,0.059,4,0.202,5,0.175,8,0.005,9,0.004,10,0.004,26,0.207,29,0.824,43,0.095,84,0.566,136,0.645,321,0.897,324,1.166,455,1.166,457,0.791,501,2.869,502,0.84,508,0.897,587,1.671,609,3.261,610,1.051,628,2.67,638,1.166,652,0.965,832,0.965,835,2.019,848,2.019,1078,2.67,1101,1.166,1148,0.897,1276,1.166,1341,4.865,1377,2.67,1472,1.166,1484,1.166,1495,5.361,1496,3.659,1497,2.67,1498,3.069,1499,1.341,1500,1.341,1501,1.341,1502,5.382,1503,6.088,1504,3.659,1505,4.135,1506,1.341,1507,6.337,1508,5.593,1509,1.341,1510,1.341,1511,1.166,1512,1.341,1513,5.593,1514,6.088,1515,4.529,1516,5.593,1517,2.321,1518,1.341,1519,4.135,1520,1.341,1521,1.341,1522,1.341,1523,3.659,1524,1.341,1525,5.382,1526,1.341,1527,3.659,1528,2.321,1529,2.321,1530,1.341,1531,3.069,1532,2.321,1533,2.321,1534,1.341,1535,1.341,1536,6.631,1537,3.659,1538,2.321,1539,4.529,1540,1.341,1541,2.321,1542,1.341,1543,1.341,1544,1.341,1545,1.341,1546,1.341,1547,1.341,1548,1.341,1549,3.069,1550,1.341,1551,3.069,1552,2.321,1553,6.088,1554,1.341,1555,1.341,1556,4.529,1557,5.382,1558,3.659,1559,2.321,1560,1.341,1561,1.341,1562,1.341,1563,1.341,1564,1.341,1565,2.321,1566,1.341,1567,1.341,1568,7.444,1569,3.069,1570,2.321,1571,1.341,1572,1.341,1573,5.382,1574,2.321,1575,1.341,1576,4.135,1577,2.321,1578,1.341,1579,6.631,1580,6.713,1581,1.341,1582,1.341,1583,1.341,1584,1.341,1585,1.341,1586,1.341,1587,1.341,1588,2.321,1589,2.321,1590,3.069,1591,1.341,1592,1.341,1593,1.341,1594,1.341,1595,1.341,1596,3.659,1597,4.135,1598,1.341,1599,2.321,1600,3.659,1601,2.321,1602,1.341,1603,4.135,1604,2.321,1605,1.341,1606,1.341,1607,3.069,1608,1.341,1609,1.341,1610,1.341,1611,1.341,1612,2.321,1613,1.341,1614,1.341,1615,1.341,1616,3.069,1617,1.341,1618,1.341,1619,3.069,1620,1.341,1621,1.341,1622,1.341,1623,3.659,1624,5.593,1625,1.341,1626,1.341,1627,2.321,1628,5.14,1629,3.069,1630,3.659,1631,2.321,1632,2.321,1633,2.321,1634,2.321,1635,3.069,1636,2.321,1637,3.069,1638,2.321,1639,2.321,1640,2.321,1641,2.321,1642,1.341,1643,2.321,1644,2.321,1645,1.341,1646,1.341,1647,4.135,1648,4.859,1649,3.069,1650,2.321,1651,1.341,1652,1.341,1653,2.321,1654,2.321,1655,1.341,1656,1.341,1657,3.069,1658,2.321,1659,1.341,1660,1.341,1661,1.341,1662,3.069,1663,1.341,1664,1.341,1665,1.341,1666,2.321,1667,2.321,1668,1.341,1669,1.341,1670,1.341,1671,1.341,1672,1.341,1673,1.341,1674,1.341,1675,2.321,1676,1.341,1677,1.341,1678,1.341,1679,1.341,1680,1.341,1681,1.341,1682,4.135,1683,1.341,1684,3.069,1685,1.341,1686,1.341,1687,3.069,1688,1.341,1689,1.341,1690,1.341,1691,1.341,1692,5.14,1693,1.341,1694,1.341,1695,1.341,1696,1.341,1697,1.341,1698,3.659,1699,2.321,1700,3.659,1701,1.341,1702,1.341,1703,3.659,1704,1.341,1705,1.341,1706,1.341,1707,3.069,1708,1.341,1709,1.341,1710,2.321,1711,2.321,1712,1.341,1713,1.341,1714,1.341,1715,1.341,1716,2.321,1717,2.321,1718,1.341,1719,1.341,1720,4.135,1721,1.341,1722,1.341,1723,1.341,1724,1.341,1725,1.341,1726,1.341,1727,1.341,1728,3.069,1729,3.659,1730,1.341,1731,1.341,1732,1.341,1733,1.341,1734,1.341,1735,1.341,1736,1.341,1737,1.341,1738,1.341,1739,1.341,1740,1.341,1741,2.321,1742,1.341,1743,1.341,1744,2.321,1745,1.341,1746,1.341,1747,1.341,1748,1.341,1749,1.341,1750,1.341,1751,1.341,1752,1.341,1753,1.341,1754,3.659,1755,3.069,1756,3.069,1757,3.069,1758,2.321,1759,2.321,1760,3.069,1761,2.321,1762,2.321,1763,2.321,1764,1.341,1765,1.341,1766,1.341,1767,1.341,1768,1.341,1769,1.341,1770,1.341,1771,2.321,1772,1.341,1773,1.341,1774,1.341,1775,1.341,1776,4.135,1777,1.341,1778,1.341,1779,1.341,1780,1.341,1781,1.341,1782,1.341,1783,1.341,1784,1.341,1785,1.341,1786,4.135,1787,1.341,1788,1.341,1789,1.341,1790,1.341,1791,1.341,1792,1.341,1793,1.341,1794,1.341,1795,1.341,1796,1.341,1797,1.341,1798,1.341,1799,1.341,1800,1.341,1801,1.341,1802,1.341,1803,1.341,1804,1.341,1805,3.069,1806,1.341,1807,1.341,1808,1.341,1809,1.341,1810,2.321,1811,1.341,1812,1.341,1813,1.341,1814,1.341,1815,1.341,1816,1.341,1817,1.341,1818,1.341,1819,1.341,1820,1.341,1821,1.341,1822,1.341,1823,1.341,1824,1.341,1825,1.341,1826,2.321,1827,1.341,1828,1.341,1829,1.341,1830,2.321,1831,1.341,1832,1.341,1833,1.341,1834,1.341,1835,1.341,1836,1.341,1837,1.341,1838,1.341,1839,1.341,1840,1.341,1841,1.341,1842,1.341,1843,1.341,1844,1.341,1845,1.341,1846,1.341,1847,1.341,1848,1.341,1849,1.341,1850,1.341,1851,1.341,1852,1.341]],["title/modules.html",[72,2.311]],["body/modules.html",[8,0.011,9,0.011,10,0.011,71,3.495,72,2.205,239,3.762,243,3.495,244,3.495,245,3.495,246,3.495,247,3.495,248,3.495,249,3.273,832,5.87,1080,3.762,1359,3.762,1853,8.152,1854,8.152,1855,8.152]],["title/overview.html",[1856,4.763]],["body/overview.html",[2,0.784,8,0.014,9,0.008,10,0.008,13,1.048,48,3.343,70,0.873,71,4.567,72,1.277,73,1.277,74,1.391,75,1.391,76,1.277,77,1.391,78,1.391,79,2.632,80,2.632,81,2.314,82,2.061,83,1.277,84,1.277,89,1.089,170,4.028,190,3.481,239,5.773,240,2.632,241,2.632,242,2.632,243,4.567,244,5.287,245,4.79,246,4.413,247,4.567,248,4.567,249,4.485,250,3.57,314,3.293,343,2.632,344,2.632,395,2.632,396,2.632,397,2.632,399,3.57,400,3.57,401,3.343,402,3.535,424,3.81,508,2.024,583,3.343,661,2.632,662,2.632,787,2.632,788,2.632,789,2.632,864,3.343,878,2.632,879,2.632,916,3.343,927,2.632,928,2.632,1080,4.536,1081,2.632,1082,2.632,1111,2.372,1244,2.632,1246,2.632,1329,3.343,1359,4.751,1360,2.632,1361,2.632,1511,2.632,1856,2.632,1857,3.025,1858,3.025,1859,3.025]],["title/classes/passwordForgotDto.html",[0,0.175,955,2.886]],["body/classes/passwordForgotDto.html",[0,0.238,2,1.411,3,0.228,4,0.185,5,0.185,7,0.228,8,0.014,9,0.011,10,0.011,16,0.743,24,1.69,26,0.84,30,0.84,36,1.67,43,0.387,57,1.516,123,3.215,132,3.132,136,3.215,453,2.316,458,3.073,502,3.414,784,4.273,955,4.812,1389,5.24,1390,4.74,1860,6.682,1861,5.449]],["title/classes/passwordResetDto.html",[0,0.175,960,2.886]],["body/classes/passwordResetDto.html",[0,0.227,2,1.344,3,0.217,4,0.177,5,0.177,7,0.217,8,0.014,9,0.011,10,0.011,16,0.707,24,2.01,26,0.999,30,0.999,36,1.85,43,0.369,57,1.443,198,3.251,203,3.565,453,2.246,458,3.251,502,4.061,784,5.083,960,4.668,1389,5.544,1391,4.513,1862,5.188,1863,5.188]],["title/properties.html",[453,1.671,1400,2.91]],["body/properties.html",[8,0.014,9,0.012,10,0.012,136,2.869,453,2.067,1454,5.188,1488,5.188,1495,4.295,1497,5.188,1864,5.964,1865,5.964,1866,5.964,1867,5.964,1868,5.964,1869,5.964,1870,5.964]],["title/miscellaneous/typealiases.html",[1433,1.867,1871,4.822]],["body/miscellaneous/typealiases.html",[8,0.012,9,0.012,10,0.012,16,0.85,30,0.961,988,4.794,1249,4.17,1433,3.479,1436,4.888,1872,6.233]],["title/miscellaneous/variables.html",[1433,1.867,1873,4.195]],["body/miscellaneous/variables.html",[8,0.014,9,0.011,10,0.011,16,0.703,30,0.995,39,2.537,102,2.269,123,2.479,132,2.087,184,4.123,188,2.269,371,3.808,377,3.447,443,3.447,523,3.447,526,3.711,527,3.447,528,3.447,529,3.711,609,3.711,678,4.123,679,4.942,1221,4.483,1249,3.447,1274,5.061,1275,5.061,1386,4.483,1392,4.483,1433,2.876,1436,5.061,1873,4.483,1874,5.153,1875,5.153,1876,5.153]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"classes/Alert.html":{},"controllers/AlertController.html":{},"modules/AlertModule.html":{},"injectables/AlertService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"classes/Auth.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAlertDto.html":{},"classes/CreateArticleDto.html":{},"classes/CreateImageDto.html":{},"classes/CreateMessageDto.html":{},"classes/CreatePageDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateVisitorDto.html":{},"classes/Image.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/Message.html":{},"controllers/MessagesController.html":{},"modules/MessagesModule.html":{},"injectables/MessagesService.html":{},"controllers/PagesController.html":{},"modules/PagesModule.html":{},"injectables/PagesService.html":{},"controllers/PasswordResetController.html":{},"injectables/PasswordResetService.html":{},"classes/PrismaClientExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"guards/RoleGuard.html":{},"classes/UpdateAlertDto.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateImageDto.html":{},"classes/UpdateMessageDto.html":{},"classes/UpdatePageDto.html":{},"classes/UpdatePasswordUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateVisitorDto.html":{},"classes/Utilisateur.html":{},"controllers/UtilisateursController.html":{},"modules/UtilisateursModule.html":{},"injectables/UtilisateursService.html":{},"classes/Visitor.html":{},"controllers/VisitorController.html":{},"injectables/VisitorCounterMiddleware.html":{},"modules/VisitorModule.html":{},"injectables/VisitorService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"classes/passwordForgotDto.html":{},"classes/passwordResetDto.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1350,"title":{},"body":{"injectables/VisitorCounterMiddleware.html":{},"injectables/VisitorService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1864,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":1430,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":1412,"title":{},"body":{"dependencies.html":{}}}],["0.31.3",{"_index":1432,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1411,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":1423,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1382,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1393,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1398,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1385,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1384,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1388,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1394,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1380,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1381,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1396,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1397,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1383,"title":{},"body":{"coverage.html":{}}}],["0606060606",{"_index":552,"title":{},"body":{"classes/CreateUtilisateurDto.html":{}}}],["1",{"_index":508,"title":{},"body":{"classes/CreateMessageDto.html":{},"classes/CreateUtilisateurDto.html":{},"injectables/VisitorCounterMiddleware.html":{},"license.html":{},"overview.html":{}}}],["1.0.0",{"_index":1425,"title":{},"body":{"dependencies.html":{}}}],["1.17.3",{"_index":1418,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":1414,"title":{},"body":{"dependencies.html":{}}}],["1.8.1",{"_index":1401,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":1279,"title":{},"body":{"injectables/UtilisateursService.html":{},"miscellaneous/enumerations.html":{}}}],["11",{"_index":1857,"title":{},"body":{"overview.html":{}}}],["17",{"_index":1858,"title":{},"body":{"overview.html":{}}}],["1mb",{"_index":634,"title":{},"body":{"controllers/ImagesController.html":{}}}],["2",{"_index":505,"title":{},"body":{"classes/CreateMessageDto.html":{},"controllers/ImagesController.html":{}}}],["2.0",{"_index":1498,"title":{},"body":{"license.html":{}}}],["2.3.1",{"_index":1403,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":135,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"injectables/ImagesService.html":{}}}],["2004",{"_index":1500,"title":{},"body":{"license.html":{}}}],["26",{"_index":1859,"title":{},"body":{"overview.html":{}}}],["2b5kvdccpthbau3r5yjqsaadbh4jmg8u",{"_index":1876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.0.2",{"_index":1427,"title":{},"body":{"dependencies.html":{}}}],["3.1.8",{"_index":1416,"title":{},"body":{"dependencies.html":{}}}],["300x300",{"_index":637,"title":{},"body":{"controllers/ImagesController.html":{}}}],["30s",{"_index":999,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["4.0.1",{"_index":1424,"title":{},"body":{"dependencies.html":{}}}],["4.10.1",{"_index":1408,"title":{},"body":{"dependencies.html":{}}}],["4.7.7",{"_index":1420,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":326,"title":{},"body":{"controllers/ArticleController.html":{}}}],["401",{"_index":139,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{}}}],["403",{"_index":328,"title":{},"body":{"controllers/ArticleController.html":{}}}],["404",{"_index":329,"title":{},"body":{"controllers/ArticleController.html":{}}}],["4096",{"_index":632,"title":{},"body":{"controllers/ImagesController.html":{}}}],["5.1.0",{"_index":1409,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1544,"title":{},"body":{"license.html":{}}}],["500",{"_index":327,"title":{},"body":{"controllers/ArticleController.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["6.2.1",{"_index":1407,"title":{},"body":{"dependencies.html":{}}}],["6.9.1",{"_index":1422,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":1431,"title":{},"body":{"dependencies.html":{}}}],["7d",{"_index":419,"title":{},"body":{"modules/AuthModule.html":{}}}],["80",{"_index":710,"title":{},"body":{"injectables/ImagesService.html":{}}}],["9",{"_index":1511,"title":{},"body":{"license.html":{},"overview.html":{}}}],["9.0.0",{"_index":1402,"title":{},"body":{"dependencies.html":{}}}],["9.0.3",{"_index":1404,"title":{},"body":{"dependencies.html":{}}}],["9.3.9",{"_index":1406,"title":{},"body":{"dependencies.html":{}}}],["above",{"_index":1733,"title":{},"body":{"license.html":{}}}],["acc",{"_index":1372,"title":{},"body":{"injectables/VisitorService.html":{}}}],["acceptance",{"_index":1808,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":1805,"title":{},"body":{"license.html":{}}}],["access_token",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{}}}],["act",{"_index":1814,"title":{},"body":{"license.html":{}}}],["acting",{"_index":1521,"title":{},"body":{"license.html":{}}}],["acts",{"_index":1784,"title":{},"body":{"license.html":{}}}],["adapter",{"_index":816,"title":{},"body":{"modules/MailModule.html":{}}}],["add",{"_index":1717,"title":{},"body":{"license.html":{}}}],["addendum",{"_index":1719,"title":{},"body":{"license.html":{}}}],["additional",{"_index":1720,"title":{},"body":{"license.html":{}}}],["additions",{"_index":1598,"title":{},"body":{"license.html":{}}}],["admin",{"_index":1286,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["administrateur",{"_index":153,"title":{},"body":{"controllers/AppController.html":{},"miscellaneous/enumerations.html":{}}}],["adresse",{"_index":523,"title":{},"body":{"classes/CreateUtilisateurDto.html":{},"controllers/PasswordResetController.html":{},"classes/UpdateUtilisateurDto.html":{},"injectables/UtilisateursService.html":{},"miscellaneous/variables.html":{}}}],["advised",{"_index":1803,"title":{},"body":{"license.html":{}}}],["against",{"_index":1667,"title":{},"body":{"license.html":{}}}],["agree",{"_index":1817,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":1757,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":1738,"title":{},"body":{"license.html":{}}}],["alert",{"_index":1,"title":{"classes/Alert.html":{}},"body":{"classes/Alert.html":{},"controllers/AlertController.html":{},"injectables/AlertService.html":{},"coverage.html":{}}}],["alert.controller",{"_index":86,"title":{},"body":{"modules/AlertModule.html":{}}}],["alert.dto",{"_index":51,"title":{},"body":{"controllers/AlertController.html":{},"injectables/AlertService.html":{},"classes/UpdateAlertDto.html":{}}}],["alert.dto.ts",{"_index":452,"title":{},"body":{"classes/CreateAlertDto.html":{},"classes/UpdateAlertDto.html":{},"coverage.html":{}}}],["alert.dto.ts:11",{"_index":459,"title":{},"body":{"classes/CreateAlertDto.html":{}}}],["alert.dto.ts:14",{"_index":462,"title":{},"body":{"classes/CreateAlertDto.html":{}}}],["alert.dto.ts:5",{"_index":461,"title":{},"body":{"classes/CreateAlertDto.html":{}}}],["alert.dto.ts:8",{"_index":460,"title":{},"body":{"classes/CreateAlertDto.html":{}}}],["alert.service",{"_index":49,"title":{},"body":{"controllers/AlertController.html":{},"modules/AlertModule.html":{}}}],["alert/alert.module",{"_index":273,"title":{},"body":{"modules/AppModule.html":{}}}],["alertcontroller",{"_index":12,"title":{"controllers/AlertController.html":{}},"body":{"controllers/AlertController.html":{},"modules/AlertModule.html":{},"coverage.html":{}}}],["alertmodule",{"_index":71,"title":{"modules/AlertModule.html":{}},"body":{"modules/AlertModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["alertservice",{"_index":48,"title":{"injectables/AlertService.html":{}},"body":{"controllers/AlertController.html":{},"modules/AlertModule.html":{},"injectables/AlertService.html":{},"coverage.html":{},"overview.html":{}}}],["aliases",{"_index":1872,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alleging",{"_index":1672,"title":{},"body":{"license.html":{}}}],["allowed",{"_index":629,"title":{},"body":{"controllers/ImagesController.html":{}}}],["allowedfields",{"_index":1274,"title":{},"body":{"injectables/UtilisateursService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["alone",{"_index":1663,"title":{},"body":{"license.html":{}}}],["along",{"_index":1708,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":1718,"title":{},"body":{"license.html":{}}}],["amazing",{"_index":1478,"title":{},"body":{"index.html":{}}}],["ancien_mot_de_passe",{"_index":1167,"title":{},"body":{"classes/UpdatePasswordUtilisateurDto.html":{}}}],["and/or",{"_index":1811,"title":{},"body":{"license.html":{}}}],["annotations",{"_index":1585,"title":{},"body":{"license.html":{}}}],["apache",{"_index":1496,"title":{},"body":{"license.html":{}}}],["apibearerauth",{"_index":317,"title":{},"body":{"controllers/ArticleController.html":{}}}],["apibody",{"_index":175,"title":{},"body":{"controllers/AppController.html":{},"controllers/ImagesController.html":{},"controllers/UtilisateursController.html":{}}}],["apiconsumes",{"_index":592,"title":{},"body":{"controllers/ImagesController.html":{}}}],["apiconsumes('multipart/form",{"_index":612,"title":{},"body":{"controllers/ImagesController.html":{}}}],["apioperation",{"_index":176,"title":{},"body":{"controllers/AppController.html":{}}}],["apiproperty",{"_index":458,"title":{},"body":{"classes/CreateAlertDto.html":{},"classes/CreateArticleDto.html":{},"classes/CreateMessageDto.html":{},"classes/CreatePageDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/LoginDto.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdatePageDto.html":{},"classes/UpdatePasswordUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/passwordForgotDto.html":{},"classes/passwordResetDto.html":{}}}],["apiproperty()@isnotempty()@isdate",{"_index":1136,"title":{},"body":{"classes/UpdateArticleDto.html":{}}}],["apiproperty()@isnotempty()@isstring",{"_index":1133,"title":{},"body":{"classes/UpdateArticleDto.html":{}}}],["apiproperty({description",{"_index":500,"title":{},"body":{"classes/CreateMessageDto.html":{},"classes/CreateUtilisateurDto.html":{}}}],["apiproperty({example",{"_index":784,"title":{},"body":{"classes/LoginDto.html":{},"classes/passwordForgotDto.html":{},"classes/passwordResetDto.html":{}}}],["apiquery",{"_index":55,"title":{},"body":{"controllers/AlertController.html":{},"controllers/ArticleController.html":{},"classes/CreateUtilisateurDto.html":{},"controllers/PagesController.html":{}}}],["apiresponse",{"_index":177,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{}}}],["apitags",{"_index":56,"title":{},"body":{"controllers/AlertController.html":{},"controllers/AppController.html":{},"controllers/ArticleController.html":{},"controllers/ImagesController.html":{},"controllers/PagesController.html":{},"controllers/PasswordResetController.html":{},"controllers/UtilisateursController.html":{},"controllers/VisitorController.html":{}}}],["apitags('alert",{"_index":59,"title":{},"body":{"controllers/AlertController.html":{}}}],["apitags('article",{"_index":319,"title":{},"body":{"controllers/ArticleController.html":{}}}],["apitags('auth",{"_index":192,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('images",{"_index":597,"title":{},"body":{"controllers/ImagesController.html":{}}}],["apitags('pages",{"_index":920,"title":{},"body":{"controllers/PagesController.html":{}}}],["apitags('password",{"_index":972,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["apitags('utilisateurs",{"_index":1229,"title":{},"body":{"controllers/UtilisateursController.html":{}}}],["apitags('visitor",{"_index":1332,"title":{},"body":{"controllers/VisitorController.html":{}}}],["app",{"_index":838,"title":{},"body":{"injectables/MailService.html":{},"injectables/PrismaService.html":{},"injectables/VisitorService.html":{},"index.html":{}}}],["app.close",{"_index":1110,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":260,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["app.service",{"_index":261,"title":{},"body":{"modules/AppModule.html":{}}}],["app.use((req",{"_index":1373,"title":{},"body":{"injectables/VisitorService.html":{}}}],["appcontroller",{"_index":110,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["appear",{"_index":1713,"title":{},"body":{"license.html":{}}}],["appended",{"_index":843,"title":{},"body":{"injectables/MailService.html":{}}}],["appendix",{"_index":1577,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":1755,"title":{},"body":{"license.html":{}}}],["applications",{"_index":1450,"title":{},"body":{"index.html":{}}}],["applies",{"_index":1656,"title":{},"body":{"license.html":{}}}],["apply",{"_index":1826,"title":{},"body":{"license.html":{}}}],["appmodule",{"_index":239,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropriate",{"_index":1835,"title":{},"body":{"license.html":{}}}],["appropriateness",{"_index":1770,"title":{},"body":{"license.html":{}}}],["appservice",{"_index":250,"title":{"injectables/AppService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["archives",{"_index":1843,"title":{},"body":{"license.html":{}}}],["argumentshost",{"_index":1061,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["arising",{"_index":1791,"title":{},"body":{"license.html":{}}}],["array(32",{"_index":621,"title":{},"body":{"controllers/ImagesController.html":{}}}],["article",{"_index":283,"title":{"classes/Article.html":{}},"body":{"classes/Article.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"coverage.html":{}}}],["article')@apiresponse({content",{"_index":292,"title":{},"body":{"controllers/ArticleController.html":{}}}],["article.controller",{"_index":346,"title":{},"body":{"modules/ArticleModule.html":{}}}],["article.dto",{"_index":316,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"classes/UpdateArticleDto.html":{}}}],["article.dto.ts",{"_index":464,"title":{},"body":{"classes/CreateArticleDto.html":{},"classes/UpdateArticleDto.html":{},"coverage.html":{}}}],["article.dto.ts:10",{"_index":480,"title":{},"body":{"classes/CreateArticleDto.html":{},"classes/UpdateArticleDto.html":{}}}],["article.dto.ts:13",{"_index":490,"title":{},"body":{"classes/CreateArticleDto.html":{}}}],["article.dto.ts:15",{"_index":1137,"title":{},"body":{"classes/UpdateArticleDto.html":{}}}],["article.dto.ts:16",{"_index":482,"title":{},"body":{"classes/CreateArticleDto.html":{}}}],["article.dto.ts:19",{"_index":483,"title":{},"body":{"classes/CreateArticleDto.html":{}}}],["article.dto.ts:20",{"_index":1138,"title":{},"body":{"classes/UpdateArticleDto.html":{}}}],["article.dto.ts:22",{"_index":486,"title":{},"body":{"classes/CreateArticleDto.html":{}}}],["article.dto.ts:25",{"_index":478,"title":{},"body":{"classes/CreateArticleDto.html":{},"classes/UpdateArticleDto.html":{}}}],["article.dto.ts:28",{"_index":481,"title":{},"body":{"classes/CreateArticleDto.html":{}}}],["article.dto.ts:30",{"_index":1140,"title":{},"body":{"classes/UpdateArticleDto.html":{}}}],["article.dto.ts:31",{"_index":484,"title":{},"body":{"classes/CreateArticleDto.html":{}}}],["article.dto.ts:34",{"_index":477,"title":{},"body":{"classes/CreateArticleDto.html":{}}}],["article.dto.ts:35",{"_index":1141,"title":{},"body":{"classes/UpdateArticleDto.html":{}}}],["article.dto.ts:37",{"_index":491,"title":{},"body":{"classes/CreateArticleDto.html":{}}}],["article.dto.ts:4",{"_index":489,"title":{},"body":{"classes/CreateArticleDto.html":{}}}],["article.dto.ts:40",{"_index":485,"title":{},"body":{"classes/CreateArticleDto.html":{},"classes/UpdateArticleDto.html":{}}}],["article.dto.ts:43",{"_index":488,"title":{},"body":{"classes/CreateArticleDto.html":{}}}],["article.dto.ts:45",{"_index":1135,"title":{},"body":{"classes/UpdateArticleDto.html":{}}}],["article.dto.ts:46",{"_index":487,"title":{},"body":{"classes/CreateArticleDto.html":{}}}],["article.dto.ts:50",{"_index":1139,"title":{},"body":{"classes/UpdateArticleDto.html":{}}}],["article.dto.ts:55",{"_index":1142,"title":{},"body":{"classes/UpdateArticleDto.html":{}}}],["article.dto.ts:60",{"_index":1134,"title":{},"body":{"classes/UpdateArticleDto.html":{}}}],["article.dto.ts:65",{"_index":1146,"title":{},"body":{"classes/UpdateArticleDto.html":{}}}],["article.dto.ts:7",{"_index":479,"title":{},"body":{"classes/CreateArticleDto.html":{}}}],["article.dto.ts:70",{"_index":1143,"title":{},"body":{"classes/UpdateArticleDto.html":{}}}],["article.dto.ts:75",{"_index":1145,"title":{},"body":{"classes/UpdateArticleDto.html":{}}}],["article.dto.ts:80",{"_index":1144,"title":{},"body":{"classes/UpdateArticleDto.html":{}}}],["article.id",{"_index":375,"title":{},"body":{"injectables/ArticleService.html":{}}}],["article.service",{"_index":315,"title":{},"body":{"controllers/ArticleController.html":{},"modules/ArticleModule.html":{}}}],["article/article.module",{"_index":265,"title":{},"body":{"modules/AppModule.html":{}}}],["article/article.service",{"_index":665,"title":{},"body":{"modules/ImagesModule.html":{},"injectables/ImagesService.html":{}}}],["article/entities/article.entity",{"_index":695,"title":{},"body":{"injectables/ImagesService.html":{}}}],["articlecontroller",{"_index":285,"title":{"controllers/ArticleController.html":{}},"body":{"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"coverage.html":{}}}],["articledata",{"_index":373,"title":{},"body":{"injectables/ArticleService.html":{}}}],["articlemodule",{"_index":243,"title":{"modules/ArticleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules.html":{},"overview.html":{}}}],["articleservice",{"_index":314,"title":{"injectables/ArticleService.html":{}},"body":{"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"coverage.html":{},"overview.html":{}}}],["asserted",{"_index":1823,"title":{},"body":{"license.html":{}}}],["assignconseiller",{"_index":1198,"title":{},"body":{"controllers/UtilisateursController.html":{}}}],["assignconseiller(id_jeune",{"_index":1201,"title":{},"body":{"controllers/UtilisateursController.html":{}}}],["assignconseillertojeune",{"_index":1250,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["assignconseillertojeune(idjeune",{"_index":1255,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["associ",{"_index":986,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["associated",{"_index":1774,"title":{},"body":{"license.html":{}}}],["associée",{"_index":993,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["assume",{"_index":1772,"title":{},"body":{"license.html":{}}}],["async",{"_index":91,"title":{},"body":{"injectables/AlertService.html":{},"controllers/AppController.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MessagesService.html":{},"controllers/PagesController.html":{},"injectables/PagesService.html":{},"controllers/PasswordResetController.html":{},"injectables/PasswordResetService.html":{},"injectables/PrismaService.html":{},"injectables/UtilisateursService.html":{},"controllers/VisitorController.html":{},"injectables/VisitorCounterMiddleware.html":{},"injectables/VisitorService.html":{}}}],["attach",{"_index":1827,"title":{},"body":{"license.html":{}}}],["attached",{"_index":1575,"title":{},"body":{"license.html":{}}}],["attribution",{"_index":1698,"title":{},"body":{"license.html":{}}}],["auth",{"_index":393,"title":{"classes/Auth.html":{}},"body":{"classes/Auth.html":{},"modules/MailModule.html":{},"coverage.html":{}}}],["auth.guard",{"_index":174,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"controllers/PagesController.html":{},"controllers/PasswordResetController.html":{},"controllers/UtilisateursController.html":{}}}],["auth.guard.ts",{"_index":746,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.service",{"_index":405,"title":{},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.service",{"_index":171,"title":{},"body":{"controllers/AppController.html":{}}}],["auth/constants/auth.constants",{"_index":372,"title":{},"body":{"injectables/ArticleService.html":{}}}],["auth/dto/login.dto",{"_index":179,"title":{},"body":{"controllers/AppController.html":{}}}],["auth/guard/jwt",{"_index":183,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"controllers/PagesController.html":{},"controllers/UtilisateursController.html":{}}}],["auth/guard/local",{"_index":173,"title":{},"body":{"controllers/AppController.html":{}}}],["auth/role/role.guard",{"_index":187,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"controllers/PagesController.html":{}}}],["auth/roles/roles.decorator",{"_index":185,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"controllers/PagesController.html":{},"controllers/UtilisateursController.html":{}}}],["authguard",{"_index":747,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":749,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":772,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":244,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1488,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authorized",{"_index":1517,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":1569,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":170,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AppController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["automatically",{"_index":844,"title":{},"body":{"injectables/MailService.html":{}}}],["available",{"_index":1571,"title":{},"body":{"license.html":{}}}],["avec",{"_index":1013,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["await",{"_index":206,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MessagesService.html":{},"injectables/PagesService.html":{},"controllers/PasswordResetController.html":{},"injectables/PasswordResetService.html":{},"injectables/PrismaService.html":{},"injectables/UtilisateursService.html":{},"controllers/VisitorController.html":{},"injectables/VisitorCounterMiddleware.html":{},"injectables/VisitorService.html":{}}}],["b",{"_index":1688,"title":{},"body":{"license.html":{}}}],["backers",{"_index":1479,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":692,"title":{},"body":{"injectables/ImagesService.html":{}}}],["badrequestexception('article",{"_index":733,"title":{},"body":{"injectables/ImagesService.html":{}}}],["badrequestexception('page",{"_index":735,"title":{},"body":{"injectables/ImagesService.html":{}}}],["base",{"_index":1002,"title":{},"body":{"controllers/PasswordResetController.html":{},"injectables/PrismaService.html":{}}}],["based",{"_index":1581,"title":{},"body":{"license.html":{}}}],["basedir",{"_index":700,"title":{},"body":{"injectables/ImagesService.html":{}}}],["baseexceptionfilter",{"_index":1058,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["basis",{"_index":1759,"title":{},"body":{"license.html":{}}}],["bcrypt",{"_index":435,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UtilisateursService.html":{},"dependencies.html":{}}}],["bcrypt.compare",{"_index":1313,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["bcrypt.comparesync(pass",{"_index":439,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.gensalt(saltlength.default",{"_index":1282,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["bcrypt.hash",{"_index":1284,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["bcrypt.hash(mot_de_passe",{"_index":1318,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["behalf",{"_index":1603,"title":{},"body":{"license.html":{}}}],["below",{"_index":1578,"title":{},"body":{"license.html":{}}}],["beneficial",{"_index":1548,"title":{},"body":{"license.html":{}}}],["between",{"_index":384,"title":{},"body":{"injectables/ArticleService.html":{}}}],["binary",{"_index":611,"title":{},"body":{"controllers/ImagesController.html":{}}}],["bind",{"_index":1595,"title":{},"body":{"license.html":{}}}],["body",{"_index":44,"title":{},"body":{"controllers/AlertController.html":{},"controllers/AppController.html":{},"controllers/ArticleController.html":{},"controllers/MessagesController.html":{},"controllers/PagesController.html":{},"controllers/PasswordResetController.html":{},"controllers/UtilisateursController.html":{},"controllers/VisitorController.html":{}}}],["body('id_conseiller",{"_index":1242,"title":{},"body":{"controllers/UtilisateursController.html":{}}}],["body('id_jeune",{"_index":1241,"title":{},"body":{"controllers/UtilisateursController.html":{}}}],["body('token",{"_index":868,"title":{},"body":{"controllers/MessagesController.html":{}}}],["body.password",{"_index":1017,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["body.token",{"_index":1016,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["boilerplate",{"_index":1828,"title":{},"body":{"license.html":{}}}],["boolean",{"_index":1036,"title":{},"body":{"injectables/PasswordResetService.html":{},"guards/RoleGuard.html":{}}}],["bootstrap",{"_index":76,"title":{},"body":{"modules/AlertModule.html":{},"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/ImagesModule.html":{},"modules/MailModule.html":{},"modules/MessagesModule.html":{},"modules/PagesModule.html":{},"modules/PrismaModule.html":{},"modules/UtilisateursModule.html":{},"modules/VisitorModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["brackets",{"_index":848,"title":{},"body":{"injectables/MailService.html":{},"license.html":{}}}],["break",{"_index":1077,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{},"injectables/UtilisateursService.html":{}}}],["browse",{"_index":1855,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1853,"title":{},"body":{"modules.html":{}}}],["bugs",{"_index":1867,"title":{},"body":{"properties.html":{}}}],["building",{"_index":1445,"title":{},"body":{"index.html":{}}}],["c",{"_index":1695,"title":{},"body":{"license.html":{}}}],["call",{"_index":698,"title":{},"body":{"injectables/ImagesService.html":{}}}],["canactivate",{"_index":1114,"title":{},"body":{"guards/RoleGuard.html":{}}}],["canactivate(context",{"_index":1118,"title":{},"body":{"guards/RoleGuard.html":{}}}],["carry",{"_index":1690,"title":{},"body":{"license.html":{}}}],["case",{"_index":1073,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{},"injectables/UtilisateursService.html":{}}}],["catch",{"_index":742,"title":{},"body":{"injectables/ImagesService.html":{},"controllers/PasswordResetController.html":{},"injectables/PasswordResetService.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["catch(exception",{"_index":1059,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["catch(prisma.prismaclientknownrequesterror",{"_index":1065,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["categories",{"_index":465,"title":{},"body":{"classes/CreateArticleDto.html":{},"classes/UpdateArticleDto.html":{}}}],["cause",{"_index":1533,"title":{},"body":{"license.html":{}}}],["cb",{"_index":619,"title":{},"body":{"controllers/ImagesController.html":{}}}],["cb(new",{"_index":626,"title":{},"body":{"controllers/ImagesController.html":{}}}],["cb(null",{"_index":622,"title":{},"body":{"controllers/ImagesController.html":{}}}],["cette",{"_index":990,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["changed",{"_index":1694,"title":{},"body":{"license.html":{}}}],["changepassword",{"_index":1199,"title":{},"body":{"controllers/UtilisateursController.html":{},"injectables/UtilisateursService.html":{}}}],["changepassword(id",{"_index":1206,"title":{},"body":{"controllers/UtilisateursController.html":{}}}],["changepassword(mail",{"_index":1259,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["changer",{"_index":1307,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["character",{"_index":1790,"title":{},"body":{"license.html":{}}}],["charge",{"_index":1637,"title":{},"body":{"license.html":{}}}],["chemin",{"_index":618,"title":{},"body":{"controllers/ImagesController.html":{}}}],["choose",{"_index":1806,"title":{},"body":{"license.html":{}}}],["claim",{"_index":1669,"title":{},"body":{"license.html":{}}}],["claims",{"_index":1658,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/Alert.html":{},"classes/Article.html":{},"classes/Auth.html":{},"classes/CreateAlertDto.html":{},"classes/CreateArticleDto.html":{},"classes/CreateImageDto.html":{},"classes/CreateMessageDto.html":{},"classes/CreatePageDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateVisitorDto.html":{},"classes/Image.html":{},"classes/LoginDto.html":{},"classes/Message.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/UpdateAlertDto.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateImageDto.html":{},"classes/UpdateMessageDto.html":{},"classes/UpdatePageDto.html":{},"classes/UpdatePasswordUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateVisitorDto.html":{},"classes/Utilisateur.html":{},"classes/Visitor.html":{},"classes/passwordForgotDto.html":{},"classes/passwordResetDto.html":{}},"body":{"classes/Alert.html":{},"controllers/AlertController.html":{},"modules/AlertModule.html":{},"injectables/AlertService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"classes/Auth.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAlertDto.html":{},"classes/CreateArticleDto.html":{},"classes/CreateImageDto.html":{},"classes/CreateMessageDto.html":{},"classes/CreatePageDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateVisitorDto.html":{},"classes/Image.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/Message.html":{},"controllers/MessagesController.html":{},"modules/MessagesModule.html":{},"injectables/MessagesService.html":{},"controllers/PagesController.html":{},"modules/PagesModule.html":{},"injectables/PagesService.html":{},"controllers/PasswordResetController.html":{},"injectables/PasswordResetService.html":{},"classes/PrismaClientExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"guards/RoleGuard.html":{},"classes/UpdateAlertDto.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateImageDto.html":{},"classes/UpdateMessageDto.html":{},"classes/UpdatePageDto.html":{},"classes/UpdatePasswordUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateVisitorDto.html":{},"classes/Utilisateur.html":{},"controllers/UtilisateursController.html":{},"modules/UtilisateursModule.html":{},"injectables/UtilisateursService.html":{},"classes/Visitor.html":{},"controllers/VisitorController.html":{},"injectables/VisitorCounterMiddleware.html":{},"modules/VisitorModule.html":{},"injectables/VisitorService.html":{},"coverage.html":{},"dependencies.html":{},"license.html":{},"classes/passwordForgotDto.html":{},"classes/passwordResetDto.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/Alert.html":{},"classes/Article.html":{},"classes/Auth.html":{},"classes/CreateAlertDto.html":{},"classes/CreateArticleDto.html":{},"classes/CreateImageDto.html":{},"classes/CreateMessageDto.html":{},"classes/CreatePageDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateVisitorDto.html":{},"classes/Image.html":{},"classes/LoginDto.html":{},"classes/Message.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/UpdateAlertDto.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateImageDto.html":{},"classes/UpdateMessageDto.html":{},"classes/UpdatePageDto.html":{},"classes/UpdatePasswordUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateVisitorDto.html":{},"classes/Utilisateur.html":{},"classes/Visitor.html":{},"overview.html":{},"classes/passwordForgotDto.html":{},"classes/passwordResetDto.html":{}}}],["client",{"_index":1055,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{},"coverage.html":{}}}],["cluster_alertmodule",{"_index":79,"title":{},"body":{"modules/AlertModule.html":{},"overview.html":{}}}],["cluster_alertmodule_providers",{"_index":80,"title":{},"body":{"modules/AlertModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_articlemodule",{"_index":343,"title":{},"body":{"modules/ArticleModule.html":{},"overview.html":{}}}],["cluster_articlemodule_providers",{"_index":344,"title":{},"body":{"modules/ArticleModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":395,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":397,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":398,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":396,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_imagesmodule",{"_index":661,"title":{},"body":{"modules/ImagesModule.html":{},"overview.html":{}}}],["cluster_imagesmodule_providers",{"_index":662,"title":{},"body":{"modules/ImagesModule.html":{},"overview.html":{}}}],["cluster_mailmodule",{"_index":787,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_exports",{"_index":789,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_providers",{"_index":788,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_messagesmodule",{"_index":878,"title":{},"body":{"modules/MessagesModule.html":{},"overview.html":{}}}],["cluster_messagesmodule_providers",{"_index":879,"title":{},"body":{"modules/MessagesModule.html":{},"overview.html":{}}}],["cluster_pagesmodule",{"_index":927,"title":{},"body":{"modules/PagesModule.html":{},"overview.html":{}}}],["cluster_pagesmodule_providers",{"_index":928,"title":{},"body":{"modules/PagesModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":1081,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":1082,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":1083,"title":{},"body":{"modules/PrismaModule.html":{}}}],["cluster_utilisateursmodule",{"_index":1244,"title":{},"body":{"modules/UtilisateursModule.html":{},"overview.html":{}}}],["cluster_utilisateursmodule_exports",{"_index":1246,"title":{},"body":{"modules/UtilisateursModule.html":{},"overview.html":{}}}],["cluster_utilisateursmodule_providers",{"_index":1245,"title":{},"body":{"modules/UtilisateursModule.html":{}}}],["cluster_visitormodule",{"_index":1360,"title":{},"body":{"modules/VisitorModule.html":{},"overview.html":{}}}],["cluster_visitormodule_providers",{"_index":1361,"title":{},"body":{"modules/VisitorModule.html":{},"overview.html":{}}}],["code",{"_index":1078,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{},"license.html":{}}}],["column",{"_index":1184,"title":{},"body":{"classes/Utilisateur.html":{}}}],["combination",{"_index":1664,"title":{},"body":{"license.html":{}}}],["comment",{"_index":1836,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":1800,"title":{},"body":{"license.html":{}}}],["common",{"_index":1526,"title":{},"body":{"license.html":{}}}],["communication",{"_index":1607,"title":{},"body":{"license.html":{}}}],["compiled",{"_index":1564,"title":{},"body":{"license.html":{}}}],["compliance",{"_index":1845,"title":{},"body":{"license.html":{}}}],["complies",{"_index":1726,"title":{},"body":{"license.html":{}}}],["components/schemas/article",{"_index":323,"title":{},"body":{"controllers/ArticleController.html":{}}}],["compress",{"_index":696,"title":{},"body":{"injectables/ImagesService.html":{}}}],["compresse",{"_index":601,"title":{},"body":{"controllers/ImagesController.html":{}}}],["compressedfilename",{"_index":650,"title":{},"body":{"controllers/ImagesController.html":{}}}],["compressedimage",{"_index":703,"title":{},"body":{"injectables/ImagesService.html":{}}}],["compressimage",{"_index":668,"title":{},"body":{"injectables/ImagesService.html":{}}}],["compressimage(file",{"_index":675,"title":{},"body":{"injectables/ImagesService.html":{}}}],["computer",{"_index":1797,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":1503,"title":{},"body":{"license.html":{}}}],["config",{"_index":803,"title":{},"body":{"modules/MailModule.html":{}}}],["config.get(\"mail_transport",{"_index":805,"title":{},"body":{"modules/MailModule.html":{}}}],["config.get('mail_host",{"_index":807,"title":{},"body":{"modules/MailModule.html":{}}}],["config.get('mail_password",{"_index":810,"title":{},"body":{"modules/MailModule.html":{}}}],["config.get('mail_user",{"_index":809,"title":{},"body":{"modules/MailModule.html":{}}}],["configmodule",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{}}}],["configmodule.forroot",{"_index":274,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":798,"title":{},"body":{"modules/MailModule.html":{}}}],["configuration",{"_index":1101,"title":{},"body":{"injectables/PrismaService.html":{},"license.html":{}}}],["configure",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["confirm",{"_index":839,"title":{},"body":{"injectables/MailService.html":{},"injectables/PasswordResetService.html":{}}}],["confirmation",{"_index":840,"title":{},"body":{"injectables/MailService.html":{}}}],["connect",{"_index":369,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/MessagesService.html":{},"injectables/UtilisateursService.html":{}}}],["connexion",{"_index":1093,"title":{},"body":{"injectables/PrismaService.html":{}}}],["conseiller",{"_index":157,"title":{},"body":{"controllers/AppController.html":{},"injectables/ArticleService.html":{},"controllers/UtilisateursController.html":{},"injectables/UtilisateursService.html":{},"miscellaneous/enumerations.html":{}}}],["conseiller'])@useguards(jwtauthguard",{"_index":1222,"title":{},"body":{"controllers/UtilisateursController.html":{}}}],["conseiller.id",{"_index":387,"title":{},"body":{"injectables/ArticleService.html":{}}}],["consequential",{"_index":1789,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":1813,"title":{},"body":{"license.html":{}}}],["console.error(`error",{"_index":724,"title":{},"body":{"injectables/ImagesService.html":{}}}],["console.error(error",{"_index":1049,"title":{},"body":{"injectables/PasswordResetService.html":{}}}],["console.error(exception.message",{"_index":1066,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["console.log('compress",{"_index":697,"title":{},"body":{"injectables/ImagesService.html":{}}}],["console.log(`number",{"_index":1355,"title":{},"body":{"injectables/VisitorCounterMiddleware.html":{}}}],["console.log(a",{"_index":1292,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["console.log(decoded",{"_index":871,"title":{},"body":{"controllers/MessagesController.html":{}}}],["console.log(dto.email",{"_index":976,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["console.log(email",{"_index":1051,"title":{},"body":{"injectables/PasswordResetService.html":{}}}],["console.log(token",{"_index":1127,"title":{},"body":{"guards/RoleGuard.html":{}}}],["console.log(user",{"_index":381,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"guards/RoleGuard.html":{},"injectables/UtilisateursService.html":{}}}],["conspicuously",{"_index":1620,"title":{},"body":{"license.html":{}}}],["const",{"_index":205,"title":{},"body":{"controllers/AppController.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"controllers/MessagesController.html":{},"injectables/MessagesService.html":{},"injectables/PagesService.html":{},"controllers/PasswordResetController.html":{},"injectables/PasswordResetService.html":{},"classes/PrismaClientExceptionFilter.html":{},"guards/RoleGuard.html":{},"injectables/UtilisateursService.html":{},"controllers/VisitorController.html":{},"injectables/VisitorCounterMiddleware.html":{},"injectables/VisitorService.html":{}}}],["constantes",{"_index":1273,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["constants/auth.constants",{"_index":408,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/PasswordResetService.html":{},"guards/RoleGuard.html":{}}}],["constitutes",{"_index":1673,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":93,"title":{},"body":{"injectables/AlertService.html":{},"controllers/AppController.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/ImagesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"controllers/MessagesController.html":{},"injectables/MessagesService.html":{},"injectables/PagesService.html":{},"controllers/PasswordResetController.html":{},"injectables/PasswordResetService.html":{},"injectables/PrismaService.html":{},"guards/RoleGuard.html":{},"injectables/UtilisateursService.html":{},"injectables/VisitorCounterMiddleware.html":{},"injectables/VisitorService.html":{}}}],["constructor(authservice",{"_index":774,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(mailerservice",{"_index":823,"title":{},"body":{"injectables/MailService.html":{}}}],["constructor(mailservice",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(prisma",{"_index":94,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ArticleService.html":{},"injectables/ImagesService.html":{},"injectables/MessagesService.html":{},"injectables/PagesService.html":{},"injectables/PasswordResetService.html":{},"injectables/UtilisateursService.html":{},"injectables/VisitorCounterMiddleware.html":{},"injectables/VisitorService.html":{}}}],["constructor(private",{"_index":60,"title":{},"body":{"controllers/AlertController.html":{},"injectables/AlertService.html":{},"controllers/ArticleController.html":{},"controllers/ImagesController.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MessagesService.html":{},"controllers/PagesController.html":{},"injectables/PagesService.html":{},"controllers/UtilisateursController.html":{},"injectables/UtilisateursService.html":{},"controllers/VisitorController.html":{},"injectables/VisitorCounterMiddleware.html":{},"injectables/VisitorService.html":{}}}],["constructor(reflector",{"_index":1115,"title":{},"body":{"guards/RoleGuard.html":{}}}],["construed",{"_index":1721,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["consumer.apply(visitorcountermiddleware).forroutes",{"_index":277,"title":{},"body":{"modules/AppModule.html":{}}}],["contained",{"_index":1705,"title":{},"body":{"license.html":{}}}],["content",{"_index":321,"title":{},"body":{"controllers/ArticleController.html":{},"classes/CreateMessageDto.html":{},"injectables/MailService.html":{},"injectables/MessagesService.html":{},"license.html":{}}}],["contents",{"_index":1714,"title":{},"body":{"license.html":{}}}],["contenu",{"_index":466,"title":{},"body":{"classes/CreateArticleDto.html":{},"classes/CreatePageDto.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdatePageDto.html":{}}}],["context",{"_index":845,"title":{},"body":{"injectables/MailService.html":{},"guards/RoleGuard.html":{}}}],["context.getclass",{"_index":1124,"title":{},"body":{"guards/RoleGuard.html":{}}}],["context.gethandler",{"_index":1123,"title":{},"body":{"guards/RoleGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":1125,"title":{},"body":{"guards/RoleGuard.html":{}}}],["contract",{"_index":1538,"title":{},"body":{"license.html":{}}}],["contribution",{"_index":1597,"title":{},"body":{"license.html":{}}}],["contribution(s",{"_index":1662,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":1728,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":1624,"title":{},"body":{"license.html":{}}}],["contributory",{"_index":1674,"title":{},"body":{"license.html":{}}}],["control",{"_index":1523,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":1524,"title":{},"body":{"license.html":{}}}],["controller",{"_index":11,"title":{"controllers/AlertController.html":{},"controllers/AppController.html":{},"controllers/ArticleController.html":{},"controllers/ImagesController.html":{},"controllers/MessagesController.html":{},"controllers/PagesController.html":{},"controllers/PasswordResetController.html":{},"controllers/UtilisateursController.html":{},"controllers/VisitorController.html":{}},"body":{"controllers/AlertController.html":{},"controllers/AppController.html":{},"controllers/ArticleController.html":{},"controllers/ImagesController.html":{},"controllers/MessagesController.html":{},"controllers/PagesController.html":{},"controllers/PasswordResetController.html":{},"controllers/UtilisateursController.html":{},"controllers/VisitorController.html":{},"coverage.html":{}}}],["controller('alert",{"_index":58,"title":{},"body":{"controllers/AlertController.html":{}}}],["controller('article",{"_index":318,"title":{},"body":{"controllers/ArticleController.html":{}}}],["controller('images",{"_index":596,"title":{},"body":{"controllers/ImagesController.html":{}}}],["controller('messages",{"_index":867,"title":{},"body":{"controllers/MessagesController.html":{}}}],["controller('pages",{"_index":919,"title":{},"body":{"controllers/PagesController.html":{}}}],["controller('password",{"_index":971,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["controller('utilisateurs",{"_index":1228,"title":{},"body":{"controllers/UtilisateursController.html":{}}}],["controller('visitor",{"_index":1331,"title":{},"body":{"controllers/VisitorController.html":{}}}],["controllers",{"_index":13,"title":{},"body":{"controllers/AlertController.html":{},"modules/AlertModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"controllers/MessagesController.html":{},"modules/MessagesModule.html":{},"controllers/PagesController.html":{},"modules/PagesModule.html":{},"controllers/PasswordResetController.html":{},"controllers/UtilisateursController.html":{},"modules/UtilisateursModule.html":{},"controllers/VisitorController.html":{},"modules/VisitorModule.html":{},"overview.html":{}}}],["conversions",{"_index":1566,"title":{},"body":{"license.html":{}}}],["cookie",{"_index":204,"title":{},"body":{"controllers/AppController.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["copies",{"_index":1680,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1687,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1514,"title":{},"body":{"license.html":{}}}],["correct",{"_index":653,"title":{},"body":{"controllers/ImagesController.html":{},"injectables/UtilisateursService.html":{}}}],["counterclaim",{"_index":1670,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":1376,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":18,"title":{},"body":{"controllers/AlertController.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"controllers/MessagesController.html":{},"injectables/MessagesService.html":{},"controllers/PagesController.html":{},"injectables/PagesService.html":{},"classes/UpdateAlertDto.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateImageDto.html":{},"classes/UpdateMessageDto.html":{},"classes/UpdatePageDto.html":{},"classes/UpdatePasswordUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateVisitorDto.html":{},"controllers/UtilisateursController.html":{},"injectables/VisitorCounterMiddleware.html":{}}}],["create(@body",{"_index":62,"title":{},"body":{"controllers/AlertController.html":{},"controllers/MessagesController.html":{},"controllers/UtilisateursController.html":{}}}],["create(@request",{"_index":330,"title":{},"body":{"controllers/ArticleController.html":{}}}],["create(app",{"_index":1333,"title":{},"body":{"controllers/VisitorController.html":{}}}],["create(createalertdto",{"_index":22,"title":{},"body":{"controllers/AlertController.html":{}}}],["create(createmessagedto",{"_index":884,"title":{},"body":{"injectables/MessagesService.html":{}}}],["create(createpagedto",{"_index":905,"title":{},"body":{"controllers/PagesController.html":{},"injectables/PagesService.html":{}}}],["create(createutilisateurdto",{"_index":1209,"title":{},"body":{"controllers/UtilisateursController.html":{}}}],["create(data",{"_index":857,"title":{},"body":{"controllers/MessagesController.html":{}}}],["create(req",{"_index":288,"title":{},"body":{"controllers/ArticleController.html":{}}}],["createalert",{"_index":92,"title":{},"body":{"injectables/AlertService.html":{}}}],["createalert(data",{"_index":97,"title":{},"body":{"injectables/AlertService.html":{}}}],["createalertdto",{"_index":23,"title":{"classes/CreateAlertDto.html":{}},"body":{"controllers/AlertController.html":{},"injectables/AlertService.html":{},"classes/CreateAlertDto.html":{},"classes/UpdateAlertDto.html":{},"coverage.html":{}}}],["createarticle",{"_index":350,"title":{},"body":{"injectables/ArticleService.html":{}}}],["createarticle(createarticledto",{"_index":355,"title":{},"body":{"injectables/ArticleService.html":{}}}],["createarticledto",{"_index":289,"title":{"classes/CreateArticleDto.html":{}},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"classes/CreateArticleDto.html":{},"classes/UpdateArticleDto.html":{},"coverage.html":{}}}],["created",{"_index":299,"title":{},"body":{"controllers/ArticleController.html":{}}}],["createdat",{"_index":454,"title":{},"body":{"classes/CreateAlertDto.html":{},"injectables/PasswordResetService.html":{}}}],["createimagedto",{"_index":492,"title":{"classes/CreateImageDto.html":{}},"body":{"classes/CreateImageDto.html":{},"classes/UpdateImageDto.html":{},"coverage.html":{}}}],["createmessagedto",{"_index":495,"title":{"classes/CreateMessageDto.html":{}},"body":{"classes/CreateMessageDto.html":{},"controllers/MessagesController.html":{},"injectables/MessagesService.html":{},"classes/UpdateMessageDto.html":{},"coverage.html":{}}}],["createmessagedto.content",{"_index":894,"title":{},"body":{"injectables/MessagesService.html":{}}}],["createmessagedto.receiverid",{"_index":891,"title":{},"body":{"injectables/MessagesService.html":{}}}],["createmessagedto.senderid",{"_index":892,"title":{},"body":{"injectables/MessagesService.html":{}}}],["createpage",{"_index":932,"title":{},"body":{"injectables/PagesService.html":{}}}],["createpage(data",{"_index":935,"title":{},"body":{"injectables/PagesService.html":{}}}],["createpagedto",{"_index":513,"title":{"classes/CreatePageDto.html":{}},"body":{"classes/CreatePageDto.html":{},"controllers/PagesController.html":{},"injectables/PagesService.html":{},"classes/UpdatePageDto.html":{},"coverage.html":{}}}],["createutilisateur",{"_index":1251,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["createutilisateur(createutilisateurdto",{"_index":1261,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["createutilisateurdto",{"_index":147,"title":{"classes/CreateUtilisateurDto.html":{}},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"classes/CreateUtilisateurDto.html":{},"injectables/MailService.html":{},"classes/UpdatePasswordUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"controllers/UtilisateursController.html":{},"injectables/UtilisateursService.html":{},"coverage.html":{}}}],["createutilisateurdto.mot_de_passe",{"_index":1285,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["createvisitordto",{"_index":554,"title":{"classes/CreateVisitorDto.html":{}},"body":{"classes/CreateVisitorDto.html":{},"classes/UpdateVisitorDto.html":{},"coverage.html":{}}}],["createwritestream",{"_index":694,"title":{},"body":{"injectables/ImagesService.html":{}}}],["createwritestream(filepath",{"_index":716,"title":{},"body":{"injectables/ImagesService.html":{}}}],["cross",{"_index":1668,"title":{},"body":{"license.html":{}}}],["créer",{"_index":1280,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["ctx",{"_index":1067,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":1069,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["curly",{"_index":847,"title":{},"body":{"injectables/MailService.html":{}}}],["current",{"_index":122,"title":{},"body":{"controllers/AppController.html":{}}}],["customary",{"_index":1749,"title":{},"body":{"license.html":{}}}],["d",{"_index":1701,"title":{},"body":{"license.html":{}}}],["d'un",{"_index":1308,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["damages",{"_index":1786,"title":{},"body":{"license.html":{}}}],["dans",{"_index":604,"title":{},"body":{"controllers/ImagesController.html":{},"controllers/PasswordResetController.html":{}}}],["data",{"_index":99,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ArticleService.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"controllers/MessagesController.html":{},"injectables/MessagesService.html":{},"injectables/PagesService.html":{},"injectables/PasswordResetService.html":{},"injectables/UtilisateursService.html":{}}}],["data')@useinterceptors(undefined",{"_index":579,"title":{},"body":{"controllers/ImagesController.html":{}}}],["data.url_img",{"_index":739,"title":{},"body":{"injectables/ImagesService.html":{}}}],["database",{"_index":645,"title":{},"body":{"controllers/ImagesController.html":{}}}],["datasources",{"_index":1105,"title":{},"body":{"injectables/PrismaService.html":{}}}],["date",{"_index":457,"title":{},"body":{"classes/CreateAlertDto.html":{},"classes/CreateArticleDto.html":{},"classes/CreateUtilisateurDto.html":{},"injectables/PasswordResetService.html":{},"classes/UpdateArticleDto.html":{},"classes/Utilisateur.html":{},"license.html":{}}}],["date_creation",{"_index":467,"title":{},"body":{"classes/CreateArticleDto.html":{},"classes/UpdateArticleDto.html":{},"classes/Utilisateur.html":{}}}],["date_modification",{"_index":1183,"title":{},"body":{"classes/Utilisateur.html":{}}}],["date_naissance",{"_index":524,"title":{},"body":{"classes/CreateUtilisateurDto.html":{}}}],["date_suppression",{"_index":468,"title":{},"body":{"classes/CreateArticleDto.html":{},"classes/UpdateArticleDto.html":{}}}],["db",{"_index":1094,"title":{},"body":{"injectables/PrismaService.html":{}}}],["db_test",{"_index":1096,"title":{},"body":{"injectables/PrismaService.html":{}}}],["de",{"_index":532,"title":{},"body":{"classes/CreateUtilisateurDto.html":{},"controllers/PasswordResetController.html":{},"injectables/PrismaService.html":{},"injectables/UtilisateursService.html":{}}}],["debug",{"_index":699,"title":{},"body":{"injectables/ImagesService.html":{}}}],["declarations",{"_index":75,"title":{},"body":{"modules/AlertModule.html":{},"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/ImagesModule.html":{},"modules/MailModule.html":{},"modules/MessagesModule.html":{},"modules/PagesModule.html":{},"modules/PrismaModule.html":{},"modules/UtilisateursModule.html":{},"modules/VisitorModule.html":{},"overview.html":{}}}],["decoded",{"_index":869,"title":{},"body":{"controllers/MessagesController.html":{},"guards/RoleGuard.html":{}}}],["decorators",{"_index":24,"title":{},"body":{"controllers/AlertController.html":{},"controllers/AppController.html":{},"controllers/ArticleController.html":{},"classes/CreateAlertDto.html":{},"classes/CreateArticleDto.html":{},"classes/CreateMessageDto.html":{},"classes/CreatePageDto.html":{},"classes/CreateUtilisateurDto.html":{},"controllers/ImagesController.html":{},"classes/LoginDto.html":{},"controllers/MessagesController.html":{},"controllers/PagesController.html":{},"controllers/PasswordResetController.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdatePageDto.html":{},"classes/UpdatePasswordUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/Utilisateur.html":{},"controllers/UtilisateursController.html":{},"controllers/VisitorController.html":{},"classes/passwordForgotDto.html":{},"classes/passwordResetDto.html":{}}}],["default",{"_index":678,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/MailService.html":{},"controllers/PagesController.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/UtilisateursService.html":{},"injectables/VisitorService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":811,"title":{},"body":{"modules/MailModule.html":{}}}],["defend",{"_index":1819,"title":{},"body":{"license.html":{}}}],["defined",{"_index":26,"title":{},"body":{"controllers/AlertController.html":{},"injectables/AlertService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"classes/CreateAlertDto.html":{},"classes/CreateArticleDto.html":{},"classes/CreateMessageDto.html":{},"classes/CreatePageDto.html":{},"classes/CreateUtilisateurDto.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"controllers/MessagesController.html":{},"injectables/MessagesService.html":{},"controllers/PagesController.html":{},"injectables/PagesService.html":{},"controllers/PasswordResetController.html":{},"injectables/PasswordResetService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"guards/RoleGuard.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdatePageDto.html":{},"classes/UpdatePasswordUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/Utilisateur.html":{},"controllers/UtilisateursController.html":{},"injectables/UtilisateursService.html":{},"controllers/VisitorController.html":{},"injectables/VisitorCounterMiddleware.html":{},"injectables/VisitorService.html":{},"license.html":{},"classes/passwordForgotDto.html":{},"classes/passwordResetDto.html":{}}}],["definition",{"_index":1528,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":1506,"title":{},"body":{"license.html":{}}}],["delete",{"_index":46,"title":{},"body":{"controllers/AlertController.html":{},"controllers/ArticleController.html":{},"controllers/ImagesController.html":{},"controllers/MessagesController.html":{},"controllers/PagesController.html":{},"controllers/UtilisateursController.html":{}}}],["delete(':id",{"_index":41,"title":{},"body":{"controllers/AlertController.html":{},"controllers/ArticleController.html":{},"controllers/MessagesController.html":{},"controllers/PagesController.html":{},"controllers/UtilisateursController.html":{},"controllers/VisitorController.html":{}}}],["delete(@param('filename",{"_index":656,"title":{},"body":{"controllers/ImagesController.html":{}}}],["delete(filename",{"_index":565,"title":{},"body":{"controllers/ImagesController.html":{}}}],["deletedpage",{"_index":949,"title":{},"body":{"injectables/PagesService.html":{}}}],["deleteurl",{"_index":669,"title":{},"body":{"injectables/ImagesService.html":{}}}],["deleteurl(imageurl",{"_index":680,"title":{},"body":{"injectables/ImagesService.html":{}}}],["deleting",{"_index":725,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/PasswordResetService.html":{}}}],["deliberate",{"_index":1781,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":73,"title":{"dependencies.html":{}},"body":{"modules/AlertModule.html":{},"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/ImagesModule.html":{},"modules/MailModule.html":{},"modules/MessagesModule.html":{},"modules/PagesModule.html":{},"modules/PrismaModule.html":{},"modules/UtilisateursModule.html":{},"modules/VisitorModule.html":{},"dependencies.html":{},"overview.html":{}}}],["derivative",{"_index":1579,"title":{},"body":{"license.html":{}}}],["derived",{"_index":1582,"title":{},"body":{"license.html":{}}}],["describing",{"_index":1750,"title":{},"body":{"license.html":{}}}],["description",{"_index":136,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"classes/CreateArticleDto.html":{},"classes/CreateMessageDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/LoginDto.html":{},"classes/UpdateArticleDto.html":{},"index.html":{},"license.html":{},"classes/passwordForgotDto.html":{},"properties.html":{}}}],["designated",{"_index":1622,"title":{},"body":{"license.html":{}}}],["destination",{"_index":615,"title":{},"body":{"controllers/ImagesController.html":{}}}],["determining",{"_index":1769,"title":{},"body":{"license.html":{}}}],["development",{"_index":1458,"title":{},"body":{"index.html":{}}}],["different",{"_index":1725,"title":{},"body":{"license.html":{}}}],["dir",{"_index":814,"title":{},"body":{"modules/MailModule.html":{}}}],["direct",{"_index":1531,"title":{},"body":{"license.html":{}}}],["direction",{"_index":1534,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":1753,"title":{},"body":{"license.html":{}}}],["discussing",{"_index":1617,"title":{},"body":{"license.html":{}}}],["diskstorage",{"_index":588,"title":{},"body":{"controllers/ImagesController.html":{}}}],["display",{"_index":1644,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":1647,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":1707,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":1505,"title":{},"body":{"license.html":{}}}],["document",{"_index":1512,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":1377,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["don't",{"_index":1834,"title":{},"body":{"license.html":{}}}],["données",{"_index":1003,"title":{},"body":{"controllers/PasswordResetController.html":{},"injectables/PrismaService.html":{}}}],["dossier",{"_index":606,"title":{},"body":{"controllers/ImagesController.html":{}}}],["dto",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{},"controllers/PasswordResetController.html":{}}}],["dto.email",{"_index":977,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["dto/create",{"_index":50,"title":{},"body":{"controllers/AlertController.html":{},"injectables/AlertService.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"controllers/MessagesController.html":{},"injectables/MessagesService.html":{},"controllers/PagesController.html":{},"injectables/PagesService.html":{},"controllers/UtilisateursController.html":{},"injectables/UtilisateursService.html":{}}}],["dto/password",{"_index":965,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["dto/update",{"_index":53,"title":{},"body":{"controllers/AlertController.html":{},"injectables/AlertService.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"controllers/MessagesController.html":{},"injectables/MessagesService.html":{},"controllers/PagesController.html":{},"injectables/PagesService.html":{},"controllers/UtilisateursController.html":{},"injectables/UtilisateursService.html":{}}}],["dupont",{"_index":546,"title":{},"body":{"classes/CreateUtilisateurDto.html":{}}}],["e",{"_index":1005,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["e.g",{"_index":644,"title":{},"body":{"controllers/ImagesController.html":{}}}],["e2e",{"_index":1468,"title":{},"body":{"index.html":{}}}],["each",{"_index":1630,"title":{},"body":{"license.html":{}}}],["easier",{"_index":1841,"title":{},"body":{"license.html":{}}}],["editorial",{"_index":1583,"title":{},"body":{"license.html":{}}}],["efficient",{"_index":1446,"title":{},"body":{"index.html":{}}}],["ejs",{"_index":1415,"title":{},"body":{"dependencies.html":{}}}],["elaborations",{"_index":1586,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":1604,"title":{},"body":{"license.html":{}}}],["element",{"_index":573,"title":{},"body":{"controllers/ImagesController.html":{},"injectables/ImagesService.html":{}}}],["email",{"_index":132,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"classes/CreateUtilisateurDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"controllers/PasswordResetController.html":{},"injectables/PasswordResetService.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/Utilisateur.html":{},"controllers/UtilisateursController.html":{},"injectables/UtilisateursService.html":{},"classes/passwordForgotDto.html":{},"miscellaneous/variables.html":{}}}],["en",{"_index":1097,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enabled",{"_index":800,"title":{},"body":{"modules/MailModule.html":{}}}],["enableshutdownhooks",{"_index":1088,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":1090,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enclosed",{"_index":1830,"title":{},"body":{"license.html":{}}}],["end",{"_index":1825,"title":{},"body":{"license.html":{}}}],["enregistrez",{"_index":1001,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["entities",{"_index":1522,"title":{},"body":{"license.html":{}}}],["entity",{"_index":1516,"title":{},"body":{"license.html":{}}}],["entry",{"_index":1048,"title":{},"body":{"injectables/PasswordResetService.html":{}}}],["enum",{"_index":307,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/PagesController.html":{},"injectables/UtilisateursService.html":{}}}],["enum/roles.enum",{"_index":189,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"classes/CreateUtilisateurDto.html":{},"controllers/PagesController.html":{},"controllers/PasswordResetController.html":{},"guards/RoleGuard.html":{},"classes/UpdateUtilisateurDto.html":{},"controllers/UtilisateursController.html":{},"injectables/UtilisateursService.html":{}}}],["enumerations",{"_index":1434,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums",{"_index":1277,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["envoyez",{"_index":1012,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["err",{"_index":723,"title":{},"body":{"injectables/ImagesService.html":{}}}],["erreur",{"_index":1006,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["error",{"_index":743,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/PasswordResetService.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["error('invalid",{"_index":1039,"title":{},"body":{"injectables/PasswordResetService.html":{}}}],["error('only",{"_index":627,"title":{},"body":{"controllers/ImagesController.html":{}}}],["est",{"_index":979,"title":{},"body":{"controllers/PasswordResetController.html":{},"injectables/UtilisateursService.html":{}}}],["et",{"_index":1309,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["etc",{"_index":646,"title":{},"body":{"controllers/ImagesController.html":{}}}],["even",{"_index":1802,"title":{},"body":{"license.html":{}}}],["event",{"_index":1777,"title":{},"body":{"license.html":{}}}],["example",{"_index":502,"title":{},"body":{"classes/CreateMessageDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/LoginDto.html":{},"license.html":{},"classes/passwordForgotDto.html":{},"classes/passwordResetDto.html":{}}}],["except",{"_index":1649,"title":{},"body":{"license.html":{}}}],["exception",{"_index":1063,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["exception.code",{"_index":1072,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["exception.filter.ts",{"_index":1057,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:8",{"_index":1062,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["exception.message.replace(/\\n/g",{"_index":1070,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["exception/prisma",{"_index":1056,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{},"coverage.html":{}}}],["excluding",{"_index":1619,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":1636,"title":{},"body":{"license.html":{}}}],["executed",{"_index":1739,"title":{},"body":{"license.html":{}}}],["executioncontext",{"_index":1119,"title":{},"body":{"guards/RoleGuard.html":{}}}],["exercise",{"_index":1775,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":1550,"title":{},"body":{"license.html":{}}}],["exist",{"_index":659,"title":{},"body":{"controllers/ImagesController.html":{},"injectables/ImagesService.html":{}}}],["expiresin",{"_index":418,"title":{},"body":{"modules/AuthModule.html":{},"controllers/PasswordResetController.html":{}}}],["explicitly",{"_index":1730,"title":{},"body":{"license.html":{}}}],["export",{"_index":7,"title":{},"body":{"classes/Alert.html":{},"controllers/AlertController.html":{},"modules/AlertModule.html":{},"injectables/AlertService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"classes/Auth.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAlertDto.html":{},"classes/CreateArticleDto.html":{},"classes/CreateImageDto.html":{},"classes/CreateMessageDto.html":{},"classes/CreatePageDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateVisitorDto.html":{},"classes/Image.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/Message.html":{},"controllers/MessagesController.html":{},"modules/MessagesModule.html":{},"injectables/MessagesService.html":{},"controllers/PagesController.html":{},"modules/PagesModule.html":{},"injectables/PagesService.html":{},"controllers/PasswordResetController.html":{},"injectables/PasswordResetService.html":{},"classes/PrismaClientExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"guards/RoleGuard.html":{},"classes/UpdateAlertDto.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateImageDto.html":{},"classes/UpdateMessageDto.html":{},"classes/UpdatePageDto.html":{},"classes/UpdatePasswordUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateVisitorDto.html":{},"classes/Utilisateur.html":{},"controllers/UtilisateursController.html":{},"modules/UtilisateursModule.html":{},"injectables/UtilisateursService.html":{},"classes/Visitor.html":{},"controllers/VisitorController.html":{},"injectables/VisitorCounterMiddleware.html":{},"modules/VisitorModule.html":{},"injectables/VisitorService.html":{},"classes/passwordForgotDto.html":{},"classes/passwordResetDto.html":{}}}],["exports",{"_index":78,"title":{},"body":{"modules/AlertModule.html":{},"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/ImagesModule.html":{},"modules/MailModule.html":{},"modules/MessagesModule.html":{},"modules/PagesModule.html":{},"modules/PrismaModule.html":{},"modules/UtilisateursModule.html":{},"modules/VisitorModule.html":{},"overview.html":{}}}],["express",{"_index":587,"title":{},"body":{"controllers/ImagesController.html":{},"classes/PrismaClientExceptionFilter.html":{},"dependencies.html":{},"license.html":{}}}],["express.multer.file",{"_index":676,"title":{},"body":{"injectables/ImagesService.html":{}}}],["extends",{"_index":748,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"classes/UpdateAlertDto.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateImageDto.html":{},"classes/UpdateMessageDto.html":{},"classes/UpdatePageDto.html":{},"classes/UpdatePasswordUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateVisitorDto.html":{}}}],["extension",{"_index":842,"title":{},"body":{"injectables/MailService.html":{}}}],["externaliser",{"_index":617,"title":{},"body":{"controllers/ImagesController.html":{}}}],["extname",{"_index":590,"title":{},"body":{"controllers/ImagesController.html":{}}}],["extract",{"_index":766,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt",{"_index":756,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":763,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjlbwfpbci6im5hdghhbmn1dmvsawvyntlaz21hawwuy29tiiwic3viijo1nywicm9szsi6impldw5liiwiawf0ijoxnjc3ntgzmzewlcjlehaiojc2nzc1odmzmtb9.rmczbzr_8jn031ivbuepz1x3k25ryatd",{"_index":510,"title":{},"body":{"classes/CreateMessageDto.html":{}}}],["failure",{"_index":1798,"title":{},"body":{"license.html":{}}}],["false",{"_index":296,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/ImagesController.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/PasswordResetService.html":{},"guards/RoleGuard.html":{}}}],["fee",{"_index":1807,"title":{},"body":{"license.html":{}}}],["fields",{"_index":1829,"title":{},"body":{"license.html":{}}}],["fifty",{"_index":1542,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/Alert.html":{},"controllers/AlertController.html":{},"modules/AlertModule.html":{},"injectables/AlertService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"classes/Auth.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAlertDto.html":{},"classes/CreateArticleDto.html":{},"classes/CreateImageDto.html":{},"classes/CreateMessageDto.html":{},"classes/CreatePageDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateVisitorDto.html":{},"classes/Image.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/Message.html":{},"controllers/MessagesController.html":{},"modules/MessagesModule.html":{},"injectables/MessagesService.html":{},"controllers/PagesController.html":{},"modules/PagesModule.html":{},"injectables/PagesService.html":{},"controllers/PasswordResetController.html":{},"injectables/PasswordResetService.html":{},"classes/PrismaClientExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"guards/RoleGuard.html":{},"classes/UpdateAlertDto.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateImageDto.html":{},"classes/UpdateMessageDto.html":{},"classes/UpdatePageDto.html":{},"classes/UpdatePasswordUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateVisitorDto.html":{},"classes/Utilisateur.html":{},"controllers/UtilisateursController.html":{},"modules/UtilisateursModule.html":{},"injectables/UtilisateursService.html":{},"classes/Visitor.html":{},"controllers/VisitorController.html":{},"injectables/VisitorCounterMiddleware.html":{},"modules/VisitorModule.html":{},"injectables/VisitorService.html":{},"coverage.html":{},"license.html":{},"classes/passwordForgotDto.html":{},"classes/passwordResetDto.html":{}}}],["file.filename",{"_index":651,"title":{},"body":{"controllers/ImagesController.html":{},"injectables/ImagesService.html":{}}}],["file.originalname",{"_index":649,"title":{},"body":{"controllers/ImagesController.html":{}}}],["file.originalname.match(/\\.(jpg|jpeg|png|gif|svg|pdf",{"_index":625,"title":{},"body":{"controllers/ImagesController.html":{}}}],["filed",{"_index":1678,"title":{},"body":{"license.html":{}}}],["filefilter",{"_index":624,"title":{},"body":{"controllers/ImagesController.html":{}}}],["fileinterceptor",{"_index":585,"title":{},"body":{"controllers/ImagesController.html":{}}}],["fileinterceptor('file",{"_index":613,"title":{},"body":{"controllers/ImagesController.html":{}}}],["filename",{"_index":568,"title":{},"body":{"controllers/ImagesController.html":{},"injectables/ImagesService.html":{}}}],["filepath",{"_index":701,"title":{},"body":{"injectables/ImagesService.html":{}}}],["files",{"_index":628,"title":{},"body":{"controllers/ImagesController.html":{},"license.html":{}}}],["filesize",{"_index":631,"title":{},"body":{"controllers/ImagesController.html":{}}}],["filling",{"_index":846,"title":{},"body":{"injectables/MailService.html":{}}}],["find",{"_index":331,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"controllers/UtilisateursController.html":{}}}],["findall",{"_index":19,"title":{},"body":{"controllers/AlertController.html":{},"injectables/AlertService.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"controllers/MessagesController.html":{},"injectables/MessagesService.html":{},"controllers/PagesController.html":{},"injectables/PagesService.html":{},"controllers/UtilisateursController.html":{},"injectables/UtilisateursService.html":{}}}],["findbyemail",{"_index":1200,"title":{},"body":{"controllers/UtilisateursController.html":{}}}],["findbyemail(@param('email",{"_index":1238,"title":{},"body":{"controllers/UtilisateursController.html":{}}}],["findbyemail(email",{"_index":1214,"title":{},"body":{"controllers/UtilisateursController.html":{}}}],["findone",{"_index":20,"title":{},"body":{"controllers/AlertController.html":{},"injectables/AlertService.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"controllers/MessagesController.html":{},"injectables/MessagesService.html":{},"controllers/PagesController.html":{},"injectables/PagesService.html":{},"controllers/UtilisateursController.html":{},"injectables/UtilisateursService.html":{}}}],["findone(@param('id",{"_index":66,"title":{},"body":{"controllers/AlertController.html":{},"controllers/ArticleController.html":{},"controllers/MessagesController.html":{},"controllers/PagesController.html":{},"controllers/UtilisateursController.html":{},"controllers/VisitorController.html":{}}}],["findone(id",{"_index":35,"title":{},"body":{"controllers/AlertController.html":{},"injectables/AlertService.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"controllers/MessagesController.html":{},"injectables/MessagesService.html":{},"controllers/PagesController.html":{},"injectables/PagesService.html":{},"controllers/UtilisateursController.html":{},"injectables/UtilisateursService.html":{}}}],["findonebyemail",{"_index":1252,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["findonebyemail(email",{"_index":1265,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["fitness",{"_index":1765,"title":{},"body":{"license.html":{}}}],["following",{"_index":1684,"title":{},"body":{"license.html":{}}}],["fonction",{"_index":1098,"title":{},"body":{"injectables/PrismaService.html":{}}}],["forgot.dto",{"_index":966,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["forgot.dto.ts",{"_index":1390,"title":{},"body":{"coverage.html":{},"classes/passwordForgotDto.html":{}}}],["forgot.dto.ts:8",{"_index":1861,"title":{},"body":{"classes/passwordForgotDto.html":{}}}],["forgotpassword",{"_index":952,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["forgotpassword(@body",{"_index":975,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["forgotpassword(dto",{"_index":954,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["form",{"_index":1553,"title":{},"body":{"license.html":{}}}],["format",{"_index":610,"title":{},"body":{"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"license.html":{}}}],["found",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ImagesService.html":{},"injectables/PagesService.html":{},"injectables/UtilisateursService.html":{},"miscellaneous/variables.html":{}}}],["fourni",{"_index":1024,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["framework",{"_index":1444,"title":{},"body":{"index.html":{}}}],["française",{"_index":544,"title":{},"body":{"classes/CreateUtilisateurDto.html":{}}}],["free",{"_index":1639,"title":{},"body":{"license.html":{}}}],["fs",{"_index":693,"title":{},"body":{"injectables/ImagesService.html":{}}}],["fs.promises.unlink(filepath",{"_index":741,"title":{},"body":{"injectables/ImagesService.html":{}}}],["fs.unlink(filepath",{"_index":722,"title":{},"body":{"injectables/ImagesService.html":{}}}],["function",{"_index":1346,"title":{},"body":{"injectables/VisitorCounterMiddleware.html":{},"coverage.html":{}}}],["functions",{"_index":1438,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generated",{"_index":1565,"title":{},"body":{"license.html":{}}}],["get(':id",{"_index":37,"title":{},"body":{"controllers/AlertController.html":{},"controllers/ArticleController.html":{},"controllers/MessagesController.html":{},"controllers/PagesController.html":{},"controllers/UtilisateursController.html":{},"controllers/VisitorController.html":{}}}],["get('alerts",{"_index":33,"title":{},"body":{"controllers/AlertController.html":{}}}],["get('articles",{"_index":301,"title":{},"body":{"controllers/ArticleController.html":{}}}],["get('email/:email",{"_index":1237,"title":{},"body":{"controllers/UtilisateursController.html":{}}}],["get('profile",{"_index":229,"title":{},"body":{"controllers/AppController.html":{}}}],["get('total",{"_index":1327,"title":{},"body":{"controllers/VisitorController.html":{}}}],["getcounter",{"_index":1358,"title":{},"body":{"injectables/VisitorCounterMiddleware.html":{}}}],["getfordelete",{"_index":670,"title":{},"body":{"injectables/ImagesService.html":{}}}],["getfordelete(imageurl",{"_index":682,"title":{},"body":{"injectables/ImagesService.html":{}}}],["gethello",{"_index":279,"title":{},"body":{"injectables/AppService.html":{}}}],["getprofile",{"_index":112,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile(@request",{"_index":230,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile(req",{"_index":119,"title":{},"body":{"controllers/AppController.html":{}}}],["getting",{"_index":1440,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettotalvisitors",{"_index":1326,"title":{},"body":{"controllers/VisitorController.html":{},"injectables/VisitorService.html":{}}}],["geturl",{"_index":671,"title":{},"body":{"injectables/ImagesService.html":{}}}],["geturl(imageurl",{"_index":684,"title":{},"body":{"injectables/ImagesService.html":{}}}],["geturlfordelete",{"_index":562,"title":{},"body":{"controllers/ImagesController.html":{}}}],["geturlfordelete(imageurl",{"_index":569,"title":{},"body":{"controllers/ImagesController.html":{}}}],["gif",{"_index":712,"title":{},"body":{"injectables/ImagesService.html":{}}}],["git+https://github.com/rowada/mlv_back.git",{"_index":1870,"title":{},"body":{"properties.html":{}}}],["give",{"_index":1685,"title":{},"body":{"license.html":{}}}],["global",{"_index":796,"title":{},"body":{"modules/MailModule.html":{}}}],["globally",{"_index":801,"title":{},"body":{"modules/MailModule.html":{}}}],["goodwill",{"_index":1795,"title":{},"body":{"license.html":{}}}],["governing",{"_index":1851,"title":{},"body":{"license.html":{}}}],["grant",{"_index":1629,"title":{},"body":{"license.html":{}}}],["granted",{"_index":1552,"title":{},"body":{"license.html":{}}}],["granting",{"_index":1518,"title":{},"body":{"license.html":{}}}],["grants",{"_index":1632,"title":{},"body":{"license.html":{}}}],["grossly",{"_index":1782,"title":{},"body":{"license.html":{}}}],["grow",{"_index":1475,"title":{},"body":{"index.html":{}}}],["guard",{"_index":1111,"title":{"guards/RoleGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guard/jwt",{"_index":968,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["guards",{"_index":1112,"title":{},"body":{"guards/RoleGuard.html":{}}}],["générez",{"_index":995,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["handle",{"_index":1047,"title":{},"body":{"injectables/PasswordResetService.html":{}}}],["handlebars",{"_index":1419,"title":{},"body":{"dependencies.html":{}}}],["handlebarsadapter",{"_index":794,"title":{},"body":{"modules/MailModule.html":{}}}],["harmless",{"_index":1821,"title":{},"body":{"license.html":{}}}],["hashedpassword",{"_index":1283,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["hbs",{"_index":841,"title":{},"body":{"injectables/MailService.html":{}}}],["header",{"_index":332,"title":{},"body":{"controllers/ArticleController.html":{}}}],["headers",{"_index":294,"title":{},"body":{"controllers/ArticleController.html":{}}}],["height",{"_index":707,"title":{},"body":{"injectables/ImagesService.html":{}}}],["hello",{"_index":281,"title":{},"body":{"injectables/AppService.html":{},"classes/CreateMessageDto.html":{}}}],["here",{"_index":1485,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":1631,"title":{},"body":{"license.html":{}}}],["herein",{"_index":1735,"title":{},"body":{"license.html":{}}}],["hold",{"_index":1820,"title":{},"body":{"license.html":{}}}],["homepage",{"_index":1865,"title":{},"body":{"properties.html":{}}}],["host",{"_index":806,"title":{},"body":{"modules/MailModule.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["host.switchtohttp",{"_index":1068,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["http://localhost:3000/confirmation/${token",{"_index":830,"title":{},"body":{"injectables/MailService.html":{}}}],["http://localhost:3000/reset",{"_index":850,"title":{},"body":{"injectables/MailService.html":{}}}],["http://www.apache.org/licenses",{"_index":1501,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/license",{"_index":1847,"title":{},"body":{"license.html":{}}}],["httpexception",{"_index":963,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["httponly",{"_index":210,"title":{},"body":{"controllers/AppController.html":{}}}],["https://github.com/rowada/mlv_back#readme",{"_index":1866,"title":{},"body":{"properties.html":{}}}],["https://github.com/rowada/mlv_back/issues",{"_index":1868,"title":{},"body":{"properties.html":{}}}],["https://nestjs.com",{"_index":1492,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":964,"title":{},"body":{"controllers/PasswordResetController.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["httpstatus.bad_request",{"_index":981,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["httpstatus.conflict",{"_index":1075,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["httpstatus.internal_server_error",{"_index":1011,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["httpstatus.not_found",{"_index":994,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["id",{"_index":39,"title":{},"body":{"controllers/AlertController.html":{},"injectables/AlertService.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"classes/CreateMessageDto.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"controllers/MessagesController.html":{},"injectables/MessagesService.html":{},"controllers/PagesController.html":{},"injectables/PagesService.html":{},"injectables/PasswordResetService.html":{},"classes/Utilisateur.html":{},"controllers/UtilisateursController.html":{},"injectables/UtilisateursService.html":{},"controllers/VisitorController.html":{},"injectables/VisitorCounterMiddleware.html":{},"miscellaneous/variables.html":{}}}],["id_conseiller",{"_index":1202,"title":{},"body":{"controllers/UtilisateursController.html":{}}}],["id_jeune",{"_index":1205,"title":{},"body":{"controllers/UtilisateursController.html":{}}}],["id_user",{"_index":379,"title":{},"body":{"injectables/ArticleService.html":{}}}],["idconseiller",{"_index":1256,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["identification",{"_index":1842,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":1378,"title":{},"body":{"coverage.html":{}}}],["identifying",{"_index":1832,"title":{},"body":{"license.html":{}}}],["idjeune",{"_index":1258,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["ignoreexpiration",{"_index":764,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["ii",{"_index":1540,"title":{},"body":{"license.html":{}}}],["iii",{"_index":1547,"title":{},"body":{"license.html":{}}}],["image",{"_index":557,"title":{"classes/Image.html":{}},"body":{"classes/Image.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"coverage.html":{}}}],["image.dto",{"_index":1156,"title":{},"body":{"classes/UpdateImageDto.html":{}}}],["image.dto.ts",{"_index":494,"title":{},"body":{"classes/CreateImageDto.html":{},"classes/UpdateImageDto.html":{},"coverage.html":{}}}],["imagepath",{"_index":667,"title":{},"body":{"injectables/ImagesService.html":{}}}],["images",{"_index":561,"title":{},"body":{"controllers/ImagesController.html":{},"injectables/ImagesService.html":{}}}],["images.controller",{"_index":664,"title":{},"body":{"modules/ImagesModule.html":{}}}],["images.service",{"_index":584,"title":{},"body":{"controllers/ImagesController.html":{},"modules/ImagesModule.html":{}}}],["images/images.module",{"_index":272,"title":{},"body":{"modules/AppModule.html":{}}}],["imagescontroller",{"_index":559,"title":{"controllers/ImagesController.html":{}},"body":{"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"coverage.html":{}}}],["imagesmodule",{"_index":245,"title":{"modules/ImagesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ImagesModule.html":{},"modules.html":{},"overview.html":{}}}],["imagesservice",{"_index":583,"title":{"injectables/ImagesService.html":{}},"body":{"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"coverage.html":{},"overview.html":{}}}],["imageurl",{"_index":571,"title":{},"body":{"controllers/ImagesController.html":{},"injectables/ImagesService.html":{}}}],["img_description",{"_index":469,"title":{},"body":{"classes/CreateArticleDto.html":{},"classes/UpdateArticleDto.html":{}}}],["img_titre",{"_index":470,"title":{},"body":{"classes/CreateArticleDto.html":{},"classes/UpdateArticleDto.html":{}}}],["img_url",{"_index":363,"title":{},"body":{"injectables/ArticleService.html":{}}}],["implements",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"guards/RoleGuard.html":{},"injectables/VisitorCounterMiddleware.html":{}}}],["implied",{"_index":1762,"title":{},"body":{"license.html":{}}}],["import",{"_index":43,"title":{},"body":{"controllers/AlertController.html":{},"modules/AlertModule.html":{},"injectables/AlertService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAlertDto.html":{},"classes/CreateArticleDto.html":{},"classes/CreateMessageDto.html":{},"classes/CreatePageDto.html":{},"classes/CreateUtilisateurDto.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"controllers/MessagesController.html":{},"modules/MessagesModule.html":{},"injectables/MessagesService.html":{},"controllers/PagesController.html":{},"modules/PagesModule.html":{},"injectables/PagesService.html":{},"controllers/PasswordResetController.html":{},"injectables/PasswordResetService.html":{},"classes/PrismaClientExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"guards/RoleGuard.html":{},"classes/UpdateAlertDto.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateImageDto.html":{},"classes/UpdateMessageDto.html":{},"classes/UpdatePageDto.html":{},"classes/UpdatePasswordUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateVisitorDto.html":{},"classes/Utilisateur.html":{},"controllers/UtilisateursController.html":{},"modules/UtilisateursModule.html":{},"injectables/UtilisateursService.html":{},"controllers/VisitorController.html":{},"injectables/VisitorCounterMiddleware.html":{},"modules/VisitorModule.html":{},"injectables/VisitorService.html":{},"license.html":{},"classes/passwordForgotDto.html":{},"classes/passwordResetDto.html":{}}}],["imports",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/UtilisateursModule.html":{}}}],["improving",{"_index":1618,"title":{},"body":{"license.html":{}}}],["inability",{"_index":1793,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":1788,"title":{},"body":{"license.html":{}}}],["include",{"_index":1590,"title":{},"body":{"license.html":{}}}],["included",{"_index":1574,"title":{},"body":{"license.html":{}}}],["includes",{"_index":1702,"title":{},"body":{"license.html":{}}}],["including",{"_index":1557,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":1601,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":1627,"title":{},"body":{"license.html":{}}}],["incorrect",{"_index":1316,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["increment",{"_index":1353,"title":{},"body":{"injectables/VisitorCounterMiddleware.html":{}}}],["incrementation",{"_index":1365,"title":{},"body":{"injectables/VisitorService.html":{}}}],["incrementation(app",{"_index":1368,"title":{},"body":{"injectables/VisitorService.html":{}}}],["incurred",{"_index":1822,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":1818,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":1809,"title":{},"body":{"license.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"controllers/AlertController.html":{},"injectables/AlertService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"classes/CreateAlertDto.html":{},"classes/CreateArticleDto.html":{},"classes/CreateMessageDto.html":{},"classes/CreatePageDto.html":{},"classes/CreateUtilisateurDto.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"controllers/MessagesController.html":{},"injectables/MessagesService.html":{},"controllers/PagesController.html":{},"injectables/PagesService.html":{},"controllers/PasswordResetController.html":{},"injectables/PasswordResetService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"guards/RoleGuard.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdatePageDto.html":{},"classes/UpdatePasswordUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/Utilisateur.html":{},"controllers/UtilisateursController.html":{},"injectables/UtilisateursService.html":{},"controllers/VisitorController.html":{},"injectables/VisitorCounterMiddleware.html":{},"injectables/VisitorService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"classes/passwordForgotDto.html":{},"classes/passwordResetDto.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index(@request",{"_index":237,"title":{},"body":{"controllers/AppController.html":{}}}],["index(req",{"_index":127,"title":{},"body":{"controllers/AppController.html":{}}}],["indicated",{"_index":1572,"title":{},"body":{"license.html":{}}}],["indirect",{"_index":1532,"title":{},"body":{"license.html":{}}}],["individual",{"_index":1549,"title":{},"body":{"license.html":{}}}],["inestapplication",{"_index":1091,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Alert.html":{},"controllers/AlertController.html":{},"modules/AlertModule.html":{},"injectables/AlertService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"classes/Auth.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAlertDto.html":{},"classes/CreateArticleDto.html":{},"classes/CreateImageDto.html":{},"classes/CreateMessageDto.html":{},"classes/CreatePageDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateVisitorDto.html":{},"classes/Image.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/Message.html":{},"controllers/MessagesController.html":{},"modules/MessagesModule.html":{},"injectables/MessagesService.html":{},"controllers/PagesController.html":{},"modules/PagesModule.html":{},"injectables/PagesService.html":{},"controllers/PasswordResetController.html":{},"injectables/PasswordResetService.html":{},"classes/PrismaClientExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"guards/RoleGuard.html":{},"classes/UpdateAlertDto.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateImageDto.html":{},"classes/UpdateMessageDto.html":{},"classes/UpdatePageDto.html":{},"classes/UpdatePasswordUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateVisitorDto.html":{},"classes/Utilisateur.html":{},"controllers/UtilisateursController.html":{},"modules/UtilisateursModule.html":{},"injectables/UtilisateursService.html":{},"classes/Visitor.html":{},"controllers/VisitorController.html":{},"injectables/VisitorCounterMiddleware.html":{},"modules/VisitorModule.html":{},"injectables/VisitorService.html":{},"classes/passwordForgotDto.html":{},"classes/passwordResetDto.html":{}}}],["information",{"_index":1833,"title":{},"body":{"license.html":{}}}],["informational",{"_index":1715,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":1661,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":1675,"title":{},"body":{"license.html":{}}}],["inject",{"_index":819,"title":{},"body":{"modules/MailModule.html":{}}}],["injectable",{"_index":88,"title":{"injectables/AlertService.html":{},"injectables/AppService.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/ImagesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MessagesService.html":{},"injectables/PagesService.html":{},"injectables/PasswordResetService.html":{},"injectables/PrismaService.html":{},"injectables/UtilisateursService.html":{},"injectables/VisitorCounterMiddleware.html":{},"injectables/VisitorService.html":{}},"body":{"injectables/AlertService.html":{},"injectables/AppService.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/ImagesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MessagesService.html":{},"injectables/PagesService.html":{},"injectables/PasswordResetService.html":{},"injectables/PrismaService.html":{},"guards/RoleGuard.html":{},"injectables/UtilisateursService.html":{},"injectables/VisitorCounterMiddleware.html":{},"injectables/VisitorService.html":{},"coverage.html":{}}}],["injectables",{"_index":89,"title":{},"body":{"injectables/AlertService.html":{},"injectables/AppService.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/ImagesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MessagesService.html":{},"injectables/PagesService.html":{},"injectables/PasswordResetService.html":{},"injectables/PrismaService.html":{},"injectables/UtilisateursService.html":{},"injectables/VisitorCounterMiddleware.html":{},"injectables/VisitorService.html":{},"overview.html":{}}}],["installation",{"_index":1455,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1457,"title":{},"body":{"index.html":{}}}],["institute",{"_index":1665,"title":{},"body":{"license.html":{}}}],["intentionally",{"_index":1599,"title":{},"body":{"license.html":{}}}],["interfaces",{"_index":1276,"title":{},"body":{"injectables/UtilisateursService.html":{},"license.html":{}}}],["irrevocable",{"_index":1640,"title":{},"body":{"license.html":{}}}],["isarray",{"_index":295,"title":{},"body":{"controllers/ArticleController.html":{}}}],["isdate",{"_index":1149,"title":{},"body":{"classes/UpdateArticleDto.html":{}}}],["isglobal",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":1150,"title":{},"body":{"classes/UpdateArticleDto.html":{}}}],["ispasswordmatch",{"_index":1312,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["isstring",{"_index":1151,"title":{},"body":{"classes/UpdateArticleDto.html":{}}}],["issue",{"_index":1613,"title":{},"body":{"license.html":{}}}],["istokenvalid",{"_index":1037,"title":{},"body":{"injectables/PasswordResetService.html":{}}}],["j60zqqhas4",{"_index":511,"title":{},"body":{"classes/CreateMessageDto.html":{}}}],["january",{"_index":1499,"title":{},"body":{"license.html":{}}}],["jean",{"_index":549,"title":{},"body":{"classes/CreateUtilisateurDto.html":{}}}],["jeton",{"_index":996,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["jeune",{"_index":161,"title":{},"body":{"controllers/AppController.html":{},"injectables/UtilisateursService.html":{},"miscellaneous/enumerations.html":{}}}],["join",{"_index":1481,"title":{},"body":{"index.html":{}}}],["jour",{"_index":1300,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["jpeg",{"_index":708,"title":{},"body":{"injectables/ImagesService.html":{}}}],["jpg",{"_index":641,"title":{},"body":{"controllers/ImagesController.html":{},"injectables/ImagesService.html":{}}}],["jwt",{"_index":759,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/PasswordResetController.html":{},"dependencies.html":{}}}],["jwtauthguard",{"_index":182,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/PagesController.html":{},"controllers/PasswordResetController.html":{},"controllers/UtilisateursController.html":{},"coverage.html":{}}}],["jwtconstants",{"_index":371,"title":{},"body":{"injectables/ArticleService.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/PasswordResetService.html":{},"guards/RoleGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.secret",{"_index":378,"title":{},"body":{"injectables/ArticleService.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/PasswordResetService.html":{},"guards/RoleGuard.html":{}}}],["jwtfromrequest",{"_index":762,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UtilisateursModule.html":{}}}],["jwtmodule.register",{"_index":416,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":348,"title":{},"body":{"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"modules/ImagesModule.html":{},"controllers/MessagesController.html":{},"modules/MessagesModule.html":{},"modules/PagesModule.html":{},"controllers/PasswordResetController.html":{},"injectables/PasswordResetService.html":{},"guards/RoleGuard.html":{}}}],["jwtstrategy",{"_index":399,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":1489,"title":{},"body":{"index.html":{}}}],["kind",{"_index":1761,"title":{},"body":{"license.html":{}}}],["l'adresse",{"_index":978,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["l'ancien",{"_index":1311,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["l'e",{"_index":984,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["l'environnement",{"_index":1099,"title":{},"body":{"injectables/PrismaService.html":{}}}],["l'envoi",{"_index":1010,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["la",{"_index":533,"title":{},"body":{"classes/CreateUtilisateurDto.html":{},"controllers/ImagesController.html":{},"controllers/PasswordResetController.html":{},"injectables/PrismaService.html":{}}}],["language",{"_index":1850,"title":{},"body":{"license.html":{}}}],["law",{"_index":1756,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":1671,"title":{},"body":{"license.html":{}}}],["le",{"_index":605,"title":{},"body":{"controllers/ImagesController.html":{},"controllers/PasswordResetController.html":{},"injectables/UtilisateursService.html":{}}}],["legal",{"_index":1519,"title":{},"body":{"license.html":{}}}],["legend",{"_index":74,"title":{},"body":{"modules/AlertModule.html":{},"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/ImagesModule.html":{},"modules/MailModule.html":{},"modules/MessagesModule.html":{},"modules/PagesModule.html":{},"modules/PrismaModule.html":{},"modules/UtilisateursModule.html":{},"modules/VisitorModule.html":{},"overview.html":{}}}],["les",{"_index":1018,"title":{},"body":{"controllers/PasswordResetController.html":{},"injectables/UtilisateursService.html":{}}}],["liability",{"_index":1776,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1785,"title":{},"body":{"license.html":{}}}],["licensable",{"_index":1659,"title":{},"body":{"license.html":{}}}],["license",{"_index":1495,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["licensed",{"_index":1472,"title":{},"body":{"index.html":{},"license.html":{}}}],["licenses",{"_index":1676,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":1513,"title":{},"body":{"license.html":{}}}],["limit",{"_index":633,"title":{},"body":{"controllers/ImagesController.html":{}}}],["limitation",{"_index":1763,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":1852,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1558,"title":{},"body":{"license.html":{}}}],["limits",{"_index":630,"title":{},"body":{"controllers/ImagesController.html":{}}}],["link",{"_index":1594,"title":{},"body":{"license.html":{}}}],["links",{"_index":297,"title":{},"body":{"controllers/ArticleController.html":{}}}],["lists",{"_index":1611,"title":{},"body":{"license.html":{}}}],["litigation",{"_index":1666,"title":{},"body":{"license.html":{}}}],["local",{"_index":779,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["localauthguard",{"_index":172,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AppController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":400,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["lodash",{"_index":1272,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["log",{"_index":144,"title":{},"body":{"controllers/AppController.html":{}}}],["logged",{"_index":137,"title":{},"body":{"controllers/AppController.html":{}}}],["login",{"_index":113,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{}}}],["login(@request",{"_index":201,"title":{},"body":{"controllers/AppController.html":{}}}],["login(req",{"_index":129,"title":{},"body":{"controllers/AppController.html":{}}}],["login(user",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{}}}],["logindto",{"_index":178,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AppController.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["logindto})@apiresponse({status",{"_index":134,"title":{},"body":{"controllers/AppController.html":{}}}],["logout",{"_index":114,"title":{},"body":{"controllers/AppController.html":{}}}],["logout(@res",{"_index":233,"title":{},"body":{"controllers/AppController.html":{}}}],["logout(res",{"_index":142,"title":{},"body":{"controllers/AppController.html":{}}}],["lors",{"_index":1009,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["loss",{"_index":1794,"title":{},"body":{"license.html":{}}}],["losses",{"_index":1801,"title":{},"body":{"license.html":{}}}],["made",{"_index":1570,"title":{},"body":{"license.html":{}}}],["mail",{"_index":985,"title":{},"body":{"controllers/PasswordResetController.html":{},"injectables/UtilisateursService.html":{}}}],["mail.service",{"_index":797,"title":{},"body":{"modules/MailModule.html":{}}}],["mail/mail.module",{"_index":266,"title":{},"body":{"modules/AppModule.html":{}}}],["mail/mail.service",{"_index":436,"title":{},"body":{"injectables/AuthService.html":{},"controllers/PasswordResetController.html":{},"injectables/PasswordResetService.html":{}}}],["mailermodule",{"_index":791,"title":{},"body":{"modules/MailModule.html":{}}}],["mailermodule.forrootasync",{"_index":799,"title":{},"body":{"modules/MailModule.html":{}}}],["mailerservice",{"_index":824,"title":{},"body":{"injectables/MailService.html":{}}}],["mailing",{"_index":1610,"title":{},"body":{"license.html":{}}}],["mailmodule",{"_index":246,"title":{"modules/MailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"modules.html":{},"overview.html":{}}}],["mailservice",{"_index":424,"title":{"injectables/MailService.html":{}},"body":{"injectables/AuthService.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"controllers/PasswordResetController.html":{},"injectables/PasswordResetService.html":{},"coverage.html":{},"overview.html":{}}}],["make",{"_index":1652,"title":{},"body":{"license.html":{}}}],["making",{"_index":1555,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":1799,"title":{},"body":{"license.html":{}}}],["managed",{"_index":1615,"title":{},"body":{"license.html":{}}}],["management",{"_index":1535,"title":{},"body":{"license.html":{}}}],["manquante",{"_index":980,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["manquants",{"_index":1022,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["marked",{"_index":1621,"title":{},"body":{"license.html":{}}}],["marks",{"_index":1746,"title":{},"body":{"license.html":{}}}],["matching",{"_index":10,"title":{},"body":{"classes/Alert.html":{},"controllers/AlertController.html":{},"modules/AlertModule.html":{},"injectables/AlertService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"classes/Auth.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAlertDto.html":{},"classes/CreateArticleDto.html":{},"classes/CreateImageDto.html":{},"classes/CreateMessageDto.html":{},"classes/CreatePageDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateVisitorDto.html":{},"classes/Image.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/Message.html":{},"controllers/MessagesController.html":{},"modules/MessagesModule.html":{},"injectables/MessagesService.html":{},"controllers/PagesController.html":{},"modules/PagesModule.html":{},"injectables/PagesService.html":{},"controllers/PasswordResetController.html":{},"injectables/PasswordResetService.html":{},"classes/PrismaClientExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"guards/RoleGuard.html":{},"classes/UpdateAlertDto.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateImageDto.html":{},"classes/UpdateMessageDto.html":{},"classes/UpdatePageDto.html":{},"classes/UpdatePasswordUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateVisitorDto.html":{},"classes/Utilisateur.html":{},"controllers/UtilisateursController.html":{},"modules/UtilisateursModule.html":{},"injectables/UtilisateursService.html":{},"classes/Visitor.html":{},"controllers/VisitorController.html":{},"injectables/VisitorCounterMiddleware.html":{},"modules/VisitorModule.html":{},"injectables/VisitorService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"classes/passwordForgotDto.html":{},"classes/passwordResetDto.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mean",{"_index":1508,"title":{},"body":{"license.html":{}}}],["means",{"_index":1529,"title":{},"body":{"license.html":{}}}],["mechanical",{"_index":1561,"title":{},"body":{"license.html":{}}}],["media",{"_index":1567,"title":{},"body":{"license.html":{}}}],["medium",{"_index":1681,"title":{},"body":{"license.html":{}}}],["meet",{"_index":1683,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":1764,"title":{},"body":{"license.html":{}}}],["merely",{"_index":1593,"title":{},"body":{"license.html":{}}}],["message",{"_index":236,"title":{"classes/Message.html":{}},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"classes/CreateAlertDto.html":{},"classes/CreateMessageDto.html":{},"classes/Message.html":{},"injectables/MessagesService.html":{},"classes/PrismaClientExceptionFilter.html":{},"coverage.html":{}}}],["message.dto",{"_index":866,"title":{},"body":{"controllers/MessagesController.html":{},"injectables/MessagesService.html":{},"classes/UpdateMessageDto.html":{}}}],["message.dto.ts",{"_index":497,"title":{},"body":{"classes/CreateMessageDto.html":{},"classes/UpdateMessageDto.html":{},"coverage.html":{}}}],["message.dto.ts:10",{"_index":503,"title":{},"body":{"classes/CreateMessageDto.html":{}}}],["message.dto.ts:18",{"_index":512,"title":{},"body":{"classes/CreateMessageDto.html":{}}}],["message.dto.ts:25",{"_index":509,"title":{},"body":{"classes/CreateMessageDto.html":{}}}],["message.dto.ts:32",{"_index":506,"title":{},"body":{"classes/CreateMessageDto.html":{}}}],["messages",{"_index":856,"title":{},"body":{"controllers/MessagesController.html":{}}}],["messages.controller",{"_index":881,"title":{},"body":{"modules/MessagesModule.html":{}}}],["messages.service",{"_index":865,"title":{},"body":{"controllers/MessagesController.html":{},"modules/MessagesModule.html":{}}}],["messages/messages.module",{"_index":271,"title":{},"body":{"modules/AppModule.html":{}}}],["messagescontroller",{"_index":854,"title":{"controllers/MessagesController.html":{}},"body":{"controllers/MessagesController.html":{},"modules/MessagesModule.html":{},"coverage.html":{}}}],["messagesmodule",{"_index":247,"title":{"modules/MessagesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MessagesModule.html":{},"modules.html":{},"overview.html":{}}}],["messagesservice",{"_index":864,"title":{"injectables/MessagesService.html":{}},"body":{"controllers/MessagesController.html":{},"modules/MessagesModule.html":{},"injectables/MessagesService.html":{},"coverage.html":{},"overview.html":{}}}],["meta_title",{"_index":471,"title":{},"body":{"classes/CreateArticleDto.html":{},"classes/CreatePageDto.html":{},"classes/UpdateArticleDto.html":{}}}],["metadata",{"_index":1429,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":728,"title":{},"body":{"injectables/ImagesService.html":{}}}],["methods",{"_index":17,"title":{},"body":{"controllers/AlertController.html":{},"injectables/AlertService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"controllers/MessagesController.html":{},"injectables/MessagesService.html":{},"controllers/PagesController.html":{},"injectables/PagesService.html":{},"controllers/PasswordResetController.html":{},"injectables/PasswordResetService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"guards/RoleGuard.html":{},"controllers/UtilisateursController.html":{},"injectables/UtilisateursService.html":{},"controllers/VisitorController.html":{},"injectables/VisitorCounterMiddleware.html":{},"injectables/VisitorService.html":{}}}],["mettre",{"_index":1299,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["middlewareconsumer",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["miscellaneous",{"_index":1433,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1471,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1462,"title":{},"body":{"index.html":{}}}],["moderateur",{"_index":165,"title":{},"body":{"controllers/AppController.html":{},"miscellaneous/enumerations.html":{}}}],["modifications",{"_index":1556,"title":{},"body":{"license.html":{}}}],["modified",{"_index":1689,"title":{},"body":{"license.html":{}}}],["modify",{"_index":1716,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":1722,"title":{},"body":{"license.html":{}}}],["module",{"_index":70,"title":{"modules/AlertModule.html":{},"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/ImagesModule.html":{},"modules/MailModule.html":{},"modules/MessagesModule.html":{},"modules/PagesModule.html":{},"modules/PrismaModule.html":{},"modules/UtilisateursModule.html":{},"modules/VisitorModule.html":{}},"body":{"modules/AlertModule.html":{},"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"modules/MailModule.html":{},"modules/MessagesModule.html":{},"modules/PagesModule.html":{},"modules/PrismaModule.html":{},"modules/UtilisateursModule.html":{},"modules/VisitorModule.html":{},"overview.html":{}}}],["modules",{"_index":72,"title":{"modules.html":{}},"body":{"modules/AlertModule.html":{},"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/ImagesModule.html":{},"modules/MailModule.html":{},"modules/MessagesModule.html":{},"modules/PagesModule.html":{},"modules/PrismaModule.html":{},"modules/UtilisateursModule.html":{},"modules/VisitorModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":793,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"dependencies.html":{}}}],["modules/mailer/dist/adapters/handlebars.adapter",{"_index":795,"title":{},"body":{"modules/MailModule.html":{}}}],["more",{"_index":1484,"title":{},"body":{"index.html":{},"license.html":{}}}],["mot",{"_index":540,"title":{},"body":{"classes/CreateUtilisateurDto.html":{},"controllers/PasswordResetController.html":{},"injectables/UtilisateursService.html":{}}}],["mot_de_passe",{"_index":525,"title":{},"body":{"classes/CreateUtilisateurDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/Utilisateur.html":{},"injectables/UtilisateursService.html":{}}}],["multer",{"_index":589,"title":{},"body":{"controllers/ImagesController.html":{}}}],["multipart/form",{"_index":577,"title":{},"body":{"controllers/ImagesController.html":{}}}],["myśliwiec",{"_index":1490,"title":{},"body":{"index.html":{}}}],["n'est",{"_index":991,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["naissance",{"_index":536,"title":{},"body":{"classes/CreateUtilisateurDto.html":{}}}],["name",{"_index":29,"title":{},"body":{"controllers/AlertController.html":{},"injectables/AlertService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"controllers/MessagesController.html":{},"injectables/MessagesService.html":{},"controllers/PagesController.html":{},"injectables/PagesService.html":{},"controllers/PasswordResetController.html":{},"injectables/PasswordResetService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"guards/RoleGuard.html":{},"controllers/UtilisateursController.html":{},"injectables/UtilisateursService.html":{},"injectables/VisitorCounterMiddleware.html":{},"injectables/VisitorService.html":{},"license.html":{}}}],["names",{"_index":1744,"title":{},"body":{"license.html":{}}}],["nathancuvelier59@icloud.com",{"_index":852,"title":{},"body":{"injectables/MailService.html":{}}}],["nationalit",{"_index":543,"title":{},"body":{"classes/CreateUtilisateurDto.html":{}}}],["nationalite",{"_index":526,"title":{},"body":{"classes/CreateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"injectables/UtilisateursService.html":{},"miscellaneous/variables.html":{}}}],["necessarily",{"_index":1660,"title":{},"body":{"license.html":{}}}],["negligence",{"_index":1780,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":1783,"title":{},"body":{"license.html":{}}}],["nest",{"_index":1451,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":1494,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":792,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":47,"title":{},"body":{"controllers/AlertController.html":{},"modules/AlertModule.html":{},"injectables/AlertService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"controllers/MessagesController.html":{},"modules/MessagesModule.html":{},"injectables/MessagesService.html":{},"controllers/PagesController.html":{},"modules/PagesModule.html":{},"injectables/PagesService.html":{},"controllers/PasswordResetController.html":{},"injectables/PasswordResetService.html":{},"classes/PrismaClientExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"guards/RoleGuard.html":{},"controllers/UtilisateursController.html":{},"modules/UtilisateursModule.html":{},"injectables/UtilisateursService.html":{},"controllers/VisitorController.html":{},"injectables/VisitorCounterMiddleware.html":{},"modules/VisitorModule.html":{},"injectables/VisitorService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1064,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{},"guards/RoleGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/ImagesModule.html":{},"controllers/MessagesController.html":{},"modules/MessagesModule.html":{},"modules/PagesModule.html":{},"controllers/PasswordResetController.html":{},"injectables/PasswordResetService.html":{},"guards/RoleGuard.html":{},"modules/UtilisateursModule.html":{}}}],["nestjs/mapped",{"_index":1147,"title":{},"body":{"classes/UpdateArticleDto.html":{},"classes/UpdatePasswordUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":407,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":586,"title":{},"body":{"controllers/ImagesController.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":57,"title":{},"body":{"controllers/AlertController.html":{},"controllers/AppController.html":{},"controllers/ArticleController.html":{},"classes/CreateAlertDto.html":{},"classes/CreateArticleDto.html":{},"classes/CreateMessageDto.html":{},"classes/CreatePageDto.html":{},"classes/CreateUtilisateurDto.html":{},"controllers/ImagesController.html":{},"classes/LoginDto.html":{},"controllers/PagesController.html":{},"controllers/PasswordResetController.html":{},"classes/UpdateAlertDto.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateImageDto.html":{},"classes/UpdateMessageDto.html":{},"classes/UpdatePageDto.html":{},"classes/UpdatePasswordUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateVisitorDto.html":{},"controllers/UtilisateursController.html":{},"controllers/VisitorController.html":{},"dependencies.html":{},"classes/passwordForgotDto.html":{},"classes/passwordResetDto.html":{}}}],["nestmiddleware",{"_index":1347,"title":{},"body":{"injectables/VisitorCounterMiddleware.html":{}}}],["nestmodule",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["new",{"_index":152,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"classes/CreateUtilisateurDto.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"injectables/PagesService.html":{},"controllers/PasswordResetController.html":{},"injectables/PasswordResetService.html":{},"injectables/UtilisateursService.html":{},"coverage.html":{}}}],["next",{"_index":1344,"title":{},"body":{"injectables/VisitorCounterMiddleware.html":{},"injectables/VisitorService.html":{}}}],["nice",{"_index":837,"title":{},"body":{"injectables/MailService.html":{}}}],["node.js",{"_index":1443,"title":{},"body":{"index.html":{}}}],["node_env=test",{"_index":1104,"title":{},"body":{"injectables/PrismaService.html":{}}}],["nodemailer",{"_index":1421,"title":{},"body":{"dependencies.html":{}}}],["nom",{"_index":527,"title":{},"body":{"classes/CreateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/Utilisateur.html":{},"injectables/UtilisateursService.html":{},"miscellaneous/variables.html":{}}}],["non",{"_index":1635,"title":{},"body":{"license.html":{}}}],["normally",{"_index":1712,"title":{},"body":{"license.html":{}}}],["notfoundexception",{"_index":368,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/PagesService.html":{},"injectables/PasswordResetService.html":{},"injectables/UtilisateursService.html":{}}}],["notfoundexception('image",{"_index":658,"title":{},"body":{"controllers/ImagesController.html":{},"injectables/ImagesService.html":{}}}],["notfoundexception('invalid",{"_index":1042,"title":{},"body":{"injectables/PasswordResetService.html":{}}}],["notfoundexception('old",{"_index":1315,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["notfoundexception('user",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{}}}],["notfoundexception(`jeune",{"_index":1321,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["notfoundexception(`page",{"_index":945,"title":{},"body":{"injectables/PagesService.html":{}}}],["notfoundexception(`user",{"_index":1305,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["notfoundexception(user_not_found_error(id",{"_index":1296,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["nothing",{"_index":1734,"title":{},"body":{"license.html":{}}}],["notice",{"_index":1573,"title":{},"body":{"license.html":{}}}],["notices",{"_index":1692,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":1732,"title":{},"body":{"license.html":{}}}],["nouveau_mot_de_passe",{"_index":1168,"title":{},"body":{"classes/UpdatePasswordUtilisateurDto.html":{}}}],["npm",{"_index":1456,"title":{},"body":{"index.html":{}}}],["null",{"_index":732,"title":{},"body":{"injectables/ImagesService.html":{}}}],["number",{"_index":102,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ArticleService.html":{},"classes/CreateMessageDto.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/MessagesService.html":{},"injectables/PagesService.html":{},"classes/Utilisateur.html":{},"controllers/UtilisateursController.html":{},"injectables/UtilisateursService.html":{},"injectables/VisitorCounterMiddleware.html":{},"injectables/VisitorService.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":609,"title":{},"body":{"controllers/ImagesController.html":{},"controllers/UtilisateursController.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["obligations",{"_index":1810,"title":{},"body":{"license.html":{}}}],["obtain",{"_index":1846,"title":{},"body":{"license.html":{}}}],["offer",{"_index":1653,"title":{},"body":{"license.html":{}}}],["omething",{"_index":643,"title":{},"body":{"controllers/ImagesController.html":{}}}],["one",{"_index":324,"title":{},"body":{"controllers/ArticleController.html":{},"license.html":{}}}],["open",{"_index":1473,"title":{},"body":{"index.html":{}}}],["optional",{"_index":31,"title":{},"body":{"controllers/AlertController.html":{},"injectables/AlertService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"controllers/MessagesController.html":{},"injectables/MessagesService.html":{},"controllers/PagesController.html":{},"injectables/PagesService.html":{},"controllers/PasswordResetController.html":{},"injectables/PasswordResetService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"guards/RoleGuard.html":{},"controllers/UtilisateursController.html":{},"injectables/UtilisateursService.html":{},"injectables/VisitorCounterMiddleware.html":{},"injectables/VisitorService.html":{}}}],["options",{"_index":817,"title":{},"body":{"modules/MailModule.html":{}}}],["origin",{"_index":1751,"title":{},"body":{"license.html":{}}}],["original",{"_index":1589,"title":{},"body":{"license.html":{}}}],["originalfilename",{"_index":648,"title":{},"body":{"controllers/ImagesController.html":{}}}],["otherwise",{"_index":1539,"title":{},"body":{"license.html":{}}}],["ou",{"_index":1095,"title":{},"body":{"injectables/PrismaService.html":{}}}],["out",{"_index":84,"title":{},"body":{"modules/AlertModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/ImagesModule.html":{},"modules/MailModule.html":{},"modules/MessagesModule.html":{},"modules/PagesModule.html":{},"modules/PrismaModule.html":{},"modules/UtilisateursModule.html":{},"modules/VisitorModule.html":{},"license.html":{},"overview.html":{}}}],["outstanding",{"_index":1545,"title":{},"body":{"license.html":{}}}],["override",{"_index":834,"title":{},"body":{"injectables/MailService.html":{}}}],["overview",{"_index":1856,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":1515,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":1541,"title":{},"body":{"license.html":{}}}],["p2002",{"_index":1074,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["package",{"_index":1400,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":652,"title":{},"body":{"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/PagesService.html":{},"license.html":{}}}],["page.dto",{"_index":918,"title":{},"body":{"controllers/PagesController.html":{},"injectables/PagesService.html":{},"classes/UpdatePageDto.html":{}}}],["page.dto.ts",{"_index":515,"title":{},"body":{"classes/CreatePageDto.html":{},"classes/UpdatePageDto.html":{},"coverage.html":{}}}],["page.dto.ts:11",{"_index":520,"title":{},"body":{"classes/CreatePageDto.html":{}}}],["page.dto.ts:12",{"_index":1163,"title":{},"body":{"classes/UpdatePageDto.html":{}}}],["page.dto.ts:14",{"_index":517,"title":{},"body":{"classes/CreatePageDto.html":{}}}],["page.dto.ts:17",{"_index":518,"title":{},"body":{"classes/CreatePageDto.html":{}}}],["page.dto.ts:5",{"_index":516,"title":{},"body":{"classes/CreatePageDto.html":{}}}],["page.dto.ts:6",{"_index":1161,"title":{},"body":{"classes/UpdatePageDto.html":{}}}],["page.dto.ts:8",{"_index":519,"title":{},"body":{"classes/CreatePageDto.html":{}}}],["page.dto.ts:9",{"_index":1162,"title":{},"body":{"classes/UpdatePageDto.html":{}}}],["pages",{"_index":904,"title":{},"body":{"controllers/PagesController.html":{}}}],["pages.controller",{"_index":930,"title":{},"body":{"modules/PagesModule.html":{}}}],["pages.service",{"_index":917,"title":{},"body":{"controllers/PagesController.html":{},"modules/PagesModule.html":{}}}],["pages/pages.module",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["pagescontroller",{"_index":902,"title":{"controllers/PagesController.html":{}},"body":{"controllers/PagesController.html":{},"modules/PagesModule.html":{},"coverage.html":{}}}],["pagesmodule",{"_index":248,"title":{"modules/PagesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PagesModule.html":{},"modules.html":{},"overview.html":{}}}],["pagesservice",{"_index":916,"title":{"injectables/PagesService.html":{}},"body":{"controllers/PagesController.html":{},"modules/PagesModule.html":{},"injectables/PagesService.html":{},"coverage.html":{},"overview.html":{}}}],["paix",{"_index":534,"title":{},"body":{"classes/CreateUtilisateurDto.html":{}}}],["par",{"_index":1295,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["param",{"_index":45,"title":{},"body":{"controllers/AlertController.html":{},"controllers/ArticleController.html":{},"controllers/ImagesController.html":{},"controllers/MessagesController.html":{},"controllers/PagesController.html":{},"controllers/UtilisateursController.html":{}}}],["param('id",{"_index":340,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/PagesController.html":{},"controllers/UtilisateursController.html":{}}}],["parameters",{"_index":28,"title":{},"body":{"controllers/AlertController.html":{},"injectables/AlertService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"controllers/MessagesController.html":{},"injectables/MessagesService.html":{},"controllers/PagesController.html":{},"injectables/PagesService.html":{},"controllers/PasswordResetController.html":{},"injectables/PasswordResetService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"guards/RoleGuard.html":{},"controllers/UtilisateursController.html":{},"injectables/UtilisateursService.html":{},"injectables/VisitorCounterMiddleware.html":{},"injectables/VisitorService.html":{}}}],["params",{"_index":731,"title":{},"body":{"injectables/ImagesService.html":{}}}],["paramètres",{"_index":1019,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["parser",{"_index":1413,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":1700,"title":{},"body":{"license.html":{}}}],["partialtype",{"_index":1130,"title":{},"body":{"classes/UpdateAlertDto.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateImageDto.html":{},"classes/UpdateMessageDto.html":{},"classes/UpdatePageDto.html":{},"classes/UpdatePasswordUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateVisitorDto.html":{}}}],["partialtype(createalertdto",{"_index":1131,"title":{},"body":{"classes/UpdateAlertDto.html":{}}}],["partialtype(createarticledto",{"_index":1153,"title":{},"body":{"classes/UpdateArticleDto.html":{}}}],["partialtype(createimagedto",{"_index":1157,"title":{},"body":{"classes/UpdateImageDto.html":{}}}],["partialtype(createmessagedto",{"_index":1159,"title":{},"body":{"classes/UpdateMessageDto.html":{}}}],["partialtype(createpagedto",{"_index":1164,"title":{},"body":{"classes/UpdatePageDto.html":{}}}],["partialtype(createutilisateurdto",{"_index":1177,"title":{},"body":{"classes/UpdateUtilisateurDto.html":{}}}],["partialtype(createvisitordto",{"_index":1181,"title":{},"body":{"classes/UpdateVisitorDto.html":{}}}],["particular",{"_index":1766,"title":{},"body":{"license.html":{}}}],["party",{"_index":1711,"title":{},"body":{"license.html":{}}}],["pas",{"_index":992,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["pass",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{},"modules/MailModule.html":{}}}],["passe",{"_index":541,"title":{},"body":{"classes/CreateUtilisateurDto.html":{},"controllers/PasswordResetController.html":{},"injectables/UtilisateursService.html":{}}}],["passport",{"_index":758,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":406,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":755,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":760,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":198,"title":{},"body":{"controllers/AppController.html":{},"modules/AuthModule.html":{},"classes/CreateUtilisateurDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"controllers/PasswordResetController.html":{},"injectables/PasswordResetService.html":{},"classes/UpdatePasswordUtilisateurDto.html":{},"controllers/UtilisateursController.html":{},"injectables/UtilisateursService.html":{},"coverage.html":{},"classes/passwordResetDto.html":{}}}],["password'})@apibody({type",{"_index":133,"title":{},"body":{"controllers/AppController.html":{}}}],["password/${token",{"_index":851,"title":{},"body":{"injectables/MailService.html":{}}}],["passwordfield",{"_index":781,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["passwordforgotdto",{"_index":955,"title":{"classes/passwordForgotDto.html":{}},"body":{"controllers/PasswordResetController.html":{},"coverage.html":{},"classes/passwordForgotDto.html":{}}}],["passwordreset",{"_index":1040,"title":{},"body":{"injectables/PasswordResetService.html":{}}}],["passwordreset.email",{"_index":1044,"title":{},"body":{"injectables/PasswordResetService.html":{}}}],["passwordreset.id",{"_index":1046,"title":{},"body":{"injectables/PasswordResetService.html":{}}}],["passwordresetcontroller",{"_index":404,"title":{"controllers/PasswordResetController.html":{}},"body":{"modules/AuthModule.html":{},"controllers/PasswordResetController.html":{},"coverage.html":{}}}],["passwordresetdto",{"_index":960,"title":{"classes/passwordResetDto.html":{}},"body":{"controllers/PasswordResetController.html":{},"coverage.html":{},"classes/passwordResetDto.html":{}}}],["passwordresetservice",{"_index":401,"title":{"injectables/PasswordResetService.html":{}},"body":{"modules/AuthModule.html":{},"controllers/PasswordResetController.html":{},"injectables/PasswordResetService.html":{},"coverage.html":{},"overview.html":{}}}],["patch",{"_index":313,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/MessagesController.html":{},"controllers/PagesController.html":{},"controllers/UtilisateursController.html":{}}}],["patch(':id",{"_index":339,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/MessagesController.html":{},"controllers/PagesController.html":{},"controllers/UtilisateursController.html":{},"controllers/VisitorController.html":{}}}],["patch(':id/change_password",{"_index":1235,"title":{},"body":{"controllers/UtilisateursController.html":{}}}],["patent",{"_index":1648,"title":{},"body":{"license.html":{}}}],["path",{"_index":591,"title":{},"body":{"controllers/ImagesController.html":{},"injectables/ImagesService.html":{}}}],["path.join(basedir",{"_index":702,"title":{},"body":{"injectables/ImagesService.html":{}}}],["path.join(this.imagepath",{"_index":719,"title":{},"body":{"injectables/ImagesService.html":{}}}],["payload",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":769,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.role",{"_index":770,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":768,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["percent",{"_index":1543,"title":{},"body":{"license.html":{}}}],["perform",{"_index":1645,"title":{},"body":{"license.html":{}}}],["permission",{"_index":1742,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":1551,"title":{},"body":{"license.html":{}}}],["perpetual",{"_index":1633,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":1699,"title":{},"body":{"license.html":{}}}],["pick",{"_index":1271,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["pick(updateutilisateurdto",{"_index":1302,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["places",{"_index":1706,"title":{},"body":{"license.html":{}}}],["please",{"_index":1482,"title":{},"body":{"index.html":{}}}],["png",{"_index":711,"title":{},"body":{"injectables/ImagesService.html":{}}}],["possibility",{"_index":1804,"title":{},"body":{"license.html":{}}}],["post",{"_index":25,"title":{},"body":{"controllers/AlertController.html":{},"controllers/AppController.html":{},"controllers/ArticleController.html":{},"controllers/ImagesController.html":{},"controllers/MessagesController.html":{},"controllers/PagesController.html":{},"controllers/PasswordResetController.html":{},"controllers/UtilisateursController.html":{},"controllers/VisitorController.html":{}}}],["post('/forgot",{"_index":974,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["post('/reset",{"_index":1014,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["post('assign_conseiller",{"_index":1240,"title":{},"body":{"controllers/UtilisateursController.html":{}}}],["post('auth/login",{"_index":196,"title":{},"body":{"controllers/AppController.html":{}}}],["post('auth/logout",{"_index":232,"title":{},"body":{"controllers/AppController.html":{}}}],["post('auth/logout')@apioperation({summary",{"_index":143,"title":{},"body":{"controllers/AppController.html":{}}}],["post('auth/signup/administrateur",{"_index":225,"title":{},"body":{"controllers/AppController.html":{}}}],["post('auth/signup/conseiller",{"_index":215,"title":{},"body":{"controllers/AppController.html":{}}}],["post('auth/signup/jeune",{"_index":222,"title":{},"body":{"controllers/AppController.html":{}}}],["post('auth/signup/jeune')@apioperation({summary",{"_index":160,"title":{},"body":{"controllers/AppController.html":{}}}],["post('auth/signup/moderateur",{"_index":219,"title":{},"body":{"controllers/AppController.html":{}}}],["post('create",{"_index":320,"title":{},"body":{"controllers/ArticleController.html":{}}}],["post('delete/:filename",{"_index":566,"title":{},"body":{"controllers/ImagesController.html":{}}}],["post('upload",{"_index":608,"title":{},"body":{"controllers/ImagesController.html":{}}}],["post('upload')@apibody({required",{"_index":576,"title":{},"body":{"controllers/ImagesController.html":{}}}],["postale",{"_index":530,"title":{},"body":{"classes/CreateUtilisateurDto.html":{}}}],["power",{"_index":1530,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":1554,"title":{},"body":{"license.html":{}}}],["prefix",{"_index":15,"title":{},"body":{"controllers/AlertController.html":{},"controllers/ArticleController.html":{},"controllers/ImagesController.html":{},"controllers/MessagesController.html":{},"controllers/PagesController.html":{},"controllers/PasswordResetController.html":{},"controllers/UtilisateursController.html":{},"controllers/VisitorController.html":{}}}],["prenom",{"_index":528,"title":{},"body":{"classes/CreateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/Utilisateur.html":{},"injectables/UtilisateursService.html":{},"miscellaneous/variables.html":{}}}],["prepare",{"_index":1642,"title":{},"body":{"license.html":{}}}],["primarygeneratedcolumn",{"_index":1188,"title":{},"body":{"classes/Utilisateur.html":{}}}],["printed",{"_index":1840,"title":{},"body":{"license.html":{}}}],["prisma",{"_index":96,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ArticleService.html":{},"injectables/ImagesService.html":{},"injectables/MessagesService.html":{},"injectables/PagesService.html":{},"injectables/PasswordResetService.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/Utilisateur.html":{},"injectables/UtilisateursService.html":{},"injectables/VisitorCounterMiddleware.html":{},"injectables/VisitorService.html":{}}}],["prisma.pagecreateinput",{"_index":936,"title":{},"body":{"injectables/PagesService.html":{}}}],["prisma.prismaclientknownrequesterror",{"_index":1060,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["prisma.service",{"_index":1085,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":54,"title":{},"body":{"controllers/AlertController.html":{},"injectables/AlertService.html":{},"injectables/ArticleService.html":{},"injectables/MessagesService.html":{},"injectables/PagesService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"injectables/UtilisateursService.html":{},"injectables/VisitorService.html":{},"dependencies.html":{}}}],["prisma/prisma.service",{"_index":87,"title":{},"body":{"modules/AlertModule.html":{},"injectables/AlertService.html":{},"modules/AppModule.html":{},"injectables/ArticleService.html":{},"modules/AuthModule.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"modules/MessagesModule.html":{},"injectables/MessagesService.html":{},"modules/PagesModule.html":{},"injectables/PagesService.html":{},"injectables/PasswordResetService.html":{},"modules/UtilisateursModule.html":{},"injectables/UtilisateursService.html":{},"injectables/VisitorService.html":{}}}],["prismaclient",{"_index":1087,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismaclientexceptionfilter",{"_index":1053,"title":{"classes/PrismaClientExceptionFilter.html":{}},"body":{"classes/PrismaClientExceptionFilter.html":{},"coverage.html":{}}}],["prismamodule",{"_index":1080,"title":{"modules/PrismaModule.html":{}},"body":{"modules/PrismaModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":81,"title":{"injectables/PrismaService.html":{}},"body":{"modules/AlertModule.html":{},"injectables/AlertService.html":{},"modules/AppModule.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"modules/AuthModule.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"modules/MessagesModule.html":{},"injectables/MessagesService.html":{},"modules/PagesModule.html":{},"injectables/PagesService.html":{},"injectables/PasswordResetService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"modules/UtilisateursModule.html":{},"injectables/UtilisateursService.html":{},"injectables/VisitorCounterMiddleware.html":{},"modules/VisitorModule.html":{},"injectables/VisitorService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":193,"title":{},"body":{"controllers/AppController.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/ImagesService.html":{},"controllers/MessagesController.html":{},"controllers/PasswordResetController.html":{},"injectables/PasswordResetService.html":{},"guards/RoleGuard.html":{},"injectables/VisitorService.html":{}}}],["process.env.database_test_url",{"_index":1107,"title":{},"body":{"injectables/PrismaService.html":{}}}],["process.env.database_url",{"_index":1108,"title":{},"body":{"injectables/PrismaService.html":{}}}],["process.env.node_env",{"_index":1106,"title":{},"body":{"injectables/PrismaService.html":{}}}],["product",{"_index":1747,"title":{},"body":{"license.html":{}}}],["production",{"_index":1464,"title":{},"body":{"index.html":{}}}],["produite",{"_index":1008,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["profile",{"_index":124,"title":{},"body":{"controllers/AppController.html":{}}}],["progressive",{"_index":1442,"title":{},"body":{"index.html":{}}}],["project",{"_index":1474,"title":{},"body":{"index.html":{}}}],["prominent",{"_index":1691,"title":{},"body":{"license.html":{}}}],["promise",{"_index":100,"title":{},"body":{"injectables/AlertService.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/ImagesService.html":{},"injectables/LocalStrategy.html":{},"injectables/MessagesService.html":{},"injectables/PagesService.html":{},"controllers/PasswordResetController.html":{},"injectables/PasswordResetService.html":{},"injectables/UtilisateursService.html":{}}}],["promise((resolve",{"_index":720,"title":{},"body":{"injectables/ImagesService.html":{}}}],["properties",{"_index":453,"title":{"properties.html":{}},"body":{"classes/CreateAlertDto.html":{},"classes/CreateArticleDto.html":{},"classes/CreateMessageDto.html":{},"classes/CreatePageDto.html":{},"classes/CreateUtilisateurDto.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"classes/LoginDto.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdatePageDto.html":{},"classes/UpdatePasswordUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/Utilisateur.html":{},"controllers/UtilisateursController.html":{},"injectables/VisitorService.html":{},"classes/passwordForgotDto.html":{},"classes/passwordResetDto.html":{},"properties.html":{}}}],["provide",{"_index":1724,"title":{},"body":{"license.html":{}}}],["provided",{"_index":1576,"title":{},"body":{"license.html":{}}}],["providers",{"_index":77,"title":{},"body":{"modules/AlertModule.html":{},"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/ImagesModule.html":{},"modules/MailModule.html":{},"modules/MessagesModule.html":{},"modules/PagesModule.html":{},"modules/PrismaModule.html":{},"modules/UtilisateursModule.html":{},"modules/VisitorModule.html":{},"overview.html":{}}}],["provides",{"_index":1758,"title":{},"body":{"license.html":{}}}],["prénom",{"_index":548,"title":{},"body":{"classes/CreateUtilisateurDto.html":{}}}],["public",{"_index":1348,"title":{},"body":{"injectables/VisitorCounterMiddleware.html":{}}}],["public/images",{"_index":607,"title":{},"body":{"controllers/ImagesController.html":{}}}],["publicly",{"_index":1643,"title":{},"body":{"license.html":{}}}],["pug",{"_index":1426,"title":{},"body":{"dependencies.html":{}}}],["puis",{"_index":602,"title":{},"body":{"controllers/ImagesController.html":{}}}],["purpose",{"_index":1616,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":1527,"title":{},"body":{"license.html":{}}}],["quality",{"_index":709,"title":{},"body":{"injectables/ImagesService.html":{}}}],["que",{"_index":983,"title":{},"body":{"controllers/PasswordResetController.html":{},"injectables/UtilisateursService.html":{}}}],["query",{"_index":167,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"controllers/PagesController.html":{}}}],["query('role",{"_index":921,"title":{},"body":{"controllers/PagesController.html":{}}}],["randomname",{"_index":620,"title":{},"body":{"controllers/ImagesController.html":{}}}],["randomname}${extname(file.originalname",{"_index":623,"title":{},"body":{"controllers/ImagesController.html":{}}}],["read",{"_index":1483,"title":{},"body":{"index.html":{}}}],["readable",{"_index":1704,"title":{},"body":{"license.html":{}}}],["readonly",{"_index":61,"title":{},"body":{"controllers/AlertController.html":{},"injectables/AlertService.html":{},"controllers/AppController.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"controllers/MessagesController.html":{},"injectables/MessagesService.html":{},"controllers/PagesController.html":{},"controllers/PasswordResetController.html":{},"injectables/PasswordResetService.html":{},"guards/RoleGuard.html":{},"controllers/UtilisateursController.html":{},"injectables/UtilisateursService.html":{}}}],["reason",{"_index":1824,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":1748,"title":{},"body":{"license.html":{}}}],["received",{"_index":1625,"title":{},"body":{"license.html":{}}}],["receiver",{"_index":504,"title":{},"body":{"classes/CreateMessageDto.html":{},"injectables/MessagesService.html":{}}}],["receiver.id",{"_index":895,"title":{},"body":{"injectables/MessagesService.html":{}}}],["receiverid",{"_index":498,"title":{},"body":{"classes/CreateMessageDto.html":{}}}],["recipients",{"_index":1686,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":1838,"title":{},"body":{"license.html":{}}}],["redimensionne",{"_index":600,"title":{},"body":{"controllers/ImagesController.html":{}}}],["redistributing",{"_index":1771,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":1679,"title":{},"body":{"license.html":{}}}],["ref",{"_index":322,"title":{},"body":{"controllers/ArticleController.html":{}}}],["reflect",{"_index":1428,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":1116,"title":{},"body":{"guards/RoleGuard.html":{}}}],["regarding",{"_index":1740,"title":{},"body":{"license.html":{}}}],["register",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{}}}],["register(user",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{}}}],["reject",{"_index":721,"title":{},"body":{"injectables/ImagesService.html":{}}}],["reject(err",{"_index":726,"title":{},"body":{"injectables/ImagesService.html":{}}}],["relation",{"_index":383,"title":{},"body":{"injectables/ArticleService.html":{}}}],["remain",{"_index":1591,"title":{},"body":{"license.html":{}}}],["remove",{"_index":21,"title":{},"body":{"controllers/AlertController.html":{},"injectables/AlertService.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/ImagesService.html":{},"controllers/MessagesController.html":{},"injectables/MessagesService.html":{},"controllers/PagesController.html":{},"injectables/PagesService.html":{},"controllers/UtilisateursController.html":{},"injectables/UtilisateursService.html":{}}}],["remove(@param('id",{"_index":68,"title":{},"body":{"controllers/AlertController.html":{},"controllers/ArticleController.html":{},"controllers/MessagesController.html":{},"controllers/UtilisateursController.html":{},"controllers/VisitorController.html":{}}}],["remove(filename",{"_index":686,"title":{},"body":{"injectables/ImagesService.html":{}}}],["remove(id",{"_index":40,"title":{},"body":{"controllers/AlertController.html":{},"injectables/AlertService.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"controllers/MessagesController.html":{},"injectables/MessagesService.html":{},"controllers/PagesController.html":{},"injectables/PagesService.html":{},"controllers/UtilisateursController.html":{},"injectables/UtilisateursService.html":{}}}],["replaced",{"_index":1831,"title":{},"body":{"license.html":{}}}],["reply",{"_index":812,"title":{},"body":{"modules/MailModule.html":{}}}],["repository",{"_index":1454,"title":{},"body":{"index.html":{},"properties.html":{}}}],["represent",{"_index":1587,"title":{},"body":{"license.html":{}}}],["representatives",{"_index":1609,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":1641,"title":{},"body":{"license.html":{}}}],["reproducing",{"_index":1752,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":1504,"title":{},"body":{"license.html":{}}}],["req",{"_index":126,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"controllers/ImagesController.html":{},"injectables/VisitorCounterMiddleware.html":{}}}],["req.cookies.jwt",{"_index":334,"title":{},"body":{"controllers/ArticleController.html":{}}}],["req.method",{"_index":1374,"title":{},"body":{"injectables/VisitorService.html":{}}}],["req.path",{"_index":1375,"title":{},"body":{"injectables/VisitorService.html":{}}}],["req.user",{"_index":231,"title":{},"body":{"controllers/AppController.html":{}}}],["request",{"_index":168,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"guards/RoleGuard.html":{}}}],["request.cookies.jwt",{"_index":1126,"title":{},"body":{"guards/RoleGuard.html":{}}}],["required",{"_index":501,"title":{},"body":{"classes/CreateMessageDto.html":{},"controllers/ImagesController.html":{},"license.html":{}}}],["requiredroles",{"_index":1121,"title":{},"body":{"guards/RoleGuard.html":{}}}],["requiredroles.some((role",{"_index":1128,"title":{},"body":{"guards/RoleGuard.html":{}}}],["requête",{"_index":1020,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["res",{"_index":130,"title":{},"body":{"controllers/AppController.html":{},"injectables/VisitorCounterMiddleware.html":{},"injectables/VisitorService.html":{}}}],["res.clearcookie('jwt",{"_index":234,"title":{},"body":{"controllers/AppController.html":{}}}],["res.cookie('jwt",{"_index":208,"title":{},"body":{"controllers/AppController.html":{}}}],["res.send",{"_index":235,"title":{},"body":{"controllers/AppController.html":{}}}],["res.send(token",{"_index":212,"title":{},"body":{"controllers/AppController.html":{}}}],["res/public/images",{"_index":616,"title":{},"body":{"controllers/ImagesController.html":{},"injectables/ImagesService.html":{}}}],["res/public/images/${imageurl",{"_index":729,"title":{},"body":{"injectables/ImagesService.html":{}}}],["reset",{"_index":83,"title":{},"body":{"modules/AlertModule.html":{},"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/ImagesModule.html":{},"modules/MailModule.html":{},"modules/MessagesModule.html":{},"modules/PagesModule.html":{},"controllers/PasswordResetController.html":{},"injectables/PasswordResetService.html":{},"modules/PrismaModule.html":{},"modules/UtilisateursModule.html":{},"modules/VisitorModule.html":{},"overview.html":{}}}],["reset.controller",{"_index":412,"title":{},"body":{"modules/AuthModule.html":{}}}],["reset.controller.ts",{"_index":951,"title":{},"body":{"controllers/PasswordResetController.html":{},"coverage.html":{}}}],["reset.controller.ts:34",{"_index":958,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["reset.controller.ts:77",{"_index":962,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["reset.dto",{"_index":967,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["reset.dto.ts",{"_index":1391,"title":{},"body":{"coverage.html":{},"classes/passwordResetDto.html":{}}}],["reset.dto.ts:7",{"_index":1863,"title":{},"body":{"classes/passwordResetDto.html":{}}}],["reset.dto.ts:9",{"_index":1862,"title":{},"body":{"classes/passwordResetDto.html":{}}}],["reset.service",{"_index":413,"title":{},"body":{"modules/AuthModule.html":{},"controllers/PasswordResetController.html":{}}}],["reset.service.ts",{"_index":1026,"title":{},"body":{"injectables/PasswordResetService.html":{},"coverage.html":{}}}],["reset.service.ts:17",{"_index":1031,"title":{},"body":{"injectables/PasswordResetService.html":{}}}],["reset.service.ts:50",{"_index":1033,"title":{},"body":{"injectables/PasswordResetService.html":{}}}],["reset.service.ts:62",{"_index":1035,"title":{},"body":{"injectables/PasswordResetService.html":{}}}],["reset.service.ts:9",{"_index":1029,"title":{},"body":{"injectables/PasswordResetService.html":{}}}],["reset/password",{"_index":411,"title":{},"body":{"modules/AuthModule.html":{},"controllers/PasswordResetController.html":{},"injectables/PasswordResetService.html":{},"coverage.html":{}}}],["resetpassword",{"_index":953,"title":{},"body":{"controllers/PasswordResetController.html":{},"injectables/PasswordResetService.html":{}}}],["resetpassword(@body",{"_index":1015,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["resetpassword(body",{"_index":959,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["resetpassword(token",{"_index":1030,"title":{},"body":{"injectables/PasswordResetService.html":{}}}],["resize",{"_index":705,"title":{},"body":{"injectables/ImagesService.html":{}}}],["resizing",{"_index":636,"title":{},"body":{"controllers/ImagesController.html":{}}}],["resolve(filename",{"_index":727,"title":{},"body":{"injectables/ImagesService.html":{}}}],["response",{"_index":325,"title":{},"body":{"controllers/ArticleController.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["response.status(status).json",{"_index":1076,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["responsibility",{"_index":1816,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":1768,"title":{},"body":{"license.html":{}}}],["result",{"_index":1792,"title":{},"body":{"license.html":{}}}],["resulting",{"_index":1560,"title":{},"body":{"license.html":{}}}],["results",{"_index":9,"title":{},"body":{"classes/Alert.html":{},"controllers/AlertController.html":{},"modules/AlertModule.html":{},"injectables/AlertService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"classes/Auth.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAlertDto.html":{},"classes/CreateArticleDto.html":{},"classes/CreateImageDto.html":{},"classes/CreateMessageDto.html":{},"classes/CreatePageDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateVisitorDto.html":{},"classes/Image.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/Message.html":{},"controllers/MessagesController.html":{},"modules/MessagesModule.html":{},"injectables/MessagesService.html":{},"controllers/PagesController.html":{},"modules/PagesModule.html":{},"injectables/PagesService.html":{},"controllers/PasswordResetController.html":{},"injectables/PasswordResetService.html":{},"classes/PrismaClientExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"guards/RoleGuard.html":{},"classes/UpdateAlertDto.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateImageDto.html":{},"classes/UpdateMessageDto.html":{},"classes/UpdatePageDto.html":{},"classes/UpdatePasswordUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateVisitorDto.html":{},"classes/Utilisateur.html":{},"controllers/UtilisateursController.html":{},"modules/UtilisateursModule.html":{},"injectables/UtilisateursService.html":{},"classes/Visitor.html":{},"controllers/VisitorController.html":{},"injectables/VisitorCounterMiddleware.html":{},"modules/VisitorModule.html":{},"injectables/VisitorService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"classes/passwordForgotDto.html":{},"classes/passwordResetDto.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":1696,"title":{},"body":{"license.html":{}}}],["return",{"_index":63,"title":{},"body":{"controllers/AlertController.html":{},"injectables/AlertService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MessagesController.html":{},"injectables/MessagesService.html":{},"controllers/PagesController.html":{},"injectables/PagesService.html":{},"controllers/PasswordResetController.html":{},"injectables/PasswordResetService.html":{},"guards/RoleGuard.html":{},"controllers/UtilisateursController.html":{},"injectables/UtilisateursService.html":{},"controllers/VisitorController.html":{},"injectables/VisitorCounterMiddleware.html":{},"injectables/VisitorService.html":{}}}],["returns",{"_index":32,"title":{},"body":{"controllers/AlertController.html":{},"injectables/AlertService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"controllers/MessagesController.html":{},"injectables/MessagesService.html":{},"controllers/PagesController.html":{},"injectables/PagesService.html":{},"controllers/PasswordResetController.html":{},"injectables/PasswordResetService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"guards/RoleGuard.html":{},"controllers/UtilisateursController.html":{},"injectables/UtilisateursService.html":{},"controllers/VisitorController.html":{},"injectables/VisitorCounterMiddleware.html":{},"injectables/VisitorService.html":{}}}],["revisions",{"_index":1584,"title":{},"body":{"license.html":{}}}],["rights",{"_index":1812,"title":{},"body":{"license.html":{}}}],["risks",{"_index":1773,"title":{},"body":{"license.html":{}}}],["role",{"_index":306,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"classes/CreateUtilisateurDto.html":{},"injectables/JwtStrategy.html":{},"controllers/PagesController.html":{},"guards/RoleGuard.html":{},"classes/Utilisateur.html":{},"controllers/UtilisateursController.html":{},"injectables/UtilisateursService.html":{}}}],["role/role.guard",{"_index":970,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["roleguard",{"_index":186,"title":{"guards/RoleGuard.html":{}},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"controllers/PagesController.html":{},"controllers/PasswordResetController.html":{},"guards/RoleGuard.html":{},"controllers/UtilisateursController.html":{},"coverage.html":{}}}],["roleguard)@delete(':id",{"_index":1219,"title":{},"body":{"controllers/UtilisateursController.html":{}}}],["roleguard)@delete(':id')@apiquery({name",{"_index":305,"title":{},"body":{"controllers/ArticleController.html":{}}}],["roleguard)@get",{"_index":1212,"title":{},"body":{"controllers/UtilisateursController.html":{}}}],["roleguard)@get(':id",{"_index":303,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/UtilisateursController.html":{}}}],["roleguard)@get('email/:email",{"_index":1215,"title":{},"body":{"controllers/UtilisateursController.html":{}}}],["roleguard)@get('profile')@apioperation({summary",{"_index":121,"title":{},"body":{"controllers/AppController.html":{}}}],["roleguard)@patch(':id",{"_index":1223,"title":{},"body":{"controllers/UtilisateursController.html":{}}}],["roleguard)@patch(':id')@apiquery({name",{"_index":311,"title":{},"body":{"controllers/ArticleController.html":{}}}],["roleguard)@patch(':id/change_password",{"_index":1207,"title":{},"body":{"controllers/UtilisateursController.html":{}}}],["roleguard)@post",{"_index":1210,"title":{},"body":{"controllers/UtilisateursController.html":{}}}],["roleguard)@post('/forgot",{"_index":957,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["roleguard)@post('/reset",{"_index":961,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["roleguard)@post('assign_conseiller')@apibody({schema",{"_index":1203,"title":{},"body":{"controllers/UtilisateursController.html":{}}}],["roleguard)@post('auth/signup/administrateur')@apioperation({summary",{"_index":149,"title":{},"body":{"controllers/AppController.html":{}}}],["roleguard)@post('auth/signup/conseiller')@apioperation({summary",{"_index":156,"title":{},"body":{"controllers/AppController.html":{}}}],["roleguard)@post('auth/signup/moderateur')@apioperation({summary",{"_index":164,"title":{},"body":{"controllers/AppController.html":{}}}],["roleguard)@post('create",{"_index":291,"title":{},"body":{"controllers/ArticleController.html":{}}}],["roles",{"_index":184,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"controllers/PagesController.html":{},"controllers/PasswordResetController.html":{},"guards/RoleGuard.html":{},"controllers/UtilisateursController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles(rolesenum.administrateur",{"_index":213,"title":{},"body":{"controllers/AppController.html":{},"controllers/UtilisateursController.html":{}}}],["roles(rolesenum.administrateur)@useguards(jwtauthguard",{"_index":148,"title":{},"body":{"controllers/AppController.html":{}}}],["roles(rolesenum.conseiller",{"_index":228,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"controllers/UtilisateursController.html":{}}}],["roles(rolesenum.conseiller)@useguards(jwtauthguard",{"_index":120,"title":{},"body":{"controllers/AppController.html":{}}}],["roles(rolesenum.jeune",{"_index":973,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["roles(rolesenum.jeune)@useguards(jwtauthguard",{"_index":956,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["roles(rolesenum.moderateur",{"_index":906,"title":{},"body":{"controllers/PagesController.html":{},"controllers/UtilisateursController.html":{}}}],["roles/roles.decorator",{"_index":969,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["rolesenum",{"_index":188,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"classes/CreateUtilisateurDto.html":{},"controllers/PagesController.html":{},"controllers/PasswordResetController.html":{},"guards/RoleGuard.html":{},"classes/UpdateUtilisateurDto.html":{},"controllers/UtilisateursController.html":{},"injectables/UtilisateursService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["rolesenum.administrateur",{"_index":227,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"controllers/PagesController.html":{},"controllers/UtilisateursController.html":{},"injectables/UtilisateursService.html":{}}}],["rolesenum.administrateur)@delete(':id')@apiquery({name",{"_index":911,"title":{},"body":{"controllers/PagesController.html":{}}}],["rolesenum.administrateur)@patch(':id')@apiquery({name",{"_index":914,"title":{},"body":{"controllers/PagesController.html":{}}}],["rolesenum.administrateur)@post()@apiquery({name",{"_index":907,"title":{},"body":{"controllers/PagesController.html":{}}}],["rolesenum.administrateur)@useguards(jwtauthguard",{"_index":290,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/UtilisateursController.html":{}}}],["rolesenum.conseiller",{"_index":218,"title":{},"body":{"controllers/AppController.html":{},"injectables/UtilisateursService.html":{}}}],["rolesenum.jeune",{"_index":224,"title":{},"body":{"controllers/AppController.html":{},"injectables/UtilisateursService.html":{}}}],["rolesenum.moderateur",{"_index":221,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"controllers/UtilisateursController.html":{},"injectables/UtilisateursService.html":{}}}],["rolesenum.moderateur)@useguards(jwtauthguard",{"_index":1218,"title":{},"body":{"controllers/UtilisateursController.html":{}}}],["royalty",{"_index":1638,"title":{},"body":{"license.html":{}}}],["rue",{"_index":531,"title":{},"body":{"classes/CreateUtilisateurDto.html":{}}}],["run",{"_index":1459,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":370,"title":{},"body":{"injectables/ArticleService.html":{},"dependencies.html":{}}}],["récupere",{"_index":598,"title":{},"body":{"controllers/ImagesController.html":{}}}],["réinitialisez",{"_index":1023,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["s",{"_index":642,"title":{},"body":{"controllers/ImagesController.html":{}}}],["s'est",{"_index":1007,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["salt",{"_index":1281,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["saltlength",{"_index":1278,"title":{},"body":{"injectables/UtilisateursService.html":{},"miscellaneous/enumerations.html":{}}}],["same",{"_index":1839,"title":{},"body":{"license.html":{}}}],["sauvegarde",{"_index":603,"title":{},"body":{"controllers/ImagesController.html":{}}}],["save",{"_index":202,"title":{},"body":{"controllers/AppController.html":{},"controllers/ImagesController.html":{}}}],["savetoken",{"_index":1027,"title":{},"body":{"injectables/PasswordResetService.html":{}}}],["savetoken(email",{"_index":1032,"title":{},"body":{"injectables/PasswordResetService.html":{}}}],["saveurl",{"_index":563,"title":{},"body":{"controllers/ImagesController.html":{}}}],["saveurl(imageurl",{"_index":572,"title":{},"body":{"controllers/ImagesController.html":{}}}],["scalable",{"_index":1447,"title":{},"body":{"index.html":{}}}],["schema",{"_index":298,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/ImagesController.html":{},"controllers/UtilisateursController.html":{}}}],["secret",{"_index":377,"title":{},"body":{"injectables/ArticleService.html":{},"modules/AuthModule.html":{},"injectables/PasswordResetService.html":{},"guards/RoleGuard.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":765,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["section",{"_index":1651,"title":{},"body":{"license.html":{}}}],["sections",{"_index":1509,"title":{},"body":{"license.html":{}}}],["secure",{"_index":808,"title":{},"body":{"modules/MailModule.html":{}}}],["see",{"_index":1848,"title":{},"body":{"license.html":{}}}],["sell",{"_index":1654,"title":{},"body":{"license.html":{}}}],["send",{"_index":1050,"title":{},"body":{"injectables/PasswordResetService.html":{}}}],["sender",{"_index":507,"title":{},"body":{"classes/CreateMessageDto.html":{},"injectables/MessagesService.html":{}}}],["sender.id",{"_index":896,"title":{},"body":{"injectables/MessagesService.html":{}}}],["senderid",{"_index":499,"title":{},"body":{"classes/CreateMessageDto.html":{}}}],["sendpasswordreset",{"_index":821,"title":{},"body":{"injectables/MailService.html":{}}}],["sendpasswordreset(email",{"_index":826,"title":{},"body":{"injectables/MailService.html":{}}}],["senduserconfirmation",{"_index":822,"title":{},"body":{"injectables/MailService.html":{}}}],["senduserconfirmation(user",{"_index":828,"title":{},"body":{"injectables/MailService.html":{}}}],["sent",{"_index":1608,"title":{},"body":{"license.html":{}}}],["separable",{"_index":1592,"title":{},"body":{"license.html":{}}}],["separate",{"_index":1737,"title":{},"body":{"license.html":{}}}],["server",{"_index":1448,"title":{},"body":{"index.html":{}}}],["service",{"_index":1745,"title":{},"body":{"license.html":{}}}],["session",{"_index":1417,"title":{},"body":{"dependencies.html":{}}}],["setmetadata",{"_index":1225,"title":{},"body":{"controllers/UtilisateursController.html":{}}}],["setmetadata('roles",{"_index":1221,"title":{},"body":{"controllers/UtilisateursController.html":{},"miscellaneous/variables.html":{}}}],["shall",{"_index":1507,"title":{},"body":{"license.html":{}}}],["shares",{"_index":1546,"title":{},"body":{"license.html":{}}}],["sharp",{"_index":639,"title":{},"body":{"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"dependencies.html":{}}}],["sharp(file.path",{"_index":704,"title":{},"body":{"injectables/ImagesService.html":{}}}],["si",{"_index":1103,"title":{},"body":{"injectables/PrismaService.html":{}}}],["side",{"_index":1449,"title":{},"body":{"index.html":{}}}],["sign",{"_index":150,"title":{},"body":{"controllers/AppController.html":{}}}],["signoptions",{"_index":417,"title":{},"body":{"modules/AuthModule.html":{}}}],["signupadministrateur",{"_index":115,"title":{},"body":{"controllers/AppController.html":{}}}],["signupadministrateur(@body",{"_index":226,"title":{},"body":{"controllers/AppController.html":{}}}],["signupadministrateur(user",{"_index":146,"title":{},"body":{"controllers/AppController.html":{}}}],["signupconseiller",{"_index":116,"title":{},"body":{"controllers/AppController.html":{}}}],["signupconseiller(@body",{"_index":216,"title":{},"body":{"controllers/AppController.html":{}}}],["signupconseiller(user",{"_index":155,"title":{},"body":{"controllers/AppController.html":{}}}],["signupjeune",{"_index":117,"title":{},"body":{"controllers/AppController.html":{}}}],["signupjeune(@body",{"_index":223,"title":{},"body":{"controllers/AppController.html":{}}}],["signupjeune(user",{"_index":159,"title":{},"body":{"controllers/AppController.html":{}}}],["signupmoderateur",{"_index":118,"title":{},"body":{"controllers/AppController.html":{}}}],["signupmoderateur(@body",{"_index":220,"title":{},"body":{"controllers/AppController.html":{}}}],["signupmoderateur(user",{"_index":163,"title":{},"body":{"controllers/AppController.html":{}}}],["slug",{"_index":472,"title":{},"body":{"classes/CreateArticleDto.html":{},"classes/UpdateArticleDto.html":{}}}],["software",{"_index":1559,"title":{},"body":{"license.html":{}}}],["sole",{"_index":1815,"title":{},"body":{"license.html":{}}}],["solely",{"_index":1767,"title":{},"body":{"license.html":{}}}],["sont",{"_index":1021,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/Alert.html":{},"controllers/AlertController.html":{},"modules/AlertModule.html":{},"injectables/AlertService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Article.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"classes/Auth.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateAlertDto.html":{},"classes/CreateArticleDto.html":{},"classes/CreateImageDto.html":{},"classes/CreateMessageDto.html":{},"classes/CreatePageDto.html":{},"classes/CreateUtilisateurDto.html":{},"classes/CreateVisitorDto.html":{},"classes/Image.html":{},"controllers/ImagesController.html":{},"modules/ImagesModule.html":{},"injectables/ImagesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/Message.html":{},"controllers/MessagesController.html":{},"modules/MessagesModule.html":{},"injectables/MessagesService.html":{},"controllers/PagesController.html":{},"modules/PagesModule.html":{},"injectables/PagesService.html":{},"controllers/PasswordResetController.html":{},"injectables/PasswordResetService.html":{},"classes/PrismaClientExceptionFilter.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"guards/RoleGuard.html":{},"classes/UpdateAlertDto.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdateImageDto.html":{},"classes/UpdateMessageDto.html":{},"classes/UpdatePageDto.html":{},"classes/UpdatePasswordUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/UpdateVisitorDto.html":{},"classes/Utilisateur.html":{},"controllers/UtilisateursController.html":{},"modules/UtilisateursModule.html":{},"injectables/UtilisateursService.html":{},"classes/Visitor.html":{},"controllers/VisitorController.html":{},"injectables/VisitorCounterMiddleware.html":{},"modules/VisitorModule.html":{},"injectables/VisitorService.html":{},"index.html":{},"license.html":{},"classes/passwordForgotDto.html":{},"classes/passwordResetDto.html":{}}}],["sous_titre",{"_index":473,"title":{},"body":{"classes/CreateArticleDto.html":{},"classes/UpdateArticleDto.html":{}}}],["special",{"_index":1787,"title":{},"body":{"license.html":{}}}],["specific",{"_index":1849,"title":{},"body":{"license.html":{}}}],["sponsors",{"_index":1477,"title":{},"body":{"index.html":{}}}],["src/.../auth.constants.ts",{"_index":1874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1439,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../roles.decorator.ts",{"_index":1875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../roles.enum.ts",{"_index":1435,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../utilisateurs.service.ts",{"_index":1436,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/alert/alert.controller.ts",{"_index":14,"title":{},"body":{"controllers/AlertController.html":{},"coverage.html":{}}}],["src/alert/alert.controller.ts:13",{"_index":27,"title":{},"body":{"controllers/AlertController.html":{}}}],["src/alert/alert.controller.ts:18",{"_index":34,"title":{},"body":{"controllers/AlertController.html":{}}}],["src/alert/alert.controller.ts:23",{"_index":38,"title":{},"body":{"controllers/AlertController.html":{}}}],["src/alert/alert.controller.ts:28",{"_index":42,"title":{},"body":{"controllers/AlertController.html":{}}}],["src/alert/alert.module.ts",{"_index":85,"title":{},"body":{"modules/AlertModule.html":{}}}],["src/alert/alert.service.ts",{"_index":90,"title":{},"body":{"injectables/AlertService.html":{},"coverage.html":{}}}],["src/alert/alert.service.ts:11",{"_index":101,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/alert/alert.service.ts:15",{"_index":103,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/alert/alert.service.ts:19",{"_index":105,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/alert/alert.service.ts:23",{"_index":98,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/alert/alert.service.ts:8",{"_index":95,"title":{},"body":{"injectables/AlertService.html":{}}}],["src/alert/dto/create",{"_index":451,"title":{},"body":{"classes/CreateAlertDto.html":{},"coverage.html":{}}}],["src/alert/dto/update",{"_index":1129,"title":{},"body":{"classes/UpdateAlertDto.html":{},"coverage.html":{}}}],["src/alert/entities/alert.entity.ts",{"_index":6,"title":{},"body":{"classes/Alert.html":{},"coverage.html":{}}}],["src/app.controller.ts",{"_index":111,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:38",{"_index":141,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:49",{"_index":158,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:56",{"_index":166,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:62",{"_index":162,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:69",{"_index":154,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:77",{"_index":125,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:83",{"_index":145,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:89",{"_index":128,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:36",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":278,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":280,"title":{},"body":{"injectables/AppService.html":{}}}],["src/article/article.controller.ts",{"_index":286,"title":{},"body":{"controllers/ArticleController.html":{},"coverage.html":{}}}],["src/article/article.controller.ts:48",{"_index":300,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/article/article.controller.ts:59",{"_index":302,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/article/article.controller.ts:66",{"_index":304,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/article/article.controller.ts:74",{"_index":312,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/article/article.controller.ts:85",{"_index":308,"title":{},"body":{"controllers/ArticleController.html":{}}}],["src/article/article.module.ts",{"_index":345,"title":{},"body":{"modules/ArticleModule.html":{}}}],["src/article/article.service.ts",{"_index":349,"title":{},"body":{"injectables/ArticleService.html":{},"coverage.html":{}}}],["src/article/article.service.ts:12",{"_index":354,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/article/article.service.ts:18",{"_index":356,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/article/article.service.ts:60",{"_index":361,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/article/article.service.ts:68",{"_index":364,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/article/article.service.ts:74",{"_index":367,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/article/article.service.ts:80",{"_index":358,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/article/article.service.ts:85",{"_index":357,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/article/article.service.ts:88",{"_index":359,"title":{},"body":{"injectables/ArticleService.html":{}}}],["src/article/dto/create",{"_index":463,"title":{},"body":{"classes/CreateArticleDto.html":{},"coverage.html":{}}}],["src/article/dto/update",{"_index":1132,"title":{},"body":{"classes/UpdateArticleDto.html":{},"coverage.html":{}}}],["src/article/entities/article.entity.ts",{"_index":284,"title":{},"body":{"classes/Article.html":{},"coverage.html":{}}}],["src/auth/auth.module.ts",{"_index":403,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:14",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:20",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:23",{"_index":433,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:38",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/constants/auth.constants.ts",{"_index":1386,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":783,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:14",{"_index":786,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:8",{"_index":785,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/password",{"_index":1389,"title":{},"body":{"coverage.html":{},"classes/passwordForgotDto.html":{},"classes/passwordResetDto.html":{}}}],["src/auth/entities/auth.entity.ts",{"_index":394,"title":{},"body":{"classes/Auth.html":{},"coverage.html":{}}}],["src/auth/guard/jwt",{"_index":745,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guard/local",{"_index":771,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/password",{"_index":950,"title":{},"body":{"controllers/PasswordResetController.html":{},"injectables/PasswordResetService.html":{},"coverage.html":{}}}],["src/auth/role/role.guard",{"_index":1227,"title":{},"body":{"controllers/UtilisateursController.html":{}}}],["src/auth/role/role.guard.ts",{"_index":1113,"title":{},"body":{"guards/RoleGuard.html":{},"coverage.html":{}}}],["src/auth/role/role.guard.ts:14",{"_index":1120,"title":{},"body":{"guards/RoleGuard.html":{}}}],["src/auth/role/role.guard.ts:8",{"_index":1117,"title":{},"body":{"guards/RoleGuard.html":{}}}],["src/auth/roles/roles.decorator.ts",{"_index":1392,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/strategy/jwt.strategy.ts",{"_index":750,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategy/jwt.strategy.ts:17",{"_index":754,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategy/jwt.strategy.ts:7",{"_index":752,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategy/local.strategy.ts",{"_index":773,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/strategy/local.strategy.ts:15",{"_index":777,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/strategy/local.strategy.ts:7",{"_index":775,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/enum/roles.enum.ts",{"_index":1437,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/images/dto/create",{"_index":493,"title":{},"body":{"classes/CreateImageDto.html":{},"coverage.html":{}}}],["src/images/dto/update",{"_index":1155,"title":{},"body":{"classes/UpdateImageDto.html":{},"coverage.html":{}}}],["src/images/entities/image.entity.ts",{"_index":558,"title":{},"body":{"classes/Image.html":{},"coverage.html":{}}}],["src/images/images.controller.ts",{"_index":560,"title":{},"body":{"controllers/ImagesController.html":{},"coverage.html":{}}}],["src/images/images.controller.ts:58",{"_index":580,"title":{},"body":{"controllers/ImagesController.html":{}}}],["src/images/images.controller.ts:70",{"_index":570,"title":{},"body":{"controllers/ImagesController.html":{}}}],["src/images/images.controller.ts:76",{"_index":567,"title":{},"body":{"controllers/ImagesController.html":{}}}],["src/images/images.controller.ts:84",{"_index":574,"title":{},"body":{"controllers/ImagesController.html":{}}}],["src/images/images.module.ts",{"_index":663,"title":{},"body":{"modules/ImagesModule.html":{}}}],["src/images/images.service.ts",{"_index":666,"title":{},"body":{"injectables/ImagesService.html":{},"coverage.html":{}}}],["src/images/images.service.ts:100",{"_index":683,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/images/images.service.ts:16",{"_index":674,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/images/images.service.ts:24",{"_index":677,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/images/images.service.ts:41",{"_index":687,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/images/images.service.ts:56",{"_index":685,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/images/images.service.ts:61",{"_index":691,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/images/images.service.ts:81",{"_index":689,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/images/images.service.ts:91",{"_index":681,"title":{},"body":{"injectables/ImagesService.html":{}}}],["src/mail/mail.module.ts",{"_index":790,"title":{},"body":{"modules/MailModule.html":{}}}],["src/mail/mail.service.ts",{"_index":820,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{}}}],["src/mail/mail.service.ts:25",{"_index":827,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:6",{"_index":825,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:9",{"_index":829,"title":{},"body":{"injectables/MailService.html":{}}}],["src/main.ts",{"_index":1395,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/messages/dto/create",{"_index":496,"title":{},"body":{"classes/CreateMessageDto.html":{},"coverage.html":{}}}],["src/messages/dto/update",{"_index":1158,"title":{},"body":{"classes/UpdateMessageDto.html":{},"coverage.html":{}}}],["src/messages/entities/message.entity.ts",{"_index":853,"title":{},"body":{"classes/Message.html":{},"coverage.html":{}}}],["src/messages/messages.controller.ts",{"_index":855,"title":{},"body":{"controllers/MessagesController.html":{},"coverage.html":{}}}],["src/messages/messages.controller.ts:23",{"_index":858,"title":{},"body":{"controllers/MessagesController.html":{}}}],["src/messages/messages.controller.ts:30",{"_index":859,"title":{},"body":{"controllers/MessagesController.html":{}}}],["src/messages/messages.controller.ts:35",{"_index":860,"title":{},"body":{"controllers/MessagesController.html":{}}}],["src/messages/messages.controller.ts:40",{"_index":863,"title":{},"body":{"controllers/MessagesController.html":{}}}],["src/messages/messages.controller.ts:45",{"_index":861,"title":{},"body":{"controllers/MessagesController.html":{}}}],["src/messages/messages.module.ts",{"_index":880,"title":{},"body":{"modules/MessagesModule.html":{}}}],["src/messages/messages.service.ts",{"_index":882,"title":{},"body":{"injectables/MessagesService.html":{},"coverage.html":{}}}],["src/messages/messages.service.ts:11",{"_index":885,"title":{},"body":{"injectables/MessagesService.html":{}}}],["src/messages/messages.service.ts:35",{"_index":886,"title":{},"body":{"injectables/MessagesService.html":{}}}],["src/messages/messages.service.ts:39",{"_index":887,"title":{},"body":{"injectables/MessagesService.html":{}}}],["src/messages/messages.service.ts:43",{"_index":889,"title":{},"body":{"injectables/MessagesService.html":{}}}],["src/messages/messages.service.ts:55",{"_index":888,"title":{},"body":{"injectables/MessagesService.html":{}}}],["src/messages/messages.service.ts:8",{"_index":883,"title":{},"body":{"injectables/MessagesService.html":{}}}],["src/pages/dto/create",{"_index":514,"title":{},"body":{"classes/CreatePageDto.html":{},"coverage.html":{}}}],["src/pages/dto/update",{"_index":1160,"title":{},"body":{"classes/UpdatePageDto.html":{},"coverage.html":{}}}],["src/pages/pages.controller.ts",{"_index":903,"title":{},"body":{"controllers/PagesController.html":{},"coverage.html":{}}}],["src/pages/pages.controller.ts:30",{"_index":908,"title":{},"body":{"controllers/PagesController.html":{}}}],["src/pages/pages.controller.ts:38",{"_index":909,"title":{},"body":{"controllers/PagesController.html":{}}}],["src/pages/pages.controller.ts:43",{"_index":910,"title":{},"body":{"controllers/PagesController.html":{}}}],["src/pages/pages.controller.ts:51",{"_index":915,"title":{},"body":{"controllers/PagesController.html":{}}}],["src/pages/pages.controller.ts:63",{"_index":912,"title":{},"body":{"controllers/PagesController.html":{}}}],["src/pages/pages.module.ts",{"_index":929,"title":{},"body":{"modules/PagesModule.html":{}}}],["src/pages/pages.service.ts",{"_index":931,"title":{},"body":{"injectables/PagesService.html":{},"coverage.html":{}}}],["src/pages/pages.service.ts:11",{"_index":937,"title":{},"body":{"injectables/PagesService.html":{}}}],["src/pages/pages.service.ts:16",{"_index":934,"title":{},"body":{"injectables/PagesService.html":{}}}],["src/pages/pages.service.ts:19",{"_index":938,"title":{},"body":{"injectables/PagesService.html":{}}}],["src/pages/pages.service.ts:23",{"_index":939,"title":{},"body":{"injectables/PagesService.html":{}}}],["src/pages/pages.service.ts:33",{"_index":941,"title":{},"body":{"injectables/PagesService.html":{}}}],["src/pages/pages.service.ts:47",{"_index":940,"title":{},"body":{"injectables/PagesService.html":{}}}],["src/pages/pages.service.ts:8",{"_index":933,"title":{},"body":{"injectables/PagesService.html":{}}}],["src/prisma",{"_index":1054,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{},"coverage.html":{}}}],["src/prisma/prisma.module.ts",{"_index":1084,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":347,"title":{},"body":{"modules/ArticleModule.html":{},"injectables/VisitorCounterMiddleware.html":{},"modules/VisitorModule.html":{}}}],["src/prisma/prisma.service.ts",{"_index":1086,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:23",{"_index":1092,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:7",{"_index":1089,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/utilisateurs/dto/create",{"_index":521,"title":{},"body":{"classes/CreateUtilisateurDto.html":{},"coverage.html":{}}}],["src/utilisateurs/dto/update",{"_index":1166,"title":{},"body":{"classes/UpdatePasswordUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"coverage.html":{}}}],["src/utilisateurs/entities/utilisateur.entity.ts",{"_index":1182,"title":{},"body":{"classes/Utilisateur.html":{},"coverage.html":{}}}],["src/utilisateurs/entities/utilisateur.entity.ts:10",{"_index":1191,"title":{},"body":{"classes/Utilisateur.html":{}}}],["src/utilisateurs/entities/utilisateur.entity.ts:13",{"_index":1187,"title":{},"body":{"classes/Utilisateur.html":{}}}],["src/utilisateurs/entities/utilisateur.entity.ts:16",{"_index":1190,"title":{},"body":{"classes/Utilisateur.html":{}}}],["src/utilisateurs/entities/utilisateur.entity.ts:19",{"_index":1194,"title":{},"body":{"classes/Utilisateur.html":{}}}],["src/utilisateurs/entities/utilisateur.entity.ts:22",{"_index":1193,"title":{},"body":{"classes/Utilisateur.html":{}}}],["src/utilisateurs/entities/utilisateur.entity.ts:25",{"_index":1185,"title":{},"body":{"classes/Utilisateur.html":{}}}],["src/utilisateurs/entities/utilisateur.entity.ts:28",{"_index":1186,"title":{},"body":{"classes/Utilisateur.html":{}}}],["src/utilisateurs/entities/utilisateur.entity.ts:4",{"_index":1189,"title":{},"body":{"classes/Utilisateur.html":{}}}],["src/utilisateurs/entities/utilisateur.entity.ts:7",{"_index":1192,"title":{},"body":{"classes/Utilisateur.html":{}}}],["src/utilisateurs/utilisateurs.controller.ts",{"_index":1196,"title":{},"body":{"controllers/UtilisateursController.html":{},"coverage.html":{}}}],["src/utilisateurs/utilisateurs.controller.ts:30",{"_index":1211,"title":{},"body":{"controllers/UtilisateursController.html":{}}}],["src/utilisateurs/utilisateurs.controller.ts:40",{"_index":1213,"title":{},"body":{"controllers/UtilisateursController.html":{}}}],["src/utilisateurs/utilisateurs.controller.ts:46",{"_index":1217,"title":{},"body":{"controllers/UtilisateursController.html":{}}}],["src/utilisateurs/utilisateurs.controller.ts:52",{"_index":1224,"title":{},"body":{"controllers/UtilisateursController.html":{}}}],["src/utilisateurs/utilisateurs.controller.ts:61",{"_index":1220,"title":{},"body":{"controllers/UtilisateursController.html":{}}}],["src/utilisateurs/utilisateurs.controller.ts:68",{"_index":1208,"title":{},"body":{"controllers/UtilisateursController.html":{}}}],["src/utilisateurs/utilisateurs.controller.ts:78",{"_index":1216,"title":{},"body":{"controllers/UtilisateursController.html":{}}}],["src/utilisateurs/utilisateurs.controller.ts:98",{"_index":1204,"title":{},"body":{"controllers/UtilisateursController.html":{}}}],["src/utilisateurs/utilisateurs.module.ts",{"_index":1247,"title":{},"body":{"modules/UtilisateursModule.html":{}}}],["src/utilisateurs/utilisateurs.service.ts",{"_index":1249,"title":{},"body":{"injectables/UtilisateursService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/utilisateurs/utilisateurs.service.ts:107",{"_index":1264,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["src/utilisateurs/utilisateurs.service.ts:116",{"_index":1263,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["src/utilisateurs/utilisateurs.service.ts:121",{"_index":1268,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["src/utilisateurs/utilisateurs.service.ts:139",{"_index":1267,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["src/utilisateurs/utilisateurs.service.ts:148",{"_index":1270,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["src/utilisateurs/utilisateurs.service.ts:173",{"_index":1260,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["src/utilisateurs/utilisateurs.service.ts:183",{"_index":1266,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["src/utilisateurs/utilisateurs.service.ts:186",{"_index":1257,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["src/utilisateurs/utilisateurs.service.ts:32",{"_index":1254,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["src/utilisateurs/utilisateurs.service.ts:36",{"_index":1262,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["src/visitor/dto/create",{"_index":555,"title":{},"body":{"classes/CreateVisitorDto.html":{},"coverage.html":{}}}],["src/visitor/dto/update",{"_index":1179,"title":{},"body":{"classes/UpdateVisitorDto.html":{},"coverage.html":{}}}],["src/visitor/entities/visitor.entity.ts",{"_index":1323,"title":{},"body":{"classes/Visitor.html":{},"coverage.html":{}}}],["src/visitor/visitor.controller.ts",{"_index":1325,"title":{},"body":{"controllers/VisitorController.html":{},"coverage.html":{}}}],["src/visitor/visitor.controller.ts:16",{"_index":1328,"title":{},"body":{"controllers/VisitorController.html":{}}}],["src/visitor/visitor.module.ts",{"_index":1362,"title":{},"body":{"modules/VisitorModule.html":{}}}],["src/visitor/visitor.service.ts",{"_index":1364,"title":{},"body":{"injectables/VisitorService.html":{},"coverage.html":{}}}],["src/visitor/visitor.service.ts:10",{"_index":1367,"title":{},"body":{"injectables/VisitorService.html":{}}}],["src/visitor/visitor.service.ts:16",{"_index":1369,"title":{},"body":{"injectables/VisitorService.html":{}}}],["src/visitor/visitor.service.ts:7",{"_index":1366,"title":{},"body":{"injectables/VisitorService.html":{}}}],["src/visitor/visitorcountmiddleware.middleware",{"_index":415,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/visitor/visitorcountmiddleware.middleware.ts",{"_index":1340,"title":{},"body":{"injectables/VisitorCounterMiddleware.html":{},"coverage.html":{}}}],["src/visitor/visitorcountmiddleware.middleware.ts:5",{"_index":1342,"title":{},"body":{"injectables/VisitorCounterMiddleware.html":{}}}],["src/visitor/visitorcountmiddleware.middleware.ts:9",{"_index":1345,"title":{},"body":{"injectables/VisitorCounterMiddleware.html":{}}}],["start",{"_index":1460,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1463,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1465,"title":{},"body":{"index.html":{}}}],["started",{"_index":1441,"title":{"index.html":{},"license.html":{}},"body":{}}],["starter",{"_index":1453,"title":{},"body":{"index.html":{}}}],["state",{"_index":1731,"title":{},"body":{"license.html":{}}}],["stated",{"_index":1650,"title":{},"body":{"license.html":{}}}],["statement",{"_index":1723,"title":{},"body":{"license.html":{}}}],["statements",{"_index":1379,"title":{},"body":{"coverage.html":{}}}],["stating",{"_index":1693,"title":{},"body":{"license.html":{}}}],["status",{"_index":199,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"classes/CreateArticleDto.html":{},"classes/PrismaClientExceptionFilter.html":{},"classes/UpdateArticleDto.html":{}}}],["statuscode",{"_index":336,"title":{},"body":{"controllers/ArticleController.html":{},"classes/PrismaClientExceptionFilter.html":{}}}],["stay",{"_index":1486,"title":{},"body":{"index.html":{}}}],["stockurl",{"_index":672,"title":{},"body":{"injectables/ImagesService.html":{}}}],["stockurl(imageurl",{"_index":688,"title":{},"body":{"injectables/ImagesService.html":{}}}],["stoppage",{"_index":1796,"title":{},"body":{"license.html":{}}}],["storage",{"_index":614,"title":{},"body":{"controllers/ImagesController.html":{}}}],["strategy",{"_index":757,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["strategy/jwt.strategy",{"_index":410,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy/local.strategy",{"_index":409,"title":{},"body":{"modules/AuthModule.html":{}}}],["strict",{"_index":818,"title":{},"body":{"modules/MailModule.html":{}}}],["string",{"_index":36,"title":{},"body":{"controllers/AlertController.html":{},"injectables/AppService.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"classes/CreateAlertDto.html":{},"classes/CreateArticleDto.html":{},"classes/CreateMessageDto.html":{},"classes/CreatePageDto.html":{},"classes/CreateUtilisateurDto.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"controllers/MessagesController.html":{},"controllers/PagesController.html":{},"injectables/PasswordResetService.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdatePageDto.html":{},"classes/UpdatePasswordUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/Utilisateur.html":{},"controllers/UtilisateursController.html":{},"injectables/UtilisateursService.html":{},"controllers/VisitorController.html":{},"classes/passwordForgotDto.html":{},"classes/passwordResetDto.html":{}}}],["sub",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{}}}],["subject",{"_index":835,"title":{},"body":{"injectables/MailService.html":{},"license.html":{}}}],["sublicense",{"_index":1646,"title":{},"body":{"license.html":{}}}],["submission",{"_index":1727,"title":{},"body":{"license.html":{}}}],["submit",{"_index":1602,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":1600,"title":{},"body":{"license.html":{}}}],["subsequently",{"_index":1626,"title":{},"body":{"license.html":{}}}],["success",{"_index":335,"title":{},"body":{"controllers/ArticleController.html":{}}}],["successfully",{"_index":200,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{}}}],["successfully'})@apiresponse({status",{"_index":138,"title":{},"body":{"controllers/AppController.html":{}}}],["such",{"_index":1536,"title":{},"body":{"license.html":{}}}],["summary",{"_index":197,"title":{},"body":{"controllers/AppController.html":{}}}],["super",{"_index":761,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PrismaService.html":{}}}],["super.catch(exception",{"_index":1079,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{}}}],["supersede",{"_index":1736,"title":{},"body":{"license.html":{}}}],["support",{"_index":832,"title":{},"body":{"injectables/MailService.html":{},"index.html":{},"license.html":{},"modules.html":{}}}],["supprimer",{"_index":1304,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["svg",{"_index":1854,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1071,"title":{},"body":{"classes/PrismaClientExceptionFilter.html":{},"injectables/UtilisateursService.html":{}}}],["syntax",{"_index":1837,"title":{},"body":{"license.html":{}}}],["systems",{"_index":1612,"title":{},"body":{"license.html":{}}}],["table",{"_index":1287,"title":{},"body":{"injectables/UtilisateursService.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1399,"title":{},"body":{"coverage.html":{}}}],["tags",{"_index":474,"title":{},"body":{"classes/CreateArticleDto.html":{},"classes/CreatePageDto.html":{},"classes/UpdateArticleDto.html":{}}}],["target",{"_index":654,"title":{},"body":{"controllers/ImagesController.html":{}}}],["team",{"_index":833,"title":{},"body":{"injectables/MailService.html":{}}}],["telephone",{"_index":529,"title":{},"body":{"classes/CreateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"injectables/UtilisateursService.html":{},"miscellaneous/variables.html":{}}}],["template",{"_index":813,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{}}}],["terminate",{"_index":1677,"title":{},"body":{"license.html":{}}}],["terms",{"_index":1502,"title":{},"body":{"license.html":{}}}],["test",{"_index":1102,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["test:covsupport",{"_index":1470,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1469,"title":{},"body":{"index.html":{}}}],["test@test.com",{"_index":1860,"title":{},"body":{"classes/passwordForgotDto.html":{}}}],["test@{domain}.com",{"_index":538,"title":{},"body":{"classes/CreateUtilisateurDto.html":{},"classes/LoginDto.html":{}}}],["tests",{"_index":1467,"title":{},"body":{"index.html":{}}}],["text",{"_index":1703,"title":{},"body":{"license.html":{}}}],["thanks",{"_index":1476,"title":{},"body":{"index.html":{}}}],["theory",{"_index":1778,"title":{},"body":{"license.html":{}}}],["thereof",{"_index":1596,"title":{},"body":{"license.html":{}}}],["third",{"_index":1710,"title":{},"body":{"license.html":{}}}],["this.$on('beforeexit",{"_index":1109,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.alertservice.createalert(createalertdto",{"_index":64,"title":{},"body":{"controllers/AlertController.html":{}}}],["this.alertservice.findall",{"_index":65,"title":{},"body":{"controllers/AlertController.html":{}}}],["this.alertservice.findone(+id",{"_index":67,"title":{},"body":{"controllers/AlertController.html":{}}}],["this.alertservice.remove(+id",{"_index":69,"title":{},"body":{"controllers/AlertController.html":{}}}],["this.articleservice.createarticle(createarticledto",{"_index":333,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.articleservice.findall",{"_index":337,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.articleservice.findone(+id",{"_index":338,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.articleservice.remove(+id",{"_index":342,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.articleservice.updatearticle(+id",{"_index":341,"title":{},"body":{"controllers/ArticleController.html":{}}}],["this.articleservice.updatearticle(id",{"_index":738,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.authservice.login(req.user",{"_index":207,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.register(user",{"_index":217,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.validateuser(username",{"_index":782,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.createpage(createpagedto",{"_index":943,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.deleteurl(imageurl",{"_index":744,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.geturl(imageurl",{"_index":736,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.imagesservice.compressimage(file",{"_index":640,"title":{},"body":{"controllers/ImagesController.html":{}}}],["this.imagesservice.getfordelete(imageurl",{"_index":655,"title":{},"body":{"controllers/ImagesController.html":{}}}],["this.imagesservice.remove(filename",{"_index":657,"title":{},"body":{"controllers/ImagesController.html":{}}}],["this.imagesservice.stockurl(file.filename",{"_index":647,"title":{},"body":{"controllers/ImagesController.html":{}}}],["this.imagesservice.stockurl(imageurl",{"_index":660,"title":{},"body":{"controllers/ImagesController.html":{}}}],["this.jwtservice.decode(token",{"_index":870,"title":{},"body":{"controllers/MessagesController.html":{}}}],["this.jwtservice.sign",{"_index":998,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["this.jwtservice.sign(payload",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(token",{"_index":376,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/PasswordResetService.html":{},"guards/RoleGuard.html":{}}}],["this.mailerservice.sendmail",{"_index":831,"title":{},"body":{"injectables/MailService.html":{}}}],["this.mailservice.sendpasswordreset(dto.email",{"_index":1000,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["this.messagesservice.create(data",{"_index":872,"title":{},"body":{"controllers/MessagesController.html":{}}}],["this.messagesservice.findall",{"_index":873,"title":{},"body":{"controllers/MessagesController.html":{}}}],["this.messagesservice.findone(+id",{"_index":874,"title":{},"body":{"controllers/MessagesController.html":{}}}],["this.messagesservice.remove(+id",{"_index":877,"title":{},"body":{"controllers/MessagesController.html":{}}}],["this.messagesservice.update(+id",{"_index":876,"title":{},"body":{"controllers/MessagesController.html":{}}}],["this.pagesservice.create(createpagedto",{"_index":922,"title":{},"body":{"controllers/PagesController.html":{}}}],["this.pagesservice.findall",{"_index":923,"title":{},"body":{"controllers/PagesController.html":{}}}],["this.pagesservice.findone(+id",{"_index":924,"title":{},"body":{"controllers/PagesController.html":{}}}],["this.pagesservice.remove(+id",{"_index":926,"title":{},"body":{"controllers/PagesController.html":{}}}],["this.pagesservice.update(+id",{"_index":925,"title":{},"body":{"controllers/PagesController.html":{}}}],["this.passwordresetservice.resetpassword(body.token",{"_index":1025,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["this.passwordresetservice.savetoken(dto.email",{"_index":1004,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["this.prisma.administrateur.create",{"_index":1289,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["this.prisma.alert.create",{"_index":109,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.prisma.alert.delete",{"_index":108,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.prisma.alert.findmany",{"_index":106,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.prisma.alert.findunique",{"_index":107,"title":{},"body":{"injectables/AlertService.html":{}}}],["this.prisma.article.create",{"_index":374,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.prisma.article.delete",{"_index":392,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.prisma.article.findmany",{"_index":391,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.prisma.article.findunique",{"_index":390,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/ImagesService.html":{}}}],["this.prisma.article.update",{"_index":388,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.prisma.conseiller.create",{"_index":1291,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["this.prisma.conseiller.findunique",{"_index":382,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/UtilisateursService.html":{}}}],["this.prisma.est_attribuer.create",{"_index":1322,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["this.prisma.jeune.create",{"_index":1290,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["this.prisma.jeune.findunique",{"_index":1320,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["this.prisma.message.create",{"_index":893,"title":{},"body":{"injectables/MessagesService.html":{}}}],["this.prisma.message.delete",{"_index":901,"title":{},"body":{"injectables/MessagesService.html":{}}}],["this.prisma.message.findmany",{"_index":897,"title":{},"body":{"injectables/MessagesService.html":{}}}],["this.prisma.message.findunique",{"_index":898,"title":{},"body":{"injectables/MessagesService.html":{}}}],["this.prisma.message.update",{"_index":899,"title":{},"body":{"injectables/MessagesService.html":{}}}],["this.prisma.moderateur.create",{"_index":1293,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["this.prisma.page.create",{"_index":942,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.prisma.page.delete",{"_index":948,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.prisma.page.findmany",{"_index":944,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.prisma.page.findunique",{"_index":734,"title":{},"body":{"injectables/ImagesService.html":{},"injectables/PagesService.html":{}}}],["this.prisma.page.update",{"_index":947,"title":{},"body":{"injectables/PagesService.html":{}}}],["this.prisma.password_reset.create",{"_index":1052,"title":{},"body":{"injectables/PasswordResetService.html":{}}}],["this.prisma.password_reset.delete",{"_index":1045,"title":{},"body":{"injectables/PasswordResetService.html":{}}}],["this.prisma.password_reset.findunique",{"_index":1041,"title":{},"body":{"injectables/PasswordResetService.html":{}}}],["this.prisma.redige.create",{"_index":386,"title":{},"body":{"injectables/ArticleService.html":{}}}],["this.prisma.utilisateur.create",{"_index":1288,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["this.prisma.utilisateur.delete",{"_index":1306,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["this.prisma.utilisateur.findfirst",{"_index":1319,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["this.prisma.utilisateur.findmany",{"_index":1298,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["this.prisma.utilisateur.findunique",{"_index":890,"title":{},"body":{"injectables/MessagesService.html":{},"injectables/UtilisateursService.html":{}}}],["this.prisma.utilisateur.update",{"_index":1303,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["this.prisma.visitor.findmany",{"_index":1370,"title":{},"body":{"injectables/VisitorService.html":{}}}],["this.prisma.visitor.upsert",{"_index":1351,"title":{},"body":{"injectables/VisitorCounterMiddleware.html":{}}}],["this.reflector.getallandoverride",{"_index":1122,"title":{},"body":{"guards/RoleGuard.html":{}}}],["this.usersservice.createutilisateur(user",{"_index":437,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findonebyemail(email",{"_index":438,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.utilisateursservice.assignconseillertojeune",{"_index":1243,"title":{},"body":{"controllers/UtilisateursController.html":{}}}],["this.utilisateursservice.changepassword",{"_index":1043,"title":{},"body":{"injectables/PasswordResetService.html":{}}}],["this.utilisateursservice.createutilisateur",{"_index":1230,"title":{},"body":{"controllers/UtilisateursController.html":{}}}],["this.utilisateursservice.findall",{"_index":1231,"title":{},"body":{"controllers/UtilisateursController.html":{}}}],["this.utilisateursservice.findone(+id",{"_index":1232,"title":{},"body":{"controllers/UtilisateursController.html":{}}}],["this.utilisateursservice.findonebyemail",{"_index":989,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["this.utilisateursservice.findonebyemail(email",{"_index":1239,"title":{},"body":{"controllers/UtilisateursController.html":{}}}],["this.utilisateursservice.remove(+id",{"_index":1234,"title":{},"body":{"controllers/UtilisateursController.html":{}}}],["this.utilisateursservice.update(+id",{"_index":1233,"title":{},"body":{"controllers/UtilisateursController.html":{}}}],["this.utilisateursservice.updatepassword(+id",{"_index":1236,"title":{},"body":{"controllers/UtilisateursController.html":{}}}],["this.verifyimageorpageexist(id",{"_index":737,"title":{},"body":{"injectables/ImagesService.html":{}}}],["this.verifytoken(token",{"_index":1038,"title":{},"body":{"injectables/PasswordResetService.html":{}}}],["this.visitor.use",{"_index":238,"title":{},"body":{"controllers/AppController.html":{}}}],["this.visitorcount",{"_index":1354,"title":{},"body":{"injectables/VisitorCounterMiddleware.html":{},"injectables/VisitorService.html":{}}}],["this.visitorservice.findone(+id",{"_index":1337,"title":{},"body":{"controllers/VisitorController.html":{}}}],["this.visitorservice.gettotalvisitors",{"_index":1336,"title":{},"body":{"controllers/VisitorController.html":{}}}],["this.visitorservice.incrementation(app",{"_index":1334,"title":{},"body":{"controllers/VisitorController.html":{}}}],["this.visitorservice.remove(+id",{"_index":1339,"title":{},"body":{"controllers/VisitorController.html":{}}}],["this.visitorservice.update(+id",{"_index":1338,"title":{},"body":{"controllers/VisitorController.html":{}}}],["those",{"_index":1657,"title":{},"body":{"license.html":{}}}],["through",{"_index":1510,"title":{},"body":{"license.html":{}}}],["throw",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/LocalStrategy.html":{},"injectables/PagesService.html":{},"controllers/PasswordResetController.html":{},"injectables/PasswordResetService.html":{},"injectables/UtilisateursService.html":{}}}],["title",{"_index":455,"title":{},"body":{"classes/CreateAlertDto.html":{},"license.html":{}}}],["titre",{"_index":475,"title":{},"body":{"classes/CreateArticleDto.html":{},"classes/UpdateArticleDto.html":{}}}],["tobuffer",{"_index":714,"title":{},"body":{"injectables/ImagesService.html":{}}}],["toformat(format",{"_index":713,"title":{},"body":{"injectables/ImagesService.html":{}}}],["token",{"_index":203,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"classes/CreateMessageDto.html":{},"injectables/MailService.html":{},"controllers/MessagesController.html":{},"controllers/PasswordResetController.html":{},"injectables/PasswordResetService.html":{},"guards/RoleGuard.html":{},"classes/passwordResetDto.html":{}}}],["token.access_token",{"_index":209,"title":{},"body":{"controllers/AppController.html":{}}}],["tort",{"_index":1779,"title":{},"body":{"license.html":{}}}],["total",{"_index":1335,"title":{},"body":{"controllers/VisitorController.html":{},"injectables/VisitorService.html":{}}}],["touch",{"_index":1487,"title":{},"body":{"index.html":{}}}],["tous",{"_index":1297,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["tracking",{"_index":1614,"title":{},"body":{"license.html":{}}}],["trade",{"_index":1743,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":1697,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":1741,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":1655,"title":{},"body":{"license.html":{}}}],["transformation",{"_index":1562,"title":{},"body":{"license.html":{}}}],["transformer",{"_index":1410,"title":{},"body":{"dependencies.html":{}}}],["translation",{"_index":1563,"title":{},"body":{"license.html":{}}}],["transport",{"_index":804,"title":{},"body":{"modules/MailModule.html":{}}}],["trouver",{"_index":1294,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["true",{"_index":211,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"classes/CreateMessageDto.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"modules/MailModule.html":{},"injectables/PasswordResetService.html":{},"guards/RoleGuard.html":{}}}],["try",{"_index":740,"title":{},"body":{"injectables/ImagesService.html":{},"controllers/PasswordResetController.html":{},"injectables/PasswordResetService.html":{}}}],["twitter",{"_index":1493,"title":{},"body":{"index.html":{}}}],["type",{"_index":30,"title":{},"body":{"controllers/AlertController.html":{},"injectables/AlertService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"classes/CreateAlertDto.html":{},"classes/CreateArticleDto.html":{},"classes/CreateMessageDto.html":{},"classes/CreatePageDto.html":{},"classes/CreateUtilisateurDto.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"controllers/MessagesController.html":{},"injectables/MessagesService.html":{},"controllers/PagesController.html":{},"injectables/PagesService.html":{},"controllers/PasswordResetController.html":{},"injectables/PasswordResetService.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/PrismaService.html":{},"guards/RoleGuard.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdatePageDto.html":{},"classes/UpdatePasswordUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"classes/Utilisateur.html":{},"controllers/UtilisateursController.html":{},"injectables/UtilisateursService.html":{},"injectables/VisitorCounterMiddleware.html":{},"injectables/VisitorService.html":{},"coverage.html":{},"classes/passwordForgotDto.html":{},"classes/passwordResetDto.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1871,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":1148,"title":{},"body":{"classes/UpdateArticleDto.html":{},"classes/UpdatePasswordUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"dependencies.html":{},"license.html":{}}}],["typescript",{"_index":1452,"title":{},"body":{"index.html":{}}}],["un",{"_index":987,"title":{},"body":{"controllers/PasswordResetController.html":{},"injectables/UtilisateursService.html":{}}}],["unauthorized",{"_index":140,"title":{},"body":{"controllers/AppController.html":{}}}],["unauthorizedexception",{"_index":434,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["undefined",{"_index":293,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"classes/CreateUtilisateurDto.html":{},"controllers/ImagesController.html":{},"controllers/UtilisateursController.html":{}}}],["undefined})@apiconsumes('multipart/form",{"_index":578,"title":{},"body":{"controllers/ImagesController.html":{}}}],["under",{"_index":1525,"title":{},"body":{"license.html":{}}}],["une",{"_index":599,"title":{},"body":{"controllers/ImagesController.html":{},"controllers/PasswordResetController.html":{}}}],["union",{"_index":1520,"title":{},"body":{"license.html":{}}}],["unique",{"_index":997,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["unit",{"_index":1466,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":104,"title":{},"body":{"injectables/AlertService.html":{},"controllers/AppController.html":{},"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/JwtStrategy.html":{},"controllers/PagesController.html":{},"controllers/PasswordResetController.html":{},"injectables/PasswordResetService.html":{},"injectables/UtilisateursService.html":{},"controllers/VisitorController.html":{},"injectables/VisitorService.html":{}}}],["unless",{"_index":1729,"title":{},"body":{"license.html":{}}}],["unlicensed",{"_index":1869,"title":{},"body":{"properties.html":{}}}],["up",{"_index":151,"title":{},"body":{"controllers/AppController.html":{}}}],["update",{"_index":287,"title":{},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"controllers/MessagesController.html":{},"injectables/MessagesService.html":{},"controllers/PagesController.html":{},"injectables/PagesService.html":{},"controllers/UtilisateursController.html":{},"injectables/UtilisateursService.html":{},"injectables/VisitorCounterMiddleware.html":{}}}],["update(@param('id",{"_index":875,"title":{},"body":{"controllers/MessagesController.html":{},"controllers/VisitorController.html":{}}}],["update(id",{"_index":309,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/MessagesController.html":{},"injectables/MessagesService.html":{},"controllers/PagesController.html":{},"injectables/PagesService.html":{},"controllers/UtilisateursController.html":{},"injectables/UtilisateursService.html":{}}}],["updatealertdto",{"_index":52,"title":{"classes/UpdateAlertDto.html":{}},"body":{"controllers/AlertController.html":{},"injectables/AlertService.html":{},"classes/UpdateAlertDto.html":{},"coverage.html":{}}}],["updatearticle",{"_index":351,"title":{},"body":{"injectables/ArticleService.html":{}}}],["updatearticle(id",{"_index":360,"title":{},"body":{"injectables/ArticleService.html":{}}}],["updatearticledto",{"_index":310,"title":{"classes/UpdateArticleDto.html":{}},"body":{"controllers/ArticleController.html":{},"injectables/ArticleService.html":{},"classes/UpdateArticleDto.html":{},"coverage.html":{}}}],["updatearticleimg",{"_index":352,"title":{},"body":{"injectables/ArticleService.html":{}}}],["updatearticleimg(url",{"_index":362,"title":{},"body":{"injectables/ArticleService.html":{}}}],["updatearticleimg_url",{"_index":353,"title":{},"body":{"injectables/ArticleService.html":{}}}],["updatearticleimg_url(id",{"_index":366,"title":{},"body":{"injectables/ArticleService.html":{}}}],["updatedat",{"_index":456,"title":{},"body":{"classes/CreateAlertDto.html":{}}}],["updateimagedto",{"_index":1154,"title":{"classes/UpdateImageDto.html":{}},"body":{"classes/UpdateImageDto.html":{},"coverage.html":{}}}],["updatemessagedto",{"_index":862,"title":{"classes/UpdateMessageDto.html":{}},"body":{"controllers/MessagesController.html":{},"injectables/MessagesService.html":{},"classes/UpdateMessageDto.html":{},"coverage.html":{}}}],["updatemessagedto.content",{"_index":900,"title":{},"body":{"injectables/MessagesService.html":{}}}],["updatepage",{"_index":946,"title":{},"body":{"injectables/PagesService.html":{}}}],["updatepagedto",{"_index":913,"title":{"classes/UpdatePageDto.html":{}},"body":{"controllers/PagesController.html":{},"injectables/PagesService.html":{},"classes/UpdatePageDto.html":{},"coverage.html":{}}}],["updatepassword",{"_index":1253,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["updatepassword(id",{"_index":1269,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["updatepasswordutilisateurdto",{"_index":1165,"title":{"classes/UpdatePasswordUtilisateurDto.html":{}},"body":{"classes/UpdatePasswordUtilisateurDto.html":{},"controllers/UtilisateursController.html":{},"injectables/UtilisateursService.html":{},"coverage.html":{}}}],["updatepasswordutilisateurdto.ancien_mot_de_passe",{"_index":1314,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["updatepasswordutilisateurdto.nouveau_mot_de_passe",{"_index":1317,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["updateutilisateurdto",{"_index":1170,"title":{"classes/UpdateUtilisateurDto.html":{}},"body":{"classes/UpdateUtilisateurDto.html":{},"controllers/UtilisateursController.html":{},"injectables/UtilisateursService.html":{},"coverage.html":{}}}],["updatevisitordto",{"_index":1178,"title":{"classes/UpdateVisitorDto.html":{}},"body":{"classes/UpdateVisitorDto.html":{},"controllers/VisitorController.html":{},"coverage.html":{}}}],["uploadedfile",{"_index":581,"title":{},"body":{"controllers/ImagesController.html":{}}}],["uploadimage",{"_index":564,"title":{},"body":{"controllers/ImagesController.html":{}}}],["uploadimage(@uploadedfile",{"_index":635,"title":{},"body":{"controllers/ImagesController.html":{}}}],["uploadimage(file",{"_index":575,"title":{},"body":{"controllers/ImagesController.html":{}}}],["url",{"_index":365,"title":{},"body":{"injectables/ArticleService.html":{},"controllers/ImagesController.html":{},"injectables/ImagesService.html":{},"injectables/MailService.html":{},"injectables/PrismaService.html":{}}}],["url_img",{"_index":389,"title":{},"body":{"injectables/ArticleService.html":{},"classes/CreateArticleDto.html":{},"classes/CreatePageDto.html":{},"injectables/ImagesService.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdatePageDto.html":{}}}],["url_video",{"_index":476,"title":{},"body":{"classes/CreateArticleDto.html":{},"classes/CreatePageDto.html":{},"classes/UpdateArticleDto.html":{},"classes/UpdatePageDto.html":{}}}],["use",{"_index":1341,"title":{},"body":{"injectables/VisitorCounterMiddleware.html":{},"license.html":{}}}],["use(req",{"_index":1343,"title":{},"body":{"injectables/VisitorCounterMiddleware.html":{}}}],["usefactory",{"_index":802,"title":{},"body":{"modules/MailModule.html":{}}}],["useguards",{"_index":169,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"controllers/MessagesController.html":{},"controllers/PagesController.html":{},"controllers/PasswordResetController.html":{},"controllers/UtilisateursController.html":{}}}],["useguards(jwtauthguard",{"_index":214,"title":{},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"controllers/PagesController.html":{},"controllers/PasswordResetController.html":{},"controllers/UtilisateursController.html":{}}}],["useguards(localauthguard",{"_index":195,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(localauthguard)@post('auth/login')@apioperation({summary",{"_index":131,"title":{},"body":{"controllers/AppController.html":{}}}],["useinterceptors",{"_index":582,"title":{},"body":{"controllers/ImagesController.html":{}}}],["user",{"_index":123,"title":{},"body":{"controllers/AppController.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"guards/RoleGuard.html":{},"injectables/UtilisateursService.html":{},"classes/passwordForgotDto.html":{},"miscellaneous/variables.html":{}}}],["user.email",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MailService.html":{}}}],["user.id",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UtilisateursService.html":{}}}],["user.mot_de_passe",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UtilisateursService.html":{}}}],["user.nom",{"_index":849,"title":{},"body":{"injectables/MailService.html":{}}}],["user.role",{"_index":385,"title":{},"body":{"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"guards/RoleGuard.html":{}}}],["user.sub",{"_index":380,"title":{},"body":{"injectables/ArticleService.html":{}}}],["user_not_found_error",{"_index":1275,"title":{},"body":{"injectables/UtilisateursService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userdata",{"_index":1301,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["userid",{"_index":767,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["username",{"_index":778,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["usernamefield",{"_index":780,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["users/nathancuvelier/mlv_back/src/mail/templates",{"_index":815,"title":{},"body":{"modules/MailModule.html":{}}}],["usersservice",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{}}}],["using",{"_index":638,"title":{},"body":{"controllers/ImagesController.html":{},"license.html":{}}}],["utilisateur",{"_index":988,"title":{"classes/Utilisateur.html":{}},"body":{"controllers/PasswordResetController.html":{},"classes/Utilisateur.html":{},"injectables/UtilisateursService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["utilisateur.dto",{"_index":181,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/MailService.html":{},"classes/UpdatePasswordUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"controllers/UtilisateursController.html":{},"injectables/UtilisateursService.html":{}}}],["utilisateur.dto.ts",{"_index":522,"title":{},"body":{"classes/CreateUtilisateurDto.html":{},"classes/UpdatePasswordUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{},"coverage.html":{}}}],["utilisateur.dto.ts:10",{"_index":1175,"title":{},"body":{"classes/UpdateUtilisateurDto.html":{}}}],["utilisateur.dto.ts:11",{"_index":1169,"title":{},"body":{"classes/UpdatePasswordUtilisateurDto.html":{}}}],["utilisateur.dto.ts:12",{"_index":1172,"title":{},"body":{"classes/UpdateUtilisateurDto.html":{}}}],["utilisateur.dto.ts:14",{"_index":547,"title":{},"body":{"classes/CreateUtilisateurDto.html":{},"classes/UpdateUtilisateurDto.html":{}}}],["utilisateur.dto.ts:16",{"_index":1176,"title":{},"body":{"classes/UpdateUtilisateurDto.html":{}}}],["utilisateur.dto.ts:18",{"_index":1173,"title":{},"body":{"classes/UpdateUtilisateurDto.html":{}}}],["utilisateur.dto.ts:19",{"_index":550,"title":{},"body":{"classes/CreateUtilisateurDto.html":{}}}],["utilisateur.dto.ts:20",{"_index":1171,"title":{},"body":{"classes/UpdateUtilisateurDto.html":{}}}],["utilisateur.dto.ts:24",{"_index":537,"title":{},"body":{"classes/CreateUtilisateurDto.html":{}}}],["utilisateur.dto.ts:29",{"_index":542,"title":{},"body":{"classes/CreateUtilisateurDto.html":{}}}],["utilisateur.dto.ts:35",{"_index":553,"title":{},"body":{"classes/CreateUtilisateurDto.html":{}}}],["utilisateur.dto.ts:41",{"_index":545,"title":{},"body":{"classes/CreateUtilisateurDto.html":{}}}],["utilisateur.dto.ts:46",{"_index":535,"title":{},"body":{"classes/CreateUtilisateurDto.html":{}}}],["utilisateur.dto.ts:47",{"_index":551,"title":{},"body":{"classes/CreateUtilisateurDto.html":{}}}],["utilisateur.dto.ts:8",{"_index":1174,"title":{},"body":{"classes/UpdateUtilisateurDto.html":{}}}],["utilisateur.dto.ts:9",{"_index":539,"title":{},"body":{"classes/CreateUtilisateurDto.html":{},"classes/UpdatePasswordUtilisateurDto.html":{}}}],["utilisateurs",{"_index":1197,"title":{},"body":{"controllers/UtilisateursController.html":{},"injectables/UtilisateursService.html":{}}}],["utilisateurs.controller",{"_index":1248,"title":{},"body":{"modules/UtilisateursModule.html":{}}}],["utilisateurs.service",{"_index":1226,"title":{},"body":{"controllers/UtilisateursController.html":{},"modules/UtilisateursModule.html":{}}}],["utilisateurs/dto/create",{"_index":180,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/MailService.html":{}}}],["utilisateurs/utilisateurs.module",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["utilisateurs/utilisateurs.service",{"_index":414,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/PasswordResetController.html":{},"injectables/PasswordResetService.html":{}}}],["utilisateurscontroller",{"_index":1195,"title":{"controllers/UtilisateursController.html":{}},"body":{"controllers/UtilisateursController.html":{},"modules/UtilisateursModule.html":{},"coverage.html":{}}}],["utilisateursmodule",{"_index":249,"title":{"modules/UtilisateursModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UtilisateursModule.html":{},"modules.html":{},"overview.html":{}}}],["utilisateursservice",{"_index":402,"title":{"injectables/UtilisateursService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/PasswordResetController.html":{},"injectables/PasswordResetService.html":{},"controllers/UtilisateursController.html":{},"modules/UtilisateursModule.html":{},"injectables/UtilisateursService.html":{},"coverage.html":{},"overview.html":{}}}],["utiliser",{"_index":1100,"title":{},"body":{"injectables/PrismaService.html":{}}}],["uuid",{"_index":595,"title":{},"body":{"controllers/ImagesController.html":{},"classes/Utilisateur.html":{},"injectables/UtilisateursService.html":{},"dependencies.html":{}}}],["uuidv4",{"_index":594,"title":{},"body":{"controllers/ImagesController.html":{},"injectables/UtilisateursService.html":{}}}],["v4",{"_index":593,"title":{},"body":{"controllers/ImagesController.html":{},"injectables/UtilisateursService.html":{}}}],["validate",{"_index":751,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":753,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(username",{"_index":776,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validateuser",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(email",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":1152,"title":{},"body":{"classes/UpdateArticleDto.html":{},"dependencies.html":{}}}],["value",{"_index":679,"title":{},"body":{"injectables/ImagesService.html":{},"controllers/PagesController.html":{},"injectables/VisitorService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1387,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1873,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verbal",{"_index":1605,"title":{},"body":{"license.html":{}}}],["verifier",{"_index":1310,"title":{},"body":{"injectables/UtilisateursService.html":{}}}],["verify",{"_index":730,"title":{},"body":{"injectables/ImagesService.html":{}}}],["verifyimageorpageexist",{"_index":673,"title":{},"body":{"injectables/ImagesService.html":{}}}],["verifyimageorpageexist(id",{"_index":690,"title":{},"body":{"injectables/ImagesService.html":{}}}],["verifytoken",{"_index":1028,"title":{},"body":{"injectables/PasswordResetService.html":{}}}],["verifytoken(token",{"_index":1034,"title":{},"body":{"injectables/PasswordResetService.html":{}}}],["version",{"_index":1497,"title":{},"body":{"license.html":{},"properties.html":{}}}],["visitor",{"_index":194,"title":{"classes/Visitor.html":{}},"body":{"controllers/AppController.html":{},"classes/Visitor.html":{},"controllers/VisitorController.html":{},"injectables/VisitorCounterMiddleware.html":{},"injectables/VisitorService.html":{},"coverage.html":{}}}],["visitor.controller",{"_index":1363,"title":{},"body":{"modules/VisitorModule.html":{}}}],["visitor.dto",{"_index":1180,"title":{},"body":{"classes/UpdateVisitorDto.html":{}}}],["visitor.dto.ts",{"_index":556,"title":{},"body":{"classes/CreateVisitorDto.html":{},"classes/UpdateVisitorDto.html":{},"coverage.html":{}}}],["visitor.service",{"_index":1330,"title":{},"body":{"controllers/VisitorController.html":{},"modules/VisitorModule.html":{}}}],["visitor.visits",{"_index":1357,"title":{},"body":{"injectables/VisitorCounterMiddleware.html":{},"injectables/VisitorService.html":{}}}],["visitor/visitorcountmiddleware.middleware",{"_index":191,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["visitorcontroller",{"_index":1324,"title":{"controllers/VisitorController.html":{}},"body":{"controllers/VisitorController.html":{},"modules/VisitorModule.html":{},"coverage.html":{}}}],["visitorcount",{"_index":1349,"title":{},"body":{"injectables/VisitorCounterMiddleware.html":{},"injectables/VisitorService.html":{}}}],["visitorcountermiddleware",{"_index":190,"title":{"injectables/VisitorCounterMiddleware.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/VisitorCounterMiddleware.html":{},"coverage.html":{},"overview.html":{}}}],["visitormodule",{"_index":1359,"title":{"modules/VisitorModule.html":{}},"body":{"modules/VisitorModule.html":{},"modules.html":{},"overview.html":{}}}],["visitors",{"_index":1356,"title":{},"body":{"injectables/VisitorCounterMiddleware.html":{},"injectables/VisitorService.html":{}}}],["visitors.reduce((acc",{"_index":1371,"title":{},"body":{"injectables/VisitorService.html":{}}}],["visitorservice",{"_index":1329,"title":{"injectables/VisitorService.html":{}},"body":{"controllers/VisitorController.html":{},"modules/VisitorModule.html":{},"injectables/VisitorService.html":{},"coverage.html":{},"overview.html":{}}}],["visits",{"_index":1352,"title":{},"body":{"injectables/VisitorCounterMiddleware.html":{}}}],["void",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"classes/PrismaClientExceptionFilter.html":{},"injectables/VisitorCounterMiddleware.html":{}}}],["vérifiez",{"_index":982,"title":{},"body":{"controllers/PasswordResetController.html":{}}}],["warranties",{"_index":1760,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1754,"title":{},"body":{"license.html":{}}}],["watch",{"_index":1461,"title":{},"body":{"index.html":{}}}],["website",{"_index":1491,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":836,"title":{},"body":{"injectables/MailService.html":{}}}],["wherever",{"_index":1709,"title":{},"body":{"license.html":{}}}],["whether",{"_index":1537,"title":{},"body":{"license.html":{}}}],["whole",{"_index":1588,"title":{},"body":{"license.html":{}}}],["width",{"_index":706,"title":{},"body":{"injectables/ImagesService.html":{}}}],["within",{"_index":1628,"title":{},"body":{"license.html":{}}}],["without",{"_index":1682,"title":{},"body":{"license.html":{}}}],["work",{"_index":1568,"title":{},"body":{"license.html":{}}}],["works",{"_index":1580,"title":{},"body":{"license.html":{}}}],["world",{"_index":282,"title":{},"body":{"injectables/AppService.html":{}}}],["worldwide",{"_index":1634,"title":{},"body":{"license.html":{}}}],["writestream",{"_index":715,"title":{},"body":{"injectables/ImagesService.html":{}}}],["writestream.end",{"_index":718,"title":{},"body":{"injectables/ImagesService.html":{}}}],["writestream.write(compressedimage",{"_index":717,"title":{},"body":{"injectables/ImagesService.html":{}}}],["writing",{"_index":1623,"title":{},"body":{"license.html":{}}}],["written",{"_index":1606,"title":{},"body":{"license.html":{}}}],["ws",{"_index":1405,"title":{},"body":{"dependencies.html":{}}}],["you'd",{"_index":1480,"title":{},"body":{"index.html":{}}}],["yyyy",{"_index":1844,"title":{},"body":{"license.html":{}}}],["zoom",{"_index":82,"title":{},"body":{"modules/AlertModule.html":{},"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/ImagesModule.html":{},"modules/MailModule.html":{},"modules/MessagesModule.html":{},"modules/PagesModule.html":{},"modules/PrismaModule.html":{},"modules/UtilisateursModule.html":{},"modules/VisitorModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Alert.html":{"url":"classes/Alert.html","title":"class - Alert","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Alert\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/alert/entities/alert.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Alert {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AlertController.html":{"url":"controllers/AlertController.html","title":"controller - AlertController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AlertController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/alert/alert.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                alert\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createAlertDto: CreateAlertDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/alert/alert.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createAlertDto\n                                    \n                                                CreateAlertDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('alerts')\n                \n            \n\n            \n                \n                    Defined in src/alert/alert.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/alert/alert.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/alert/alert.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param, Delete } from '@nestjs/common';\nimport { AlertService } from './alert.service';\nimport { CreateAlertDto } from './dto/create-alert.dto';\nimport { UpdateAlertDto } from './dto/update-alert.dto';\nimport { alert } from '@prisma/client';\nimport { ApiQuery, ApiTags } from '@nestjs/swagger';\n@Controller('alert')\n@ApiTags('Alert')\nexport class AlertController {\n  constructor(private readonly alertService: AlertService) {}\n\n  @Post()\n  create(@Body() createAlertDto: CreateAlertDto) {\n    return this.alertService.createAlert(createAlertDto);\n  }\n\n  @Get('alerts')\n  findAll() {\n    return this.alertService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.alertService.findOne(+id);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.alertService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AlertModule.html":{"url":"modules/AlertModule.html","title":"module - AlertModule","body":"\n                   \n\n\n\n\n    Modules\n    AlertModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AlertModule\n\n\n\ncluster_AlertModule_providers\n\n\n\n\nAlertService\n\nAlertService\n\n\n\nAlertModule\n\nAlertModule\n\nAlertModule -->\n\nAlertService->AlertModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAlertModule -->\n\nPrismaService->AlertModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/alert/alert.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AlertService\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AlertController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AlertService } from './alert.service';\nimport { AlertController } from './alert.controller';\nimport { PrismaService } from '../prisma/prisma.service';\n\n@Module({\n  controllers: [AlertController],\n  providers: [AlertService, PrismaService],\n})\nexport class AlertModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AlertService.html":{"url":"injectables/AlertService.html","title":"injectable - AlertService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AlertService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/alert/alert.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createAlert\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/alert/alert.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createAlert\n                        \n                    \n                \n            \n            \n                \n                    \n                    createAlert(data: CreateAlertDto)\n                \n            \n\n\n            \n                \n                    Defined in src/alert/alert.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateAlertDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/alert/alert.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/alert/alert.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/alert/alert.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateAlertDto } from './dto/create-alert.dto';\nimport { UpdateAlertDto } from './dto/update-alert.dto';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { Prisma, alert } from '@prisma/client';\n\n@Injectable()\nexport class AlertService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async findAll(): Promise {\n    return this.prisma.alert.findMany();\n  }\n\n  async findOne(id: number) {\n    return this.prisma.alert.findUnique({ where: { id } });\n  }\n\n  async remove(id: number) {\n    return this.prisma.alert.delete({ where: { id } });\n  }\n\n  async createAlert(data: CreateAlertDto): Promise {\n    return this.prisma.alert.create({ data: data });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getProfile\n                            \n                            \n                                index\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                    Async\n                                signUpAdministrateur\n                            \n                            \n                                    Async\n                                signUpConseiller\n                            \n                            \n                                    Async\n                                signUpJeune\n                            \n                            \n                                    Async\n                                signUpModerateur\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getProfile\n                        \n                    \n                \n            \n            \n                \ngetProfile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(RolesEnum.conseiller)@UseGuards(JwtAuthGuard, RoleGuard)@Get('profile')@ApiOperation({summary: 'Get the current user profile'})\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        index\n                        \n                    \n                \n            \n            \n                \nindex(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req, res)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(LocalAuthGuard)@Post('auth/login')@ApiOperation({summary: 'Login with email and password'})@ApiBody({type: LoginDto})@ApiResponse({status: 200, description: 'Logged in successfully'})@ApiResponse({status: 401, description: 'Unauthorized'})\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                    \n                    logout(res)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('auth/logout')@ApiOperation({summary: 'Log out the current user'})\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signUpAdministrateur\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUpAdministrateur(user: CreateUtilisateurDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(RolesEnum.administrateur)@UseGuards(JwtAuthGuard, RoleGuard)@Post('auth/signup/administrateur')@ApiOperation({summary: 'Sign up a new administrateur'})\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                CreateUtilisateurDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signUpConseiller\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUpConseiller(user: CreateUtilisateurDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(RolesEnum.administrateur)@UseGuards(JwtAuthGuard, RoleGuard)@Post('auth/signup/conseiller')@ApiOperation({summary: 'Sign up a new conseiller'})\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                CreateUtilisateurDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signUpJeune\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUpJeune(user: CreateUtilisateurDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('auth/signup/jeune')@ApiOperation({summary: 'Sign up a new jeune'})\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                CreateUtilisateurDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signUpModerateur\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUpModerateur(user: CreateUtilisateurDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(RolesEnum.administrateur)@UseGuards(JwtAuthGuard, RoleGuard)@Post('auth/signup/moderateur')@ApiOperation({summary: 'Sign up a new moderateur'})\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                CreateUtilisateurDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Post,\n  Query,\n  Request,\n  Res,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthService } from './auth/auth.service';\nimport { LocalAuthGuard } from './auth/guard/local-auth.guard';\nimport { ApiBody, ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { LoginDto } from './auth/dto/login.dto';\nimport { CreateUtilisateurDto } from './utilisateurs/dto/create-utilisateur.dto';\nimport { JwtAuthGuard } from './auth/guard/jwt-auth.guard';\nimport { Roles } from './auth/roles/roles.decorator';\nimport { RoleGuard } from './auth/role/role.guard';\nimport { RolesEnum } from './enum/roles.enum';\nimport { VisitorCounterMiddleware } from './visitor/visitorCountMiddleware.middleware';\n\n@ApiTags('auth')\n@Controller()\nexport class AppController {\n  constructor(\n    private readonly visitor: VisitorCounterMiddleware,\n    private readonly authService: AuthService,\n  ) {}\n\n  @UseGuards(LocalAuthGuard)\n  @Post('auth/login')\n  @ApiOperation({ summary: 'Login with email and password' })\n  @ApiBody({\n    type: LoginDto,\n  })\n  @ApiResponse({ status: 200, description: 'Logged in successfully' })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  async login(@Request() req, @Res() res) {\n    //save token in cookie\n    const token = await this.authService.login(req.user);\n    res.cookie('jwt', token.access_token, { httpOnly: true });\n    return res.send(token);\n  }\n\n  @Roles(RolesEnum.administrateur)\n  @UseGuards(JwtAuthGuard, RoleGuard)\n  @Post('auth/signup/conseiller')\n  @ApiOperation({ summary: 'Sign up a new conseiller' })\n  async signUpConseiller(@Body() user: CreateUtilisateurDto) {\n    await this.authService.register(user, RolesEnum.conseiller);\n  }\n  @Roles(RolesEnum.administrateur)\n  @UseGuards(JwtAuthGuard, RoleGuard)\n  @Post('auth/signup/moderateur')\n  @ApiOperation({ summary: 'Sign up a new moderateur' })\n  async signUpModerateur(@Body() user: CreateUtilisateurDto) {\n    await this.authService.register(user, RolesEnum.moderateur);\n  }\n\n  @Post('auth/signup/jeune')\n  @ApiOperation({ summary: 'Sign up a new jeune' })\n  async signUpJeune(@Body() user: CreateUtilisateurDto) {\n    await this.authService.register(user, RolesEnum.jeune);\n  }\n  @Roles(RolesEnum.administrateur)\n  @UseGuards(JwtAuthGuard, RoleGuard)\n  @Post('auth/signup/administrateur')\n  @ApiOperation({ summary: 'Sign up a new administrateur' })\n  async signUpAdministrateur(@Body() user: CreateUtilisateurDto) {\n    await this.authService.register(user, RolesEnum.administrateur);\n  }\n\n  @Roles(RolesEnum.conseiller)\n  @UseGuards(JwtAuthGuard, RoleGuard)\n  @Get('profile')\n  @ApiOperation({ summary: 'Get the current user profile' })\n  getProfile(@Request() req) {\n    return req.user;\n  }\n\n  @Post('auth/logout')\n  @ApiOperation({ summary: 'Log out the current user' })\n  async logout(@Res() res) {\n    res.clearCookie('jwt');\n    return res.send({ message: 'Logout' });\n  }\n\n  @Get()\n  index(@Request() req) {\n    return this.visitor.use;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAlertModule\n\nAlertModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAlertModule->AppModule\n\n\n\n\n\nArticleModule\n\nArticleModule\n\nAppModule -->\n\nArticleModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nImagesModule\n\nImagesModule\n\nAppModule -->\n\nImagesModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nMessagesModule\n\nMessagesModule\n\nAppModule -->\n\nMessagesModule->AppModule\n\n\n\n\n\nPagesModule\n\nPagesModule\n\nAppModule -->\n\nPagesModule->AppModule\n\n\n\n\n\nUtilisateursModule\n\nUtilisateursModule\n\nAppModule -->\n\nUtilisateursModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAppModule -->\n\nPrismaService->AppModule\n\n\n\n\n\nVisitorCounterMiddleware\n\nVisitorCounterMiddleware\n\nAppModule -->\n\nVisitorCounterMiddleware->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            PrismaService\n                        \n                        \n                            VisitorCounterMiddleware\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AlertModule\n                        \n                        \n                            ArticleModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            ImagesModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            MessagesModule\n                        \n                        \n                            PagesModule\n                        \n                        \n                            UtilisateursModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MiddlewareConsumer, Module, NestModule } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UtilisateursModule } from './utilisateurs/utilisateurs.module';\nimport { PrismaService } from './prisma/prisma.service';\nimport { PagesModule } from './pages/pages.module';\nimport { AuthModule } from './auth/auth.module';\nimport { ArticleModule } from './article/article.module';\nimport { MailModule } from './mail/mail.module';\nimport { ConfigModule } from '@nestjs/config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { MessagesModule } from './messages/messages.module';\nimport { ImagesModule } from './images/images.module';\nimport { AlertModule } from './alert/alert.module';\nimport { VisitorCounterMiddleware } from './visitor/visitorCountMiddleware.middleware';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n    }),\n    JwtModule,\n    UtilisateursModule,\n    ArticleModule,\n    PagesModule,\n    AuthModule,\n    MailModule,\n    MessagesModule,\n    ImagesModule,\n    AlertModule,\n  ],\n  controllers: [AppController],\n  providers: [PrismaService, AppService, VisitorCounterMiddleware],\n})\nexport class AppModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(VisitorCounterMiddleware).forRoutes('*');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Article.html":{"url":"classes/Article.html","title":"class - Article","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Article\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/article/entities/article.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Article {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ArticleController.html":{"url":"controllers/ArticleController.html","title":"controller - ArticleController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ArticleController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/article/article.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                article\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(req, createArticleDto: CreateArticleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(RolesEnum.conseiller, RolesEnum.moderateur, RolesEnum.administrateur)@UseGuards(JwtAuthGuard, RoleGuard)@Post('create-article')@ApiResponse({content: undefined, headers: undefined, isArray: false, links: undefined, schema: undefined, type: undefined, status: 200, description: 'The article has been successfully created.'})\n                \n            \n\n            \n                \n                    Defined in src/article/article.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createArticleDto\n                                    \n                                                CreateArticleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('articles')\n                \n            \n\n            \n                \n                    Defined in src/article/article.controller.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(RolesEnum.conseiller, RolesEnum.moderateur, RolesEnum.administrateur)@UseGuards(JwtAuthGuard, RoleGuard)@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/article/article.controller.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(RolesEnum.conseiller, RolesEnum.moderateur, RolesEnum.administrateur)@UseGuards(JwtAuthGuard, RoleGuard)@Delete(':id')@ApiQuery({name: 'role', enum: RolesEnum})\n                \n            \n\n            \n                \n                    Defined in src/article/article.controller.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateArticleDto: UpdateArticleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(RolesEnum.conseiller, RolesEnum.moderateur, RolesEnum.administrateur)@UseGuards(JwtAuthGuard, RoleGuard)@Patch(':id')@ApiQuery({name: 'role', enum: RolesEnum})\n                \n            \n\n            \n                \n                    Defined in src/article/article.controller.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateArticleDto\n                                    \n                                                UpdateArticleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Request,\n  Patch,\n  Post,\n  UseGuards,\n  Query,\n} from '@nestjs/common';\nimport { ArticleService } from './article.service';\nimport { CreateArticleDto } from './dto/create-article.dto';\nimport { UpdateArticleDto } from './dto/update-article.dto';\nimport { Roles } from '../auth/roles/roles.decorator';\nimport { JwtAuthGuard } from '../auth/guard/jwt-auth.guard';\nimport { RoleGuard } from '../auth/role/role.guard';\nimport { ApiBearerAuth, ApiQuery, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { RolesEnum } from '../enum/roles.enum';\n\n@Controller('article')\n@ApiBearerAuth()\n@ApiTags('Article')\nexport class ArticleController {\n  constructor(private articleService: ArticleService) {}\n\n  @Roles(RolesEnum.conseiller, RolesEnum.moderateur, RolesEnum.administrateur)\n  @UseGuards(JwtAuthGuard, RoleGuard)\n  @Post('create-article')\n  @ApiResponse({\n    content: undefined,\n    headers: undefined,\n    isArray: false,\n    links: undefined,\n    schema: {\n      $ref: '#/components/schemas/Article',\n      //one response 400\n      //one response 500\n      //one response 401\n      //one response 403\n      //one response 404\n    },\n    type: undefined,\n    status: 200,\n    description: 'The article has been successfully created.',\n  })\n  async create(@Request() req, @Body() createArticleDto: CreateArticleDto) {\n    //find token in header req\n    await this.articleService.createArticle(createArticleDto, req.cookies.jwt);\n    //return success message\n    return {\n      message: 'Article created successfully',\n      StatusCode: 200,\n    };\n  }\n\n  @Get('articles')\n  findAll() {\n    return this.articleService.findAll();\n  }\n\n  @Roles(RolesEnum.conseiller, RolesEnum.moderateur, RolesEnum.administrateur)\n  @UseGuards(JwtAuthGuard, RoleGuard)\n  @Get(':id')\n  async findOne(@Param('id') id: string) {\n    return this.articleService.findOne(+id);\n  }\n\n  @Roles(RolesEnum.conseiller, RolesEnum.moderateur, RolesEnum.administrateur)\n  @UseGuards(JwtAuthGuard, RoleGuard)\n  @Patch(':id')\n  @ApiQuery({ name: 'role', enum: RolesEnum })\n  async update(\n    @Param('id') id: string,\n    @Body() updateArticleDto: UpdateArticleDto,\n  ) {\n    return this.articleService.updateArticle(+id, updateArticleDto);\n  }\n\n  @Roles(RolesEnum.conseiller, RolesEnum.moderateur, RolesEnum.administrateur)\n  @UseGuards(JwtAuthGuard, RoleGuard)\n  @Delete(':id')\n  @ApiQuery({ name: 'role', enum: RolesEnum })\n  async remove(@Param('id') id: string) {\n    return this.articleService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ArticleModule.html":{"url":"modules/ArticleModule.html","title":"module - ArticleModule","body":"\n                   \n\n\n\n\n    Modules\n    ArticleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ArticleModule\n\n\n\ncluster_ArticleModule_providers\n\n\n\n\nArticleService\n\nArticleService\n\n\n\nArticleModule\n\nArticleModule\n\nArticleModule -->\n\nArticleService->ArticleModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nArticleModule -->\n\nPrismaService->ArticleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/article/article.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ArticleService\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ArticleController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ArticleService } from './article.service';\nimport { ArticleController } from './article.controller';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\nimport { JwtService } from '@nestjs/jwt';\n\n@Module({\n  controllers: [ArticleController],\n  providers: [ArticleService, PrismaService, JwtService],\n})\nexport class ArticleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ArticleService.html":{"url":"injectables/ArticleService.html","title":"injectable - ArticleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ArticleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/article/article.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createArticle\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                    Async\n                                updateArticle\n                            \n                            \n                                    Async\n                                updateArticleImg\n                            \n                            \n                                updateArticleImg_url\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/article/article.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createArticle\n                        \n                    \n                \n            \n            \n                \n                    \n                    createArticle(createArticleDto: CreateArticleDto, token)\n                \n            \n\n\n            \n                \n                    Defined in src/article/article.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createArticleDto\n                                    \n                                                CreateArticleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    token\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/article/article.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/article/article.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/article/article.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateArticle\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateArticle(id: number, data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/article/article.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateArticleImg\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateArticleImg(url: string, img_url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/article/article.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    img_url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateArticleImg_url\n                        \n                    \n                \n            \n            \n                \nupdateArticleImg_url(id: number, img_url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/article/article.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    img_url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { CreateArticleDto } from './dto/create-article.dto';\nimport { UpdateArticleDto } from './dto/update-article.dto';\nimport { article } from '@prisma/client';\nimport { connect } from 'rxjs';\nimport { RolesEnum } from '../enum/roles.enum';\nimport { JwtService } from '@nestjs/jwt';\nimport { jwtConstants } from '../auth/constants/auth.constants';\n\n@Injectable()\nexport class ArticleService {\n  constructor(\n    private prisma: PrismaService,\n    private readonly jwtService: JwtService,\n  ) {}\n\n  async createArticle(\n    createArticleDto: CreateArticleDto,\n    token,\n  ): Promise {\n    const { ...articleData } = createArticleDto;\n    const article = await this.prisma.article.create({\n      data: articleData,\n    });\n    const id = article.id;\n    // find role and id in token\n    const user = this.jwtService.verify(token, {\n      secret: jwtConstants.secret,\n    });\n    //\n    const id_user: number = user.sub;\n    console.log(user);\n    const conseiller = await this.prisma.conseiller.findUnique({\n      where: { id: id_user },\n    });\n    //create relation between article and user\n    if (\n      user.role == RolesEnum.moderateur ||\n      user.role == RolesEnum.administrateur\n    ) {\n      await this.prisma.redige.create({\n        data: {\n          article: {\n            connect: {\n              id: id,\n            },\n          },\n          conseiller: {\n            connect: conseiller ? { id: conseiller.id } : undefined,\n            create: conseiller ? undefined : { id: id_user },\n          },\n        },\n      });\n    }\n\n    return article;\n  }\n\n  async updateArticle(id: number, data: any) {\n    return this.prisma.article.update({\n      where: { id: id },\n      data: data,\n    });\n  }\n\n  //update where url_img\n  async updateArticleImg(url: string, img_url: string) {\n    return this.prisma.article.update({\n      where: { url_img: url },\n      data: { url_img: img_url },\n    });\n  }\n  updateArticleImg_url(id: number, img_url: string): Promise {\n    return this.prisma.article.update({\n      where: { id: id },\n      data: { url_img: img_url },\n    });\n  }\n  findOne(id: number): Promise {\n    return this.prisma.article.findUnique({\n      where: { id: id },\n    });\n  }\n  findAll(): Promise {\n    return this.prisma.article.findMany();\n  }\n  remove(id: number): Promise {\n    return this.prisma.article.delete({\n      where: { id: id },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Auth.html":{"url":"classes/Auth.html","title":"class - Auth","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Auth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/entities/auth.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Auth {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nUtilisateursModule\n\nUtilisateursModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUtilisateursModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nPasswordResetService\n\nPasswordResetService\n\nAuthModule -->\n\nPasswordResetService->AuthModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAuthModule -->\n\nPrismaService->AuthModule\n\n\n\n\n\nUtilisateursService\n\nUtilisateursService\n\nAuthModule -->\n\nUtilisateursService->AuthModule\n\n\n\n\n\nVisitorCounterMiddleware\n\nVisitorCounterMiddleware\n\nAuthModule -->\n\nVisitorCounterMiddleware->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                        \n                            PasswordResetService\n                        \n                        \n                            PrismaService\n                        \n                        \n                            UtilisateursService\n                        \n                        \n                            VisitorCounterMiddleware\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            PasswordResetController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UtilisateursModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { jwtConstants } from './constants/auth.constants';\nimport { LocalStrategy } from './strategy/local.strategy';\nimport { JwtStrategy } from './strategy/jwt.strategy';\nimport { AppController } from '../app.controller';\nimport { UtilisateursModule } from '../utilisateurs/utilisateurs.module';\nimport { PasswordResetController } from './password-reset/password-reset.controller';\nimport { PasswordResetService } from './password-reset/password-reset.service';\nimport { UtilisateursService } from '../utilisateurs/utilisateurs.service';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { VisitorCounterMiddleware } from 'src/visitor/visitorCountMiddleware.middleware';\n@Module({\n  controllers: [AppController, PasswordResetController],\n  imports: [\n    UtilisateursModule,\n    PassportModule,\n    JwtModule.register({\n      secret: jwtConstants.secret,\n      signOptions: { expiresIn: '7d' },\n    }),\n    \n  ],\n  providers: [\n    PrismaService,\n    AuthService,\n    LocalStrategy,\n    JwtStrategy,\n    PasswordResetService,\n    UtilisateursService,\n    VisitorCounterMiddleware,\n  ],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mailService: MailService, usersService: UtilisateursService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mailService\n                                                  \n                                                        \n                                                                        MailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UtilisateursService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(user: CreateUtilisateurDto, role: RolesEnum)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                CreateUtilisateurDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    role\n                                    \n                                                RolesEnum\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(email: string, pass: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NotFoundException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { UtilisateursService } from '../utilisateurs/utilisateurs.service';\nimport * as bcrypt from 'bcrypt';\nimport { MailService } from '../mail/mail.service';\nimport { CreateUtilisateurDto } from '../utilisateurs/dto/create-utilisateur.dto';\nimport { RolesEnum } from '../enum/roles.enum';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly mailService: MailService,\n    private readonly usersService: UtilisateursService,\n    private readonly jwtService: JwtService,\n  ) {}\n  async register(user: CreateUtilisateurDto, role: RolesEnum): Promise {\n    return await this.usersService.createUtilisateur(user, role);\n  }\n  async validateUser(email: string, pass: string): Promise {\n    const user = await this.usersService.findOneByEmail(email);\n    console.log(user);\n    if (user && bcrypt.compareSync(pass, user.mot_de_passe)) {\n      return user;\n    }\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n    if (!bcrypt.compareSync(pass, user.mot_de_passe)) {\n      throw new UnauthorizedException();\n    }\n  }\n\n  // login with dto\n  async login(user: any): Promise {\n    const payload = { email: user.email, sub: user.id, role: user.role };\n    return {\n      access_token: this.jwtService.sign(payload),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAlertDto.html":{"url":"classes/CreateAlertDto.html","title":"class - CreateAlertDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAlertDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/alert/dto/create-alert.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                message\n                            \n                            \n                                title\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/alert/dto/create-alert.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/alert/dto/create-alert.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/alert/dto/create-alert.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/alert/dto/create-alert.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateAlertDto {\n  @ApiProperty()\n  title: string;\n\n  @ApiProperty()\n  message: string;\n\n  @ApiProperty()\n  createdAt: Date;\n\n  @ApiProperty()\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateArticleDto.html":{"url":"classes/CreateArticleDto.html","title":"class - CreateArticleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateArticleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/article/dto/create-article.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                            \n                                contenu\n                            \n                            \n                                date_creation\n                            \n                            \n                                date_suppression\n                            \n                            \n                                description\n                            \n                            \n                                img_description\n                            \n                            \n                                img_titre\n                            \n                            \n                                meta_title\n                            \n                            \n                                slug\n                            \n                            \n                                sous_titre\n                            \n                            \n                                status\n                            \n                            \n                                tags\n                            \n                            \n                                titre\n                            \n                            \n                                url_img\n                            \n                            \n                                url_video\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/article/dto/create-article.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        contenu\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/article/dto/create-article.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        date_creation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/article/dto/create-article.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        date_suppression\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/article/dto/create-article.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/article/dto/create-article.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        img_description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/article/dto/create-article.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        img_titre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/article/dto/create-article.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        meta_title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/article/dto/create-article.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/article/dto/create-article.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sous_titre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/article/dto/create-article.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/article/dto/create-article.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/article/dto/create-article.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        titre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/article/dto/create-article.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url_img\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/article/dto/create-article.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url_video\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/article/dto/create-article.dto.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nexport class CreateArticleDto {\n  @ApiProperty()\n  titre: string;\n\n  @ApiProperty()\n  date_creation: Date;\n\n  @ApiProperty()\n  date_suppression: Date;\n\n  @ApiProperty()\n  url_img: string;\n\n  @ApiProperty()\n  img_description: string;\n\n  @ApiProperty()\n  img_titre: string;\n\n  @ApiProperty()\n  sous_titre: string;\n\n  @ApiProperty()\n  contenu: string;\n\n  @ApiProperty()\n  description: string;\n\n  @ApiProperty()\n  meta_title: string;\n\n  @ApiProperty()\n  categories: string;\n\n  @ApiProperty()\n  url_video: string;\n\n  @ApiProperty()\n  slug: string;\n\n  @ApiProperty()\n  tags: string;\n\n  @ApiProperty()\n  status: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateImageDto.html":{"url":"classes/CreateImageDto.html","title":"class - CreateImageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateImageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/dto/create-image.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateImageDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateMessageDto.html":{"url":"classes/CreateMessageDto.html","title":"class - CreateMessageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateMessageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/messages/dto/create-message.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                receiverId\n                            \n                            \n                                senderId\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The content of the message', type: String, required: true, example: 'Hello, how are you ?'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/messages/dto/create-message.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        receiverId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the receiver', type: Number, required: true, example: 2})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/messages/dto/create-message.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        senderId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the sender', type: Number, required: true, example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/messages/dto/create-message.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The token of the sender', type: String, required: true, example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im5hdGhhbmN1dmVsaWVyNTlAZ21haWwuY29tIiwic3ViIjo1Nywicm9sZSI6ImpldW5lIiwiaWF0IjoxNjc3NTgzMzEwLCJleHAiOjc2Nzc1ODMzMTB9.RmczbZR_8jn031IVbuepZ1x3K25RYaTD-j60ZqqHAS4'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/messages/dto/create-message.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateMessageDto {\n  @ApiProperty({\n    description: 'The content of the message',\n    type: String,\n    required: true,\n    example: 'Hello, how are you ?',\n  })\n  content: string;\n  @ApiProperty({\n    description: 'The token of the sender',\n    type: String,\n    required: true,\n    example:\n      'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im5hdGhhbmN1dmVsaWVyNTlAZ21haWwuY29tIiwic3ViIjo1Nywicm9sZSI6ImpldW5lIiwiaWF0IjoxNjc3NTgzMzEwLCJleHAiOjc2Nzc1ODMzMTB9.RmczbZR_8jn031IVbuepZ1x3K25RYaTD-j60ZqqHAS4',\n  })\n  token: string;\n  @ApiProperty({\n    description: 'The id of the sender',\n    type: Number,\n    required: true,\n    example: 1,\n  })\n  senderId: number;\n  @ApiProperty({\n    description: 'The id of the receiver',\n    type: Number,\n    required: true,\n    example: 2,\n  })\n  receiverId: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePageDto.html":{"url":"classes/CreatePageDto.html","title":"class - CreatePageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pages/dto/create-page.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contenu\n                            \n                            \n                                meta_title\n                            \n                            \n                                tags\n                            \n                            \n                                url_img\n                            \n                            \n                                url_video\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contenu\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pages/dto/create-page.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        meta_title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pages/dto/create-page.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pages/dto/create-page.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url_img\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pages/dto/create-page.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url_video\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pages/dto/create-page.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreatePageDto {\n  @ApiProperty()\n  contenu: string;\n\n  @ApiProperty()\n  url_img: string;\n\n  @ApiProperty()\n  url_video: string;\n\n  @ApiProperty()\n  meta_title: string;\n\n  @ApiProperty()\n  tags: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUtilisateurDto.html":{"url":"classes/CreateUtilisateurDto.html","title":"class - CreateUtilisateurDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUtilisateurDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utilisateurs/dto/create-utilisateur.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                adresse\n                            \n                            \n                                date_naissance\n                            \n                            \n                                email\n                            \n                            \n                                mot_de_passe\n                            \n                            \n                                nationalite\n                            \n                            \n                                nom\n                            \n                            \n                                prenom\n                            \n                            \n                                role\n                            \n                            \n                                telephone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        adresse\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Adresse postale', example: '1 rue de la paix'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateurs/dto/create-utilisateur.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        date_naissance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Date de naissance', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateurs/dto/create-utilisateur.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Email', example: 'test@{domain}.com'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateurs/dto/create-utilisateur.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mot_de_passe\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Mot de passe', example: 'password'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateurs/dto/create-utilisateur.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nationalite\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Nationalité', example: 'Française'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateurs/dto/create-utilisateur.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Nom', example: 'Dupont'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateurs/dto/create-utilisateur.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prenom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Prénom', example: 'Jean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateurs/dto/create-utilisateur.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RolesEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/utilisateurs/dto/create-utilisateur.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        telephone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'telephone', example: '0606060606'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateurs/dto/create-utilisateur.dto.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiQuery } from '@nestjs/swagger';\nimport { RolesEnum } from '../../enum/roles.enum';\n\nexport class CreateUtilisateurDto {\n  @ApiProperty({\n    description: 'Email',\n    example: 'test@{domain}.com',\n  })\n  email: string;\n  @ApiProperty({\n    description: 'Nom',\n    example: 'Dupont',\n  })\n  nom: string;\n  @ApiProperty({\n    description: 'Prénom',\n    example: 'Jean',\n  })\n  prenom: string;\n  @ApiProperty({\n    description: 'Date de naissance',\n    example: new Date(),\n  })\n  date_naissance: Date;\n  @ApiProperty({\n    description: 'Mot de passe',\n    example: 'password',\n  })\n  mot_de_passe: string;\n\n  @ApiProperty({\n    description: 'telephone',\n    example: '0606060606',\n  })\n  telephone: string;\n\n  @ApiProperty({\n    description: 'Nationalité',\n    example: 'Française',\n  })\n  nationalite: string;\n  @ApiProperty({\n    description: 'Adresse postale',\n    example: '1 rue de la paix',\n  })\n  adresse: string;\n  role: RolesEnum;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateVisitorDto.html":{"url":"classes/CreateVisitorDto.html","title":"class - CreateVisitorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateVisitorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/visitor/dto/create-visitor.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateVisitorDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Image.html":{"url":"classes/Image.html","title":"class - Image","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Image\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/entities/image.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Image {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ImagesController.html":{"url":"controllers/ImagesController.html","title":"controller - ImagesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ImagesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/images.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                images\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                getUrlForDelete\n                            \n                            \n                                    Async\n                                saveUrl\n                            \n                            \n                                    Async\n                                uploadImage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(filename: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('delete/:filename')\n                \n            \n\n            \n                \n                    Defined in src/images/images.controller.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUrlForDelete\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUrlForDelete(imageUrl)\n                \n            \n\n\n            \n                \n                    Defined in src/images/images.controller.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    imageUrl\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        saveUrl\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveUrl(imageUrl: string, element: string, id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/images/images.controller.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    imageUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    element\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        uploadImage\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadImage(file)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upload')@ApiBody({required: true, type: 'multipart/form-data', schema: undefined})@ApiConsumes('multipart/form-data')@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/images/images.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  NotFoundException,\n  Param,\n  Post,\n  UploadedFile,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { ImagesService } from './images.service';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { diskStorage } from 'multer';\nimport { extname } from 'path';\nimport { ApiConsumes, ApiTags, ApiBody } from '@nestjs/swagger';\nimport { v4 as uuidv4 } from 'uuid';\n\n@Controller('images')\n@ApiTags('Images')\nexport class ImagesController {\n  constructor(private readonly imagesService: ImagesService) {}\n\n  // récupere une image, la redimensionne, la compresse puis la sauvegarde\n  // dans le dossier public/images.\n  @Post('upload')\n  @ApiBody({\n    required: true,\n    type: 'multipart/form-data',\n    schema: {\n      type: 'object',\n      properties: {\n        file: {\n          type: 'string',\n          format: 'binary',\n        },\n      },\n    },\n  })\n  @ApiConsumes('multipart/form-data')\n  @UseInterceptors(\n    FileInterceptor('file', {\n      storage: diskStorage({\n        destination: './res/public/images', // externaliser le chemin.\n        filename: (req, file, cb) => {\n          const randomName = uuidv4(); //Array(32)\n          cb(null, `${randomName}${extname(file.originalname)}`);\n        },\n      }),\n      fileFilter: (req, file, cb) => {\n        if (!file.originalname.match(/\\.(jpg|jpeg|png|gif|svg|pdf)$/)) {\n          return cb(new Error('Only image files are allowed!'), false);\n        }\n        cb(null, true);\n      },\n      limits: {\n        fileSize: 4096 * 4096, // limit to 1MB\n      },\n    }),\n  )\n  async uploadImage(@UploadedFile() file) {\n    // Resizing image to 300x300 using sharp module\n    await this.imagesService.compressImage(file, 'jpg'); // Do s// omething with the image (e.g. save it to the database, etc.)\n    await this.imagesService.stockUrl(file.filename, 'article', 2);\n    // Return the image file name and path\n    return {\n      //originalFilename: file.originalname,\n      compressedFilename: `${file.filename}`,\n    };\n  }\n\n  // get url of image or page\n  async getUrlForDelete(imageUrl) {\n    // delete url with correct target\n    await this.imagesService.getForDelete(imageUrl);\n  }\n\n  @Post('delete/:filename')\n  async delete(@Param('filename') filename: string) {\n    const image = await this.imagesService.remove(filename);\n\n    if (image === undefined) {\n      throw new NotFoundException('Image does not exist!');\n    }\n  }\n\n  async saveUrl(imageUrl: string, element: string, id: number) {\n    const url = await this.imagesService.stockUrl(imageUrl, element, id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ImagesModule.html":{"url":"modules/ImagesModule.html","title":"module - ImagesModule","body":"\n                   \n\n\n\n\n    Modules\n    ImagesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ImagesModule\n\n\n\ncluster_ImagesModule_providers\n\n\n\n\nArticleService\n\nArticleService\n\n\n\nImagesModule\n\nImagesModule\n\nImagesModule -->\n\nArticleService->ImagesModule\n\n\n\n\n\nImagesService\n\nImagesService\n\nImagesModule -->\n\nImagesService->ImagesModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nImagesModule -->\n\nPrismaService->ImagesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/images/images.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ArticleService\n                        \n                        \n                            ImagesService\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ImagesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ImagesService } from './images.service';\nimport { ImagesController } from './images.controller';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { ArticleService } from '../article/article.service';\nimport { JwtService } from '@nestjs/jwt';\n\n@Module({\n  controllers: [ImagesController],\n  providers: [ImagesService, PrismaService, ArticleService, JwtService],\n})\nexport class ImagesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ImagesService.html":{"url":"injectables/ImagesService.html","title":"injectable - ImagesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ImagesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/images.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                imagePath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                compressImage\n                            \n                            \n                                    Async\n                                deleteUrl\n                            \n                            \n                                    Async\n                                getForDelete\n                            \n                            \n                                    Async\n                                getUrl\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                stockUrl\n                            \n                            \n                                    Async\n                                verifyImageOrPageExist\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, articleService: ArticleService)\n                    \n                \n                        \n                            \n                                Defined in src/images/images.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        articleService\n                                                  \n                                                        \n                                                                        ArticleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        compressImage\n                        \n                    \n                \n            \n            \n                \n                    \n                    compressImage(file: Express.Multer.File, format: string)\n                \n            \n\n\n            \n                \n                    Defined in src/images/images.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    format\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'jpg'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteUrl\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUrl(imageURL: string)\n                \n            \n\n\n            \n                \n                    Defined in src/images/images.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    imageURL\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getForDelete\n                        \n                    \n                \n            \n            \n                \n                    \n                    getForDelete(imageUrl)\n                \n            \n\n\n            \n                \n                    Defined in src/images/images.service.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    imageUrl\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUrl\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUrl(imageUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in src/images/images.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    imageUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(filename: string)\n                \n            \n\n\n            \n                \n                    Defined in src/images/images.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        stockUrl\n                        \n                    \n                \n            \n            \n                \n                    \n                    stockUrl(imageUrl: string, element: string, id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/images/images.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    imageUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    element\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        verifyImageOrPageExist\n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyImageOrPageExist(id: number, element: string)\n                \n            \n\n\n            \n                \n                    Defined in src/images/images.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    element\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        imagePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : './res/public/images/'\n                    \n                \n                    \n                        \n                                Defined in src/images/images.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport * as fs from 'fs';\nimport { createWriteStream } from 'fs';\nimport * as sharp from 'sharp';\nimport * as path from 'path';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { Article } from '../article/entities/article.entity';\nimport { ArticleService } from '../article/article.service';\n\n@Injectable()\nexport class ImagesService {\n  private readonly imagePath = './res/public/images/';\n\n  constructor(\n    private prisma: PrismaService,\n    private readonly articleService: ArticleService,\n  ) {}\n\n  // compress images\n  async compressImage(file: Express.Multer.File, format = 'jpg') {\n    console.log('compress call debug');\n    const baseDir = './res/public/images/';\n    const filePath = path.join(baseDir, file.filename);\n    const compressedImage = await sharp(file.path)\n      .resize({ width: 200, height: 200 })\n      .jpeg({ quality: 80 }) // compress JPEG images\n      .png({ quality: 80 }) // compress PNG images\n      .gif({ quality: 80 }) // compress GIF images\n      .toFormat(format)\n      .toBuffer();\n\n    const writeStream = createWriteStream(filePath);\n    writeStream.write(compressedImage);\n    writeStream.end();\n    return compressedImage;\n  }\n  async remove(filename: string): Promise {\n    const filePath = path.join(this.imagePath, filename);\n\n    return new Promise((resolve, reject) => {\n      fs.unlink(filePath, (err) => {\n        if (err) {\n          console.error(`Error deleting file: ${filePath}`, err);\n          return reject(err);\n        }\n        resolve(filename);\n      });\n    });\n  }\n\n  // private method\n  async getUrl(imageUrl: string) {\n    return `./res/public/images/${imageUrl}`;\n  }\n\n  // verify if image or page at params exist\n  async verifyImageOrPageExist(id: number, element: string): Promise {\n    if (element == 'article') {\n      const article = await this.prisma.article.findUnique({\n        where: { id: id },\n      });\n      if (article === null) {\n        throw new BadRequestException('Article does not exist!');\n      }\n      return article;\n    } else if (element == 'page') {\n      const page = await this.prisma.page.findUnique({\n        where: { id: id },\n      });\n      if (page === null) {\n        throw new BadRequestException('Page does not exist!');\n      }\n      return page;\n    }\n  }\n\n  async stockUrl(imageUrl: string, element: string, id: number): Promise {\n    const url = await this.getUrl(imageUrl);\n    const data = await this.verifyImageOrPageExist(id, element);\n    if (element == 'article') {\n      await this.articleService.updateArticle(id, { url_img: url });\n    }\n    data.url_img = url;\n    return true;\n  }\n\n  async deleteUrl(imageURL: string): Promise {\n    const filePath = path.join(this.imagePath, imageURL);\n    try {\n      await fs.promises.unlink(filePath);\n    } catch (error) {\n      throw new NotFoundException('Image not found');\n    }\n  }\n\n  async getForDelete(imageUrl) {\n    return await this.deleteUrl(imageUrl);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guard/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategy/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategy/jwt.strategy.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategy/jwt.strategy.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { jwtConstants } from '../constants/auth.constants';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: jwtConstants.secret,\n    });\n  }\n  //extract jwt from cookie\n\n  async validate(payload: any) {\n    return { userId: payload.sub, email: payload.email, role: payload.role };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guard/local-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategy/local.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategy/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategy/local.strategy.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from '../auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super({\n      usernameField: 'email',\n      passwordField: 'mot_de_passe',\n    });\n  }\n\n  async validate(username: string, password: string): Promise {\n    const user = await this.authService.validateUser(username, password);\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                mot_de_passe\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'test@{domain}.com', description: 'The email of the User'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mot_de_passe\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'password', description: 'The password of the User'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class LoginDto {\n  @ApiProperty({\n    example: 'test@{domain}.com',\n    description: 'The email of the User',\n  })\n  email: string;\n\n  @ApiProperty({\n    example: 'password',\n    description: 'The password of the User',\n  })\n  mot_de_passe: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailModule\n\n\n\ncluster_MailModule_providers\n\n\n\ncluster_MailModule_exports\n\n\n\n\nMailService \n\nMailService \n\n\n\nMailModule\n\nMailModule\n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mail/mail.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { MailerModule } from '@nestjs-modules/mailer';\nimport { HandlebarsAdapter } from '@nestjs-modules/mailer/dist/adapters/handlebars.adapter';\nimport { Global, Module } from '@nestjs/common';\nimport { MailService } from './mail.service';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\n\n@Global()\n@Module({\n  imports: [\n    MailerModule.forRootAsync({\n      // imports: [ConfigModule], // import module if not enabled globally\n      useFactory: async (config: ConfigService) => ({\n        // transport: config.get(\"MAIL_TRANSPORT\"),\n        // or\n        transport: {\n          host: config.get('MAIL_HOST'),\n          secure: false,\n          auth: {\n            user: config.get('MAIL_USER'),\n            pass: config.get('MAIL_PASSWORD'),\n          },\n        },\n        defaults: {\n          from: `\"No Reply\" `,\n        },\n        template: {\n          dir: '/Users/nathancuvelier/MLV_back/src/mail/templates/',\n          adapter: new HandlebarsAdapter(),\n          options: {\n            strict: true,\n          },\n        },\n      }),\n      inject: [ConfigService],\n    }),\n  ],\n  providers: [MailService],\n  exports: [MailService],\n})\nexport class MailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendPasswordReset\n                            \n                            \n                                    Async\n                                sendUserConfirmation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mailerService: MailerService)\n                    \n                \n                        \n                            \n                                Defined in src/mail/mail.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mailerService\n                                                  \n                                                        \n                                                                    MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendPasswordReset\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendPasswordReset(email: string, token: any)\n                \n            \n\n\n            \n                \n                    Defined in src/mail/mail.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendUserConfirmation\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendUserConfirmation(user: CreateUtilisateurDto, token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/mail/mail.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                CreateUtilisateurDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { MailerService } from '@nestjs-modules/mailer';\nimport { Injectable } from '@nestjs/common';\nimport { CreateUtilisateurDto } from '../utilisateurs/dto/create-utilisateur.dto';\n\n@Injectable()\nexport class MailService {\n  constructor(private mailerService: MailerService) {}\n\n  async sendUserConfirmation(user: CreateUtilisateurDto, token: string) {\n    const url = `http://localhost:3000/confirmation/${token}`;\n\n    await this.mailerService.sendMail({\n      to: user.email,\n      // from: '\"Support Team\" ', // override default from\n      subject: 'Welcome to Nice App! Confirm your Email',\n      template: 'confirmation', // `.hbs` extension is appended automatically\n      context: {\n        // ✏️ filling curly brackets with content\n        name: user.nom,\n        url,\n      },\n    });\n  }\n\n  async sendPasswordReset(email: string, token: any) {\n    const url = `http://localhost:3000/reset-password/${token}`;\n\n    await this.mailerService.sendMail({\n      to: 'nathancuvelier59@icloud.com',\n      // from: '\"Support Team\" \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Message.html":{"url":"classes/Message.html","title":"class - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/messages/entities/message.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Message {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MessagesController.html":{"url":"controllers/MessagesController.html","title":"controller - MessagesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MessagesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/messages/messages.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                messages\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: CreateMessageDto, token: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/messages/messages.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateMessageDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/messages/messages.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/messages/messages.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/messages/messages.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateMessageDto: UpdateMessageDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/messages/messages.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateMessageDto\n                                    \n                                                UpdateMessageDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n} from '@nestjs/common';\nimport { MessagesService } from './messages.service';\nimport { CreateMessageDto } from './dto/create-message.dto';\nimport { UpdateMessageDto } from './dto/update-message.dto';\nimport { JwtService } from '@nestjs/jwt';\n@Controller('messages')\nexport class MessagesController {\n  constructor(\n    private readonly messagesService: MessagesService,\n    private jwtService: JwtService,\n  ) {}\n\n  @Post()\n  create(@Body() data: CreateMessageDto, @Body('token') token: string) {\n    const decoded = this.jwtService.decode(token);\n    console.log(decoded);\n    return this.messagesService.create(data);\n  }\n\n  @Get()\n  findAll() {\n    return this.messagesService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.messagesService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateMessageDto: UpdateMessageDto) {\n    return this.messagesService.update(+id, updateMessageDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.messagesService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MessagesModule.html":{"url":"modules/MessagesModule.html","title":"module - MessagesModule","body":"\n                   \n\n\n\n\n    Modules\n    MessagesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MessagesModule\n\n\n\ncluster_MessagesModule_providers\n\n\n\n\nMessagesService\n\nMessagesService\n\n\n\nMessagesModule\n\nMessagesModule\n\nMessagesModule -->\n\nMessagesService->MessagesModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nMessagesModule -->\n\nPrismaService->MessagesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/messages/messages.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MessagesService\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MessagesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MessagesService } from './messages.service';\nimport { MessagesController } from './messages.controller';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { JwtService } from '@nestjs/jwt';\n\n@Module({\n  controllers: [MessagesController],\n  providers: [MessagesService, PrismaService, JwtService],\n})\nexport class MessagesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessagesService.html":{"url":"injectables/MessagesService.html","title":"injectable - MessagesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MessagesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/messages/messages.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/messages/messages.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createMessageDto: CreateMessageDto)\n                \n            \n\n\n            \n                \n                    Defined in src/messages/messages.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createMessageDto\n                                    \n                                                CreateMessageDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/messages/messages.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/messages/messages.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/messages/messages.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateMessageDto: UpdateMessageDto)\n                \n            \n\n\n            \n                \n                    Defined in src/messages/messages.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateMessageDto\n                                    \n                                                UpdateMessageDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { message } from '@prisma/client';\nimport { CreateMessageDto } from './dto/create-message.dto';\nimport { UpdateMessageDto } from './dto/update-message.dto';\n\n@Injectable()\nexport class MessagesService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async create(createMessageDto: CreateMessageDto): Promise {\n    const receiver = await this.prisma.utilisateur.findUnique({\n      where: { id: createMessageDto.receiverId },\n    });\n    const sender = await this.prisma.utilisateur.findUnique({\n      where: { id: createMessageDto.senderId },\n    });\n    return this.prisma.message.create({\n      data: {\n        content: createMessageDto.content,\n        receiver: {\n          connect: {\n            id: receiver.id,\n          },\n        },\n        sender: {\n          connect: {\n            id: sender.id,\n          },\n        },\n      },\n    });\n  }\n\n  async findAll(): Promise {\n    return this.prisma.message.findMany();\n  }\n\n  async findOne(id: number): Promise {\n    return this.prisma.message.findUnique({ where: { id } });\n  }\n\n  async update(\n    id: number,\n    updateMessageDto: UpdateMessageDto,\n  ): Promise {\n    return this.prisma.message.update({\n      where: { id },\n      data: {\n        content: updateMessageDto.content,\n      },\n    });\n  }\n\n  async remove(id: number): Promise {\n    await this.prisma.message.delete({ where: { id } });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PagesController.html":{"url":"controllers/PagesController.html","title":"controller - PagesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PagesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pages/pages.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                pages\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createPageDto: CreatePageDto, role: RolesEnum)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(RolesEnum.moderateur, RolesEnum.administrateur)@Post()@ApiQuery({name: 'role', enum: RolesEnum})\n                \n            \n\n            \n                \n                    Defined in src/pages/pages.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    createPageDto\n                                    \n                                                CreatePageDto\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    role\n                                    \n                                                RolesEnum\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        RolesEnum.administrateur\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/pages/pages.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/pages/pages.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string, role: RolesEnum)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(RolesEnum.moderateur, RolesEnum.administrateur)@Delete(':id')@ApiQuery({name: 'role', enum: RolesEnum})\n                \n            \n\n            \n                \n                    Defined in src/pages/pages.controller.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    role\n                                    \n                                                RolesEnum\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        RolesEnum.administrateur\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updatePageDto: UpdatePageDto, role: RolesEnum)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(RolesEnum.moderateur, RolesEnum.administrateur)@Patch(':id')@ApiQuery({name: 'role', enum: RolesEnum})\n                \n            \n\n            \n                \n                    Defined in src/pages/pages.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    updatePageDto\n                                    \n                                                UpdatePageDto\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    role\n                                    \n                                                RolesEnum\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        RolesEnum.administrateur\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n  Query,\n  UseGuards,\n} from '@nestjs/common';\nimport { PagesService } from './pages.service';\nimport { CreatePageDto } from './dto/create-page.dto';\nimport { UpdatePageDto } from './dto/update-page.dto';\nimport { Roles } from '../auth/roles/roles.decorator';\nimport { JwtAuthGuard } from '../auth/guard/jwt-auth.guard';\nimport { RoleGuard } from '../auth/role/role.guard';\nimport { ApiQuery, ApiTags } from '@nestjs/swagger';\nimport { RolesEnum } from '../enum/roles.enum';\n\n@Controller('pages')\n@ApiTags('Pages')\nexport class PagesController {\n  constructor(private readonly pagesService: PagesService) {}\n\n  @Roles(RolesEnum.moderateur, RolesEnum.administrateur)\n  //@UseGuards(JwtAuthGuard, RoleGuard)\n  @Post()\n  @ApiQuery({ name: 'role', enum: RolesEnum })\n  async create(\n    @Body() createPageDto: CreatePageDto,\n    @Query('role') role: RolesEnum = RolesEnum.administrateur,\n  ) {\n    return this.pagesService.create(createPageDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.pagesService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.pagesService.findOne(+id);\n  }\n\n  @Roles(RolesEnum.moderateur, RolesEnum.administrateur)\n  //@UseGuards(JwtAuthGuard, RoleGuard)\n  @Patch(':id')\n  @ApiQuery({ name: 'role', enum: RolesEnum })\n  async update(\n    @Param('id') id: string,\n    @Body() updatePageDto: UpdatePageDto,\n    @Query('role') role: RolesEnum = RolesEnum.administrateur,\n  ) {\n    return this.pagesService.update(+id, updatePageDto);\n  }\n\n  @Roles(RolesEnum.moderateur, RolesEnum.administrateur)\n  //@UseGuards(JwtAuthGuard, RoleGuard)\n  @Delete(':id')\n  @ApiQuery({ name: 'role', enum: RolesEnum })\n  async remove(\n    @Param('id') id: string,\n    @Query('role') role: RolesEnum = RolesEnum.administrateur,\n  ) {\n    return this.pagesService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PagesModule.html":{"url":"modules/PagesModule.html","title":"module - PagesModule","body":"\n                   \n\n\n\n\n    Modules\n    PagesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PagesModule\n\n\n\ncluster_PagesModule_providers\n\n\n\n\nPagesService\n\nPagesService\n\n\n\nPagesModule\n\nPagesModule\n\nPagesModule -->\n\nPagesService->PagesModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPagesModule -->\n\nPrismaService->PagesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/pages/pages.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PagesService\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PagesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PagesService } from './pages.service';\nimport { PagesController } from './pages.controller';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { JwtService } from '@nestjs/jwt';\n\n@Module({\n  controllers: [PagesController],\n  providers: [PagesService, PrismaService, JwtService],\n})\nexport class PagesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PagesService.html":{"url":"injectables/PagesService.html","title":"injectable - PagesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PagesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pages/pages.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                createPage\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/pages/pages.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createPageDto: CreatePageDto)\n                \n            \n\n\n            \n                \n                    Defined in src/pages/pages.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createPageDto\n                                    \n                                                CreatePageDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createPage\n                        \n                    \n                \n            \n            \n                \n                    \n                    createPage(data: Prisma.pageCreateInput)\n                \n            \n\n\n            \n                \n                    Defined in src/pages/pages.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            Prisma.pageCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/pages/pages.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/pages/pages.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/pages/pages.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updatePageDto: UpdatePageDto)\n                \n            \n\n\n            \n                \n                    Defined in src/pages/pages.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePageDto\n                                    \n                                                UpdatePageDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreatePageDto } from './dto/create-page.dto';\nimport { UpdatePageDto } from './dto/update-page.dto';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { Prisma, page } from '@prisma/client';\nimport { NotFoundException } from '@nestjs/common';\n@Injectable()\nexport class PagesService {\n  constructor(private prisma: PrismaService) {}\n\n  async createPage(data: Prisma.pageCreateInput): Promise {\n    return this.prisma.page.create({\n      data,\n    });\n  }\n  create(createPageDto: CreatePageDto) {\n    return this.createPage(createPageDto);\n  }\n  async findAll(): Promise {\n    return this.prisma.page.findMany();\n  }\n\n  async findOne(id: number): Promise {\n    const page = await this.prisma.page.findUnique({\n      where: { id },\n    });\n    if (!page) {\n      throw new NotFoundException(`Page with ID ${id} not found`);\n    }\n    return page;\n  }\n\n  async update(id: number, updatePageDto: UpdatePageDto): Promise {\n    const page = await this.prisma.page.findUnique({\n      where: { id },\n    });\n    if (!page) {\n      throw new NotFoundException(`Page with ID ${id} not found`);\n    }\n    const updatePage = await this.prisma.page.update({\n      where: { id },\n      data: updatePageDto,\n    });\n    return updatePage;\n  }\n\n  async remove(id: number): Promise {\n    const page = await this.prisma.page.delete({\n      where: { id },\n    });\n    if (!page) {\n      throw new NotFoundException(`Page with ID ${id} not found`);\n    }\n    // const deletedPage = await this.prisma.page.delete({ where: { id } });\n    // return deletedPage;\n    return page;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PasswordResetController.html":{"url":"controllers/PasswordResetController.html","title":"controller - PasswordResetController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PasswordResetController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/password-reset/password-reset.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                password-reset\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                forgotPassword\n                            \n                            \n                                    Async\n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        forgotPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    forgotPassword(dto: passwordForgotDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(RolesEnum.jeune)@UseGuards(JwtAuthGuard, RoleGuard)@Post('/forgot-password')\n                \n            \n\n            \n                \n                    Defined in src/auth/password-reset/password-reset.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                passwordForgotDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        resetPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(body: passwordResetDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(RolesEnum.jeune)@UseGuards(JwtAuthGuard, RoleGuard)@Post('/reset-password')\n                \n            \n\n            \n                \n                    Defined in src/auth/password-reset/password-reset.controller.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                passwordResetDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  HttpException,\n  HttpStatus,\n  Post,\n  UseGuards,\n} from '@nestjs/common';\nimport { MailService } from '../../mail/mail.service';\nimport { UtilisateursService } from '../../utilisateurs/utilisateurs.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { PasswordResetService } from './password-reset.service';\nimport { passwordForgotDto } from '../dto/password-forgot.dto';\nimport { passwordResetDto } from '../dto/password-reset.dto';\nimport { JwtAuthGuard } from '../guard/jwt-auth.guard';\nimport { Roles } from '../roles/roles.decorator';\nimport { ApiTags } from '@nestjs/swagger';\nimport { RoleGuard } from '../role/role.guard';\nimport { RolesEnum } from '../../enum/roles.enum';\n\n@Controller('password-reset')\n@ApiTags('Password-reset')\nexport class PasswordResetController {\n  constructor(\n    private readonly passwordResetService: PasswordResetService,\n    private readonly utilisateursService: UtilisateursService,\n    private readonly mailService: MailService,\n    private readonly jwtService: JwtService,\n  ) {}\n\n  @Roles(RolesEnum.jeune)\n  @UseGuards(JwtAuthGuard, RoleGuard)\n  @Post('/forgot-password')\n  async forgotPassword(@Body() dto: passwordForgotDto) {\n    console.log(dto.email);\n    try {\n      if (!dto.email) {\n        throw new HttpException(\n          \"L'adresse email est manquante.\",\n          HttpStatus.BAD_REQUEST,\n        );\n      }\n\n      // Vérifiez que l'e-mail est associé à un utilisateur\n      const utilisateur = await this.utilisateursService.findOneByEmail(\n        dto.email,\n      );\n      if (!utilisateur) {\n        throw new HttpException(\n          \"Cette adresse email n'est pas associée à un utilisateur.\",\n          HttpStatus.NOT_FOUND,\n        );\n      }\n\n      // Générez un jeton JWT unique\n      const token = this.jwtService.sign(\n        { email: dto.email },\n        { expiresIn: '30s' },\n      );\n\n      await this.mailService.sendPasswordReset(dto.email, token);\n\n      // Enregistrez le jeton dans la base de données\n      return await this.passwordResetService.saveToken(dto.email, token);\n    } catch (e) {\n      throw new HttpException(\n        \"Une erreur s'est produite lors de l'envoi de l'e-mail.\",\n        HttpStatus.INTERNAL_SERVER_ERROR,\n      );\n    }\n\n    // Envoyez un e-mail avec le jeton\n  }\n  @Roles(RolesEnum.jeune)\n  @UseGuards(JwtAuthGuard, RoleGuard)\n  @Post('/reset-password')\n  async resetPassword(@Body() body: passwordResetDto): Promise {\n    if (!body.token || !body.password) {\n      throw new HttpException(\n        'Les paramètres de la requête sont manquants.',\n        HttpStatus.BAD_REQUEST,\n      );\n    }\n\n    // Réinitialisez le mot de passe avec le jeton fourni\n    await this.passwordResetService.resetPassword(body.token, body.password);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PasswordResetService.html":{"url":"injectables/PasswordResetService.html","title":"injectable - PasswordResetService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PasswordResetService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/password-reset/password-reset.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                resetPassword\n                            \n                            \n                                    Async\n                                saveToken\n                            \n                            \n                                    Private\n                                verifyToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, mailService: MailService, utilisateursService: UtilisateursService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/password-reset/password-reset.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailService\n                                                  \n                                                        \n                                                                        MailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        utilisateursService\n                                                  \n                                                        \n                                                                        UtilisateursService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        resetPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(token: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/password-reset/password-reset.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        saveToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveToken(email: string, token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/password-reset/password-reset.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        verifyToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyToken(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/password-reset/password-reset.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { PrismaService } from '../../prisma/prisma.service';\nimport { MailService } from '../../mail/mail.service';\nimport { UtilisateursService } from '../../utilisateurs/utilisateurs.service';\nimport { jwtConstants } from '../constants/auth.constants';\nimport { JwtService } from '@nestjs/jwt';\n\n@Injectable()\nexport class PasswordResetService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly mailService: MailService,\n    private readonly utilisateursService: UtilisateursService,\n    private readonly jwtService: JwtService,\n  ) {}\n\n  async resetPassword(token: string, password: string): Promise {\n    const isTokenValid = this.verifyToken(token);\n    if (!isTokenValid) {\n      throw new Error('Invalid token');\n    }\n    const passwordReset = await this.prisma.password_reset.findUnique({\n      where: {\n        token,\n      },\n    });\n\n    if (!passwordReset) {\n      throw new NotFoundException('Invalid token');\n    }\n\n    await this.utilisateursService.changePassword(\n      passwordReset.email,\n      password,\n    );\n\n    try {\n      await this.prisma.password_reset.delete({\n        where: {\n          id: passwordReset.id,\n        },\n      });\n    } catch (error) {\n      // handle error deleting password reset entry\n      console.error(error);\n    }\n    // send an email to confirm the password has been reset\n  }\n\n  async saveToken(email: string, token: string) {\n    console.log(email);\n    return this.prisma.password_reset.create({\n      data: {\n        email: email,\n        token: token,\n        createdAt: new Date(),\n      },\n    });\n  }\n  // send an email with the token\n\n  private verifyToken(token: string): boolean {\n    const secret = jwtConstants.secret;\n\n    try {\n      this.jwtService.verify(token, { secret });\n      return true;\n    } catch (error) {\n      return false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PrismaClientExceptionFilter.html":{"url":"classes/PrismaClientExceptionFilter.html","title":"class - PrismaClientExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PrismaClientExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma-client-exception/prisma-client-exception.filter.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    BaseExceptionFilter\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: Prisma.PrismaClientKnownRequestError, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma-client-exception/prisma-client-exception.filter.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            Prisma.PrismaClientKnownRequestError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, HttpStatus } from '@nestjs/common';\nimport { BaseExceptionFilter } from '@nestjs/core';\nimport { Prisma } from '@prisma/client';\nimport { Response } from 'express';\n\n@Catch(Prisma.PrismaClientKnownRequestError)\nexport class PrismaClientExceptionFilter extends BaseExceptionFilter {\n  catch(exception: Prisma.PrismaClientKnownRequestError, host: ArgumentsHost) {\n    console.error(exception.message);\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const message = exception.message.replace(/\\n/g, '');\n\n    switch (exception.code) {\n      case 'P2002': {\n        const status = HttpStatus.CONFLICT;\n        response.status(status).json({\n          statusCode: status,\n          message: message,\n        });\n        break;\n      }\n      default:\n        // default 500 error code\n        super.catch(exception, host);\n        break;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/prisma/prisma.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient {\n  // connexion à la db ou db_test en fonction de l'environnement\n  constructor() {\n    super({\n      // Utiliser la configuration de la base de données de test si NODE_ENV=test\n      datasources: {\n        db: {\n          url:\n            process.env.NODE_ENV === 'test'\n              ? process.env.DATABASE_TEST_URL\n              : process.env.DATABASE_URL,\n        },\n      },\n    });\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    this.$on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RoleGuard.html":{"url":"guards/RoleGuard.html","title":"guard - RoleGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RoleGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/role/role.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/role/role.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/role/role.guard.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { RolesEnum } from '../../enum/roles.enum';\nimport { JwtService } from '@nestjs/jwt';\nimport { jwtConstants } from '../constants/auth.constants';\n\n@Injectable()\nexport class RoleGuard implements CanActivate {\n  constructor(\n    private reflector: Reflector,\n    private readonly jwtService: JwtService,\n  ) {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const requiredRoles = this.reflector.getAllAndOverride(\n      'roles',\n      [context.getHandler(), context.getClass()],\n    );\n    if (!requiredRoles) {\n      return true;\n    }\n    const request = context.switchToHttp().getRequest();\n    const token = request.cookies.jwt;\n    console.log(token);\n    if (!token) {\n      return false;\n    }\n\n    const decoded = this.jwtService.verify(token, {\n      secret: jwtConstants.secret,\n    });\n    const user = decoded;\n    console.log(user);\n    return requiredRoles.some((role) => user.role === role);\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAlertDto.html":{"url":"classes/UpdateAlertDto.html","title":"class - UpdateAlertDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAlertDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/alert/dto/update-alert.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateAlertDto } from './create-alert.dto';\n\nexport class UpdateAlertDto extends PartialType(CreateAlertDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateArticleDto.html":{"url":"classes/UpdateArticleDto.html","title":"class - UpdateArticleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateArticleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/article/dto/update-article.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                            \n                                contenu\n                            \n                            \n                                date_creation\n                            \n                            \n                                date_suppression\n                            \n                            \n                                description\n                            \n                            \n                                img_description\n                            \n                            \n                                img_titre\n                            \n                            \n                                meta_title\n                            \n                            \n                                slug\n                            \n                            \n                                sous_titre\n                            \n                            \n                                status\n                            \n                            \n                                tags\n                            \n                            \n                                titre\n                            \n                            \n                                url_img\n                            \n                            \n                                url_video\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/article/dto/update-article.dto.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        contenu\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/article/dto/update-article.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        date_creation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/article/dto/update-article.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        date_suppression\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/article/dto/update-article.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/article/dto/update-article.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        img_description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/article/dto/update-article.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        img_titre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/article/dto/update-article.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        meta_title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/article/dto/update-article.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/article/dto/update-article.dto.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sous_titre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/article/dto/update-article.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/article/dto/update-article.dto.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/article/dto/update-article.dto.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        titre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/article/dto/update-article.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url_img\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/article/dto/update-article.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url_video\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/article/dto/update-article.dto.ts:65\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { IsDate, IsNotEmpty, IsString } from 'class-validator';\nimport { CreateArticleDto } from './create-article.dto';\n\nexport class UpdateArticleDto extends PartialType(CreateArticleDto) {\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  titre: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsDate()\n  date_creation: Date;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsDate()\n  date_suppression: Date;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  url_img: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  img_description: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  img_titre: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  sous_titre: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  contenu: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  description: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  meta_title: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  categories: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  url_video: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  slug: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  tags: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  status: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateImageDto.html":{"url":"classes/UpdateImageDto.html","title":"class - UpdateImageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateImageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/images/dto/update-image.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateImageDto } from './create-image.dto';\n\nexport class UpdateImageDto extends PartialType(CreateImageDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateMessageDto.html":{"url":"classes/UpdateMessageDto.html","title":"class - UpdateMessageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateMessageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/messages/dto/update-message.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateMessageDto } from './create-message.dto';\n\nexport class UpdateMessageDto extends PartialType(CreateMessageDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePageDto.html":{"url":"classes/UpdatePageDto.html","title":"class - UpdatePageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pages/dto/update-page.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contenu\n                            \n                            \n                                url_img\n                            \n                            \n                                url_video\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contenu\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pages/dto/update-page.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url_img\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pages/dto/update-page.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url_video\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pages/dto/update-page.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { CreatePageDto } from './create-page.dto';\n\nexport class UpdatePageDto extends PartialType(CreatePageDto) {\n  @ApiProperty()\n  contenu: string;\n\n  @ApiProperty()\n  url_img: string;\n\n  @ApiProperty()\n  url_video: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePasswordUtilisateurDto.html":{"url":"classes/UpdatePasswordUtilisateurDto.html","title":"class - UpdatePasswordUtilisateurDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePasswordUtilisateurDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utilisateurs/dto/update-password-utilisateur.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ancien_mot_de_passe\n                            \n                            \n                                nouveau_mot_de_passe\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ancien_mot_de_passe\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateurs/dto/update-password-utilisateur.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nouveau_mot_de_passe\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateurs/dto/update-password-utilisateur.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUtilisateurDto } from './create-utilisateur.dto';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class UpdatePasswordUtilisateurDto extends PartialType(\n  CreateUtilisateurDto,\n) {\n  @ApiProperty()\n  ancien_mot_de_passe: string;\n  @ApiProperty()\n  nouveau_mot_de_passe: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUtilisateurDto.html":{"url":"classes/UpdateUtilisateurDto.html","title":"class - UpdateUtilisateurDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUtilisateurDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utilisateurs/dto/update-utilisateur.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                adresse\n                            \n                            \n                                email\n                            \n                            \n                                mot_de_passe\n                            \n                            \n                                nationalite\n                            \n                            \n                                nom\n                            \n                            \n                                prenom\n                            \n                            \n                                telephone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        adresse\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateurs/dto/update-utilisateur.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateurs/dto/update-utilisateur.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mot_de_passe\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateurs/dto/update-utilisateur.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nationalite\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateurs/dto/update-utilisateur.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateurs/dto/update-utilisateur.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prenom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateurs/dto/update-utilisateur.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        telephone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateurs/dto/update-utilisateur.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUtilisateurDto } from './create-utilisateur.dto';\nimport { RolesEnum } from '../../enum/roles.enum';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class UpdateUtilisateurDto extends PartialType(CreateUtilisateurDto) {\n  @ApiProperty()\n  nom: string;\n  @ApiProperty()\n  prenom: string;\n  @ApiProperty()\n  email: string;\n  @ApiProperty()\n  mot_de_passe: string;\n  @ApiProperty()\n  telephone: string;\n  @ApiProperty()\n  nationalite: string;\n  @ApiProperty()\n  adresse: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateVisitorDto.html":{"url":"classes/UpdateVisitorDto.html","title":"class - UpdateVisitorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateVisitorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/visitor/dto/update-visitor.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateVisitorDto } from './create-visitor.dto';\n\nexport class UpdateVisitorDto extends PartialType(CreateVisitorDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Utilisateur.html":{"url":"classes/Utilisateur.html","title":"class - Utilisateur","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Utilisateur\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utilisateurs/entities/utilisateur.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                date_creation\n                            \n                            \n                                date_modification\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                mot_de_passe\n                            \n                            \n                                nom\n                            \n                            \n                                prenom\n                            \n                            \n                                role\n                            \n                            \n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        date_creation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateurs/entities/utilisateur.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        date_modification\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateurs/entities/utilisateur.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateurs/entities/utilisateur.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateurs/entities/utilisateur.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mot_de_passe\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateurs/entities/utilisateur.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateurs/entities/utilisateur.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prenom\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateurs/entities/utilisateur.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateurs/entities/utilisateur.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utilisateurs/entities/utilisateur.entity.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, PrimaryGeneratedColumn } from 'prisma';\nexport class Utilisateur {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  prenom: string;\n\n  @Column()\n  nom: string;\n\n  @Column()\n  email: string;\n\n  @Column()\n  mot_de_passe: string;\n\n  @Column()\n  uuid: string;\n\n  @Column()\n  role: string;\n\n  @Column()\n  date_creation: Date;\n\n  @Column()\n  date_modification: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UtilisateursController.html":{"url":"controllers/UtilisateursController.html","title":"controller - UtilisateursController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UtilisateursController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utilisateurs/utilisateurs.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                utilisateurs\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                assignConseiller\n                            \n                            \n                                changePassword\n                            \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findByEmail\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        assignConseiller\n                        \n                    \n                \n            \n            \n                \nassignConseiller(id_jeune: number, id_conseiller: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(RolesEnum.moderateur, RolesEnum.administrateur)@UseGuards(JwtAuthGuard, RoleGuard)@Post('assign_conseiller')@ApiBody({schema: undefined})\n                \n            \n\n            \n                \n                    Defined in src/utilisateurs/utilisateurs.controller.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id_jeune\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id_conseiller\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changePassword\n                        \n                    \n                \n            \n            \n                \nchangePassword(id: string, updateUtilisateurDto: UpdatePasswordUtilisateurDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(RolesEnum.moderateur, RolesEnum.administrateur)@UseGuards(JwtAuthGuard, RoleGuard)@Patch(':id/change_password')\n                \n            \n\n            \n                \n                    Defined in src/utilisateurs/utilisateurs.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUtilisateurDto\n                                    \n                                                UpdatePasswordUtilisateurDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUtilisateurDto: CreateUtilisateurDto, role: RolesEnum)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(RolesEnum.conseiller, RolesEnum.moderateur, RolesEnum.administrateur)@UseGuards(JwtAuthGuard, RoleGuard)@Post()\n                \n            \n\n            \n                \n                    Defined in src/utilisateurs/utilisateurs.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUtilisateurDto\n                                    \n                                                CreateUtilisateurDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    role\n                                    \n                                                RolesEnum\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(RolesEnum.moderateur, RolesEnum.administrateur)@UseGuards(JwtAuthGuard, RoleGuard)@Get()\n                \n            \n\n            \n                \n                    Defined in src/utilisateurs/utilisateurs.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByEmail\n                        \n                    \n                \n            \n            \n                \nfindByEmail(email: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(RolesEnum.moderateur, RolesEnum.administrateur)@UseGuards(JwtAuthGuard, RoleGuard)@Get('email/:email')\n                \n            \n\n            \n                \n                    Defined in src/utilisateurs/utilisateurs.controller.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(RolesEnum.moderateur, RolesEnum.administrateur)@UseGuards(JwtAuthGuard, RoleGuard)@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/utilisateurs/utilisateurs.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(RolesEnum.administrateur, RolesEnum.moderateur)@UseGuards(JwtAuthGuard, RoleGuard)@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/utilisateurs/utilisateurs.controller.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateUtilisateurDto: UpdateUtilisateurDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SetMetadata('roles', ['conseiller'])@UseGuards(JwtAuthGuard, RoleGuard)@Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/utilisateurs/utilisateurs.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUtilisateurDto\n                                    \n                                                UpdateUtilisateurDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n  SetMetadata,\n  UseGuards,\n} from '@nestjs/common';\nimport { UtilisateursService } from './utilisateurs.service';\nimport { CreateUtilisateurDto } from './dto/create-utilisateur.dto';\nimport { UpdateUtilisateurDto } from './dto/update-utilisateur.dto';\nimport { UpdatePasswordUtilisateurDto } from './dto/update-password-utilisateur.dto';\nimport { JwtAuthGuard } from '../auth/guard/jwt-auth.guard';\nimport { RoleGuard } from 'src/auth/role/role.guard';\nimport { Roles } from '../auth/roles/roles.decorator';\nimport { ApiBody, ApiTags } from '@nestjs/swagger';\nimport { RolesEnum } from '../enum/roles.enum';\n\n@Controller('utilisateurs')\n@ApiTags('Utilisateurs')\nexport class UtilisateursController {\n  constructor(private readonly utilisateursService: UtilisateursService) {}\n\n  @Roles(RolesEnum.conseiller, RolesEnum.moderateur, RolesEnum.administrateur)\n  @UseGuards(JwtAuthGuard, RoleGuard)\n  @Post()\n  create(@Body() createUtilisateurDto: CreateUtilisateurDto, role: RolesEnum) {\n    return this.utilisateursService.createUtilisateur(\n      createUtilisateurDto,\n      role,\n    );\n  }\n\n  @Roles(RolesEnum.moderateur, RolesEnum.administrateur)\n  @UseGuards(JwtAuthGuard, RoleGuard)\n  @Get()\n  findAll() {\n    return this.utilisateursService.findAll();\n  }\n  @Roles(RolesEnum.moderateur, RolesEnum.administrateur)\n  @UseGuards(JwtAuthGuard, RoleGuard)\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.utilisateursService.findOne(+id);\n  }\n  @SetMetadata('roles', ['conseiller'])\n  @UseGuards(JwtAuthGuard, RoleGuard)\n  @Patch(':id')\n  update(\n    @Param('id') id: string,\n    @Body() updateUtilisateurDto: UpdateUtilisateurDto,\n  ) {\n    return this.utilisateursService.update(+id, updateUtilisateurDto);\n  }\n  @Roles(RolesEnum.administrateur, RolesEnum.moderateur)\n  @UseGuards(JwtAuthGuard, RoleGuard)\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.utilisateursService.remove(+id);\n  }\n\n  @Roles(RolesEnum.moderateur, RolesEnum.administrateur)\n  @UseGuards(JwtAuthGuard, RoleGuard)\n  @Patch(':id/change_password')\n  changePassword(\n    @Param('id') id: string,\n    @Body() updateUtilisateurDto: UpdatePasswordUtilisateurDto,\n  ) {\n    return this.utilisateursService.updatePassword(+id, updateUtilisateurDto);\n  }\n  //find by email\n  @Roles(RolesEnum.moderateur, RolesEnum.administrateur)\n  @UseGuards(JwtAuthGuard, RoleGuard)\n  @Get('email/:email')\n  findByEmail(@Param('email') email: string) {\n    return this.utilisateursService.findOneByEmail(email);\n  }\n\n  @Roles(RolesEnum.moderateur, RolesEnum.administrateur)\n  @UseGuards(JwtAuthGuard, RoleGuard)\n  @Post('assign_conseiller')\n  @ApiBody({\n    schema: {\n      type: 'object',\n      properties: {\n        id_jeune: {\n          type: 'number',\n        },\n        id_conseiller: {\n          type: 'number',\n        },\n      },\n    },\n  })\n  assignConseiller(\n    @Body('id_jeune') id_jeune: number,\n    @Body('id_conseiller') id_conseiller: number,\n  ) {\n    return this.utilisateursService.assignConseillerToJeune(\n      id_jeune,\n      id_conseiller,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UtilisateursModule.html":{"url":"modules/UtilisateursModule.html","title":"module - UtilisateursModule","body":"\n                   \n\n\n\n\n    Modules\n    UtilisateursModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UtilisateursModule\n\n\n\ncluster_UtilisateursModule_providers\n\n\n\ncluster_UtilisateursModule_exports\n\n\n\n\nUtilisateursService \n\nUtilisateursService \n\n\n\nUtilisateursModule\n\nUtilisateursModule\n\nUtilisateursService  -->\n\nUtilisateursModule->UtilisateursService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nUtilisateursModule -->\n\nPrismaService->UtilisateursModule\n\n\n\n\n\nUtilisateursService\n\nUtilisateursService\n\nUtilisateursModule -->\n\nUtilisateursService->UtilisateursModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/utilisateurs/utilisateurs.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                        \n                            UtilisateursService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UtilisateursController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UtilisateursService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UtilisateursService } from './utilisateurs.service';\nimport { UtilisateursController } from './utilisateurs.controller';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { JwtModule } from '@nestjs/jwt';\n\n@Module({\n  imports: [JwtModule],\n  controllers: [UtilisateursController],\n  providers: [UtilisateursService, PrismaService],\n  exports: [UtilisateursService],\n})\nexport class UtilisateursModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UtilisateursService.html":{"url":"injectables/UtilisateursService.html","title":"injectable - UtilisateursService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UtilisateursService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utilisateurs/utilisateurs.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                assignConseillerToJeune\n                            \n                            \n                                    Async\n                                changePassword\n                            \n                            \n                                    Async\n                                createUtilisateur\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findOneByEmail\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updatePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/utilisateurs/utilisateurs.service.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        assignConseillerToJeune\n                        \n                    \n                \n            \n            \n                \n                    \n                    assignConseillerToJeune(idJeune: number, idConseiller: number)\n                \n            \n\n\n            \n                \n                    Defined in src/utilisateurs/utilisateurs.service.ts:186\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idJeune\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    idConseiller\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        changePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    changePassword(mail, mot_de_passe: string)\n                \n            \n\n\n            \n                \n                    Defined in src/utilisateurs/utilisateurs.service.ts:173\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mail\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    mot_de_passe\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUtilisateur\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUtilisateur(createUtilisateurDto: CreateUtilisateurDto, role: RolesEnum)\n                \n            \n\n\n            \n                \n                    Defined in src/utilisateurs/utilisateurs.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUtilisateurDto\n                                    \n                                                CreateUtilisateurDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    role\n                                    \n                                                RolesEnum\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/utilisateurs/utilisateurs.service.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/utilisateurs/utilisateurs.service.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneByEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/utilisateurs/utilisateurs.service.ts:183\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/utilisateurs/utilisateurs.service.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateUtilisateurDto: UpdateUtilisateurDto)\n                \n            \n\n\n            \n                \n                    Defined in src/utilisateurs/utilisateurs.service.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUtilisateurDto\n                                    \n                                                UpdateUtilisateurDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updatePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePassword(id: number, updatePasswordUtilisateurDto: UpdatePasswordUtilisateurDto)\n                \n            \n\n\n            \n                \n                    Defined in src/utilisateurs/utilisateurs.service.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePasswordUtilisateurDto\n                                    \n                                                UpdatePasswordUtilisateurDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { UpdateUtilisateurDto } from './dto/update-utilisateur.dto';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { utilisateur } from '@prisma/client';\nimport * as bcrypt from 'bcrypt';\nimport { CreateUtilisateurDto } from './dto/create-utilisateur.dto';\nimport { v4 as uuidv4 } from 'uuid';\nimport { pick } from 'lodash';\nimport { UpdatePasswordUtilisateurDto } from './dto/update-password-utilisateur.dto';\nimport { RolesEnum } from '../enum/roles.enum';\n\n// Constantes\nconst allowedFields = [\n  'nom',\n  'prenom',\n  'email',\n  'telephone',\n  'adresse',\n  'nationalite',\n];\nconst USER_NOT_FOUND_ERROR = (id: number) => `User with ID ${id} not found`;\n\n// Interfaces\ntype Utilisateur = utilisateur;\n\n// Enums\nenum SaltLength {\n  Default = 10,\n}\n\n@Injectable()\nexport class UtilisateursService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  // Créer un utilisateur\n  async createUtilisateur(\n    createUtilisateurDto: CreateUtilisateurDto,\n    role: RolesEnum,\n  ): Promise {\n    const salt = await bcrypt.genSalt(SaltLength.Default);\n    const hashedPassword = await bcrypt.hash(\n      createUtilisateurDto.mot_de_passe,\n      salt,\n    );\n    //connect to admin table\n    const user = await this.prisma.utilisateur.create({\n      data: {\n        ...createUtilisateurDto,\n        mot_de_passe: hashedPassword,\n        uuid: uuidv4(),\n        role: role,\n      },\n    });\n\n    switch (role) {\n      case RolesEnum.administrateur:\n        await this.prisma.administrateur.create({\n          data: {\n            utilisateur: {\n              connect: {\n                id: user.id,\n              },\n            },\n          },\n        });\n        break;\n      case RolesEnum.jeune:\n        await this.prisma.jeune.create({\n          data: {\n            utilisateur: {\n              connect: {\n                id: user.id,\n              },\n            },\n          },\n        });\n        break;\n      case RolesEnum.conseiller:\n        const a = await this.prisma.conseiller.create({\n          data: {\n            utilisateur: {\n              connect: {\n                id: user.id,\n              },\n            },\n          },\n        });\n        console.log(a);\n        break;\n      case RolesEnum.moderateur:\n        await this.prisma.moderateur.create({\n          data: {\n            utilisateur: {\n              connect: {\n                id: user.id,\n              },\n            },\n          },\n        });\n        break;\n    }\n    console.log(user);\n    return user;\n  }\n\n  // Trouver un utilisateur par ID\n  async findOne(id: number): Promise {\n    const user = await this.prisma.utilisateur.findUnique({ where: { id } });\n    if (!user) {\n      throw new NotFoundException(USER_NOT_FOUND_ERROR(id));\n    }\n    return user;\n  }\n\n  // Trouver tous les utilisateurs\n  async findAll(): Promise {\n    return this.prisma.utilisateur.findMany();\n  }\n\n  // Mettre à jour un utilisateur\n  async update(\n    id: number,\n    updateUtilisateurDto: UpdateUtilisateurDto,\n  ): Promise {\n    const user = await this.prisma.utilisateur.findUnique({ where: { id } });\n    if (!user) {\n      throw new NotFoundException(USER_NOT_FOUND_ERROR(id));\n    }\n\n    const userData = pick(updateUtilisateurDto, allowedFields);\n\n    return this.prisma.utilisateur.update({\n      where: { id },\n      data: { ...userData },\n    });\n  }\n\n  // Supprimer un utilisateur\n  async remove(id: number): Promise {\n    const user = await this.prisma.utilisateur.findUnique({ where: { id } });\n    if (!user) {\n      throw new NotFoundException(`User with ID ${id} not found`);\n    }\n    await this.prisma.utilisateur.delete({ where: { id } });\n  }\n\n  //changer le mot de passe d'un utilisateur et verifier que l'ancien mot de passe est correct\n  async updatePassword(\n    id: number,\n    updatePasswordUtilisateurDto: UpdatePasswordUtilisateurDto,\n  ): Promise {\n    const user = await this.prisma.utilisateur.findUnique({ where: { id } });\n    if (!user) {\n      throw new NotFoundException(USER_NOT_FOUND_ERROR(id));\n    }\n    const isPasswordMatch = await bcrypt.compare(\n      updatePasswordUtilisateurDto.ancien_mot_de_passe,\n      user.mot_de_passe,\n    );\n    if (!isPasswordMatch) {\n      throw new NotFoundException('Old password is incorrect');\n    }\n    const salt = await bcrypt.genSalt(SaltLength.Default);\n    const hashedPassword = await bcrypt.hash(\n      updatePasswordUtilisateurDto.nouveau_mot_de_passe,\n      salt,\n    );\n    return this.prisma.utilisateur.update({\n      where: { id },\n      data: { mot_de_passe: hashedPassword },\n    });\n  }\n  async changePassword(mail, mot_de_passe: string) {\n    const salt = await bcrypt.genSalt(SaltLength.Default);\n    const hashedPassword = await bcrypt.hash(mot_de_passe, salt);\n    return this.prisma.utilisateur.update({\n      where: { email: mail },\n      data: { mot_de_passe: hashedPassword },\n    });\n  }\n\n  // Trouver un utilisateur par email\n  async findOneByEmail(email: string): Promise {\n    return this.prisma.utilisateur.findFirst({ where: { email } });\n  }\n  async assignConseillerToJeune(idJeune: number, idConseiller: number) {\n    const jeune = await this.prisma.jeune.findUnique({\n      where: { id: idJeune },\n    });\n    if (!jeune) {\n      throw new NotFoundException(`Jeune with ID ${idJeune} not found`);\n    }\n\n    const conseiller = await this.prisma.conseiller.findUnique({\n      where: { id: idConseiller },\n    });\n    if (!conseiller) {\n      throw new NotFoundException(\n        `Conseiller with ID ${idConseiller} not found`,\n      );\n    }\n\n    return this.prisma.est_attribuer.create({\n      data: {\n        jeune: {\n          connect: { id: idJeune },\n        },\n        conseiller: {\n          connect: { id: idConseiller },\n        },\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Visitor.html":{"url":"classes/Visitor.html","title":"class - Visitor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Visitor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/visitor/entities/visitor.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Visitor {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/VisitorController.html":{"url":"controllers/VisitorController.html","title":"controller - VisitorController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  VisitorController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/visitor/visitor.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                visitor\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getTotalVisitors\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getTotalVisitors\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTotalVisitors()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('total')\n                \n            \n\n            \n                \n                    Defined in src/visitor/visitor.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { VisitorService } from './visitor.service';\nimport { ApiTags } from '@nestjs/swagger';\n\n@Controller('visitor')\n@ApiTags('Visitor')\nexport class VisitorController {\n  constructor(private visitorService: VisitorService) {}\n\n  // @Post()\n  // create(app) {\n  //   return this.visitorService.incrementation(app);\n  // }\n\n  @Get('total')\n  async getTotalVisitors() {\n    const total = await this.visitorService.getTotalVisitors();\n    return { total };\n  }\n}\n\n// @Get(':id')\n// findOne(@Param('id') id: string) {\n//   return this.visitorService.findOne(+id);\n// }\n\n// @Patch(':id')\n// update(@Param('id') id: string, @Body() updateVisitorDto: UpdateVisitorDto) {\n//   return this.visitorService.update(+id, updateVisitorDto);\n// }\n\n// @Delete(':id')\n// remove(@Param('id') id: string) {\n//   return this.visitorService.remove(+id);\n// }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VisitorCounterMiddleware.html":{"url":"injectables/VisitorCounterMiddleware.html","title":"injectable - VisitorCounterMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VisitorCounterMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/visitor/visitorCountMiddleware.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/visitor/visitorCountMiddleware.middleware.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: any, res: any, next: () => void)\n                \n            \n\n\n            \n                \n                    Defined in src/visitor/visitorCountMiddleware.middleware.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class VisitorCounterMiddleware implements NestMiddleware {\n  constructor(private prisma: PrismaService) {}\n  // public visitorCount = 0;\n\n  async use(req: any, res: any, next: () => void) {\n    const visitor = await this.prisma.visitor.upsert({\n      where: { id: 1 },\n      create: { visits: 1 },\n      update: { visits: { increment: 1 } },\n    });\n    // this.visitorCount++;\n    // console.log(`Number of visitor: ${this.visitorCount}`);\n    console.log(`Number of visitors: ${visitor.visits}`);\n\n    next();\n  }\n  //   getCounter(): number {\n  //     return this.visitorCount;\n  //   }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VisitorModule.html":{"url":"modules/VisitorModule.html","title":"module - VisitorModule","body":"\n                   \n\n\n\n\n    Modules\n    VisitorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_VisitorModule\n\n\n\ncluster_VisitorModule_providers\n\n\n\n\nPrismaService\n\nPrismaService\n\n\n\nVisitorModule\n\nVisitorModule\n\nVisitorModule -->\n\nPrismaService->VisitorModule\n\n\n\n\n\nVisitorService\n\nVisitorService\n\nVisitorModule -->\n\nVisitorService->VisitorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/visitor/visitor.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                        \n                            VisitorService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            VisitorController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { VisitorService } from './visitor.service';\nimport { VisitorController } from './visitor.controller';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Module({\n  controllers: [VisitorController],\n  providers: [VisitorService, PrismaService],\n})\nexport class VisitorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VisitorService.html":{"url":"injectables/VisitorService.html","title":"injectable - VisitorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VisitorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/visitor/visitor.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                visitorCount\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getTotalVisitors\n                            \n                            \n                                    Async\n                                incrementation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/visitor/visitor.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getTotalVisitors\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTotalVisitors()\n                \n            \n\n\n            \n                \n                    Defined in src/visitor/visitor.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        incrementation\n                        \n                    \n                \n            \n            \n                \n                    \n                    incrementation(app)\n                \n            \n\n\n            \n                \n                    Defined in src/visitor/visitor.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        visitorCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/visitor/visitor.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { visitor } from '@prisma/client';\n\n@Injectable()\nexport class VisitorService {\n  private visitorCount = 0;\n  constructor(private prisma: PrismaService) {}\n\n  async getTotalVisitors() {\n    const visitors = await this.prisma.visitor.findMany();\n    const total = visitors.reduce((acc, visitor) => acc + visitor.visits, 0);\n    return total;\n  }\n\n  async incrementation(app) {\n    app.use((req, res, next) => {\n      if (req.method === 'Get' && req.path === '/') {\n        this.visitorCount++;\n      }\n      next();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/alert/alert.controller.ts\n            \n            controller\n            AlertController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/alert/alert.service.ts\n            \n            injectable\n            AlertService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/alert/dto/create-alert.dto.ts\n            \n            class\n            CreateAlertDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/alert/dto/update-alert.dto.ts\n            \n            class\n            UpdateAlertDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/alert/entities/alert.entity.ts\n            \n            class\n            Alert\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/article/article.controller.ts\n            \n            controller\n            ArticleController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/article/article.service.ts\n            \n            injectable\n            ArticleService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/article/dto/create-article.dto.ts\n            \n            class\n            CreateArticleDto\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/article/dto/update-article.dto.ts\n            \n            class\n            UpdateArticleDto\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/article/entities/article.entity.ts\n            \n            class\n            Article\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/constants/auth.constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/password-forgot.dto.ts\n            \n            class\n            passwordForgotDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/dto/password-reset.dto.ts\n            \n            class\n            passwordResetDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/entities/auth.entity.ts\n            \n            class\n            Auth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guard/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guard/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/password-reset/password-reset.controller.ts\n            \n            controller\n            PasswordResetController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/password-reset/password-reset.service.ts\n            \n            injectable\n            PasswordResetService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/role/role.guard.ts\n            \n            guard\n            RoleGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/roles/roles.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/strategy/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategy/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/images/dto/create-image.dto.ts\n            \n            class\n            CreateImageDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/images/dto/update-image.dto.ts\n            \n            class\n            UpdateImageDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/images/entities/image.entity.ts\n            \n            class\n            Image\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/images/images.controller.ts\n            \n            controller\n            ImagesController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/images/images.service.ts\n            \n            injectable\n            ImagesService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/messages/dto/create-message.dto.ts\n            \n            class\n            CreateMessageDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/messages/dto/update-message.dto.ts\n            \n            class\n            UpdateMessageDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/messages/entities/message.entity.ts\n            \n            class\n            Message\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/messages/messages.controller.ts\n            \n            controller\n            MessagesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/messages/messages.service.ts\n            \n            injectable\n            MessagesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/pages/dto/create-page.dto.ts\n            \n            class\n            CreatePageDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/pages/dto/update-page.dto.ts\n            \n            class\n            UpdatePageDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/pages/pages.controller.ts\n            \n            controller\n            PagesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/pages/pages.service.ts\n            \n            injectable\n            PagesService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/prisma-client-exception/prisma-client-exception.filter.ts\n            \n            class\n            PrismaClientExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/utilisateurs/dto/create-utilisateur.dto.ts\n            \n            class\n            CreateUtilisateurDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/utilisateurs/dto/update-password-utilisateur.dto.ts\n            \n            class\n            UpdatePasswordUtilisateurDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/utilisateurs/dto/update-utilisateur.dto.ts\n            \n            class\n            UpdateUtilisateurDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/utilisateurs/entities/utilisateur.entity.ts\n            \n            class\n            Utilisateur\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/utilisateurs/utilisateurs.controller.ts\n            \n            controller\n            UtilisateursController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/utilisateurs/utilisateurs.service.ts\n            \n            injectable\n            UtilisateursService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/utilisateurs/utilisateurs.service.ts\n            \n            variable\n            allowedFields\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utilisateurs/utilisateurs.service.ts\n            \n            variable\n            USER_NOT_FOUND_ERROR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/visitor/dto/create-visitor.dto.ts\n            \n            class\n            CreateVisitorDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/visitor/dto/update-visitor.dto.ts\n            \n            class\n            UpdateVisitorDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/visitor/entities/visitor.entity.ts\n            \n            class\n            Visitor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/visitor/visitor.controller.ts\n            \n            controller\n            VisitorController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/visitor/visitor.service.ts\n            \n            injectable\n            VisitorService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/visitor/visitorCountMiddleware.middleware.ts\n            \n            injectable\n            VisitorCounterMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs-modules/mailer : ^1.8.1\n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.3.1\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/passport : ^9.0.3\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/platform-ws : ^9.3.9\n        \n            @nestjs/swagger : ^6.2.1\n        \n            @prisma/client : ^4.10.1\n        \n            bcrypt : ^5.1.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            cookie-parser : ^1.4.6\n        \n            ejs : ^3.1.8\n        \n            express-session : ^1.17.3\n        \n            handlebars : ^4.7.7\n        \n            nodemailer : ^6.9.1\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            pug : ^3.0.2\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            sharp : ^0.31.3\n        \n            uuid : ^9.0.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            RolesEnum   (src/.../roles.enum.ts)\n                        \n                        \n                            SaltLength   (src/.../utilisateurs.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/enum/roles.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        RolesEnum\n                    \n                \n                        \n                            \n                                 administrateur\n                            \n                        \n                        \n                            \n                                Value : administrateur\n                            \n                        \n                        \n                            \n                                 conseiller\n                            \n                        \n                        \n                            \n                                Value : conseiller\n                            \n                        \n                        \n                            \n                                 jeune\n                            \n                        \n                        \n                            \n                                Value : jeune\n                            \n                        \n                        \n                            \n                                 moderateur\n                            \n                        \n                        \n                            \n                                Value : moderateur\n                            \n                        \n            \n        \n\n    src/utilisateurs/utilisateurs.service.ts\n    \n        \n            \n                \n                    \n                        \n                        SaltLength\n                    \n                \n                        \n                            \n                                 Default\n                            \n                        \n                        \n                            \n                                Value : 10\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and\n(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and\n(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and\n(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.\nYou may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\n\n\n   END OF TERMS AND CONDITIONS\n   APPENDIX: How to apply the Apache License to your work.\n  To apply the Apache License to your work, attach the following\n  boilerplate notice, with the fields enclosed by brackets \"[]\"\n  replaced with your own identifying information. (Don't include\n  the brackets!)  The text should be enclosed in the appropriate\n  comment syntax for the file format. We also recommend that a\n  file or class name and description of purpose be included on the\n  same \"printed page\" as the copyright notice for easier\n  identification within third-party archives.   Copyright [yyyy] [name of copyright owner]\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n   http://www.apache.org/licenses/LICENSE-2.0   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AlertModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ArticleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ImagesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MessagesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PagesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UtilisateursModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VisitorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AlertModule\n\n\n\ncluster_AlertModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ArticleModule\n\n\n\ncluster_ArticleModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_ImagesModule\n\n\n\ncluster_ImagesModule_providers\n\n\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_MailModule_providers\n\n\n\ncluster_MessagesModule\n\n\n\ncluster_MessagesModule_providers\n\n\n\ncluster_PagesModule\n\n\n\ncluster_PagesModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_UtilisateursModule\n\n\n\ncluster_UtilisateursModule_exports\n\n\n\ncluster_VisitorModule\n\n\n\ncluster_VisitorModule_providers\n\n\n\n\nAlertService\n\nAlertService\n\n\n\nAlertModule\n\nAlertModule\n\nAlertModule -->\n\nAlertService->AlertModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAlertModule -->\n\nPrismaService->AlertModule\n\n\n\n\n\nArticleModule\n\nArticleModule\n\nArticleModule -->\n\nPrismaService->ArticleModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaService->AuthModule\n\n\n\n\n\nImagesModule\n\nImagesModule\n\nImagesModule -->\n\nPrismaService->ImagesModule\n\n\n\n\n\nMessagesModule\n\nMessagesModule\n\nMessagesModule -->\n\nPrismaService->MessagesModule\n\n\n\n\n\nPagesModule\n\nPagesModule\n\nPagesModule -->\n\nPrismaService->PagesModule\n\n\n\n\n\nUtilisateursModule\n\nUtilisateursModule\n\nUtilisateursModule -->\n\nPrismaService->UtilisateursModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nPrismaService->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nVisitorModule\n\nVisitorModule\n\nVisitorModule -->\n\nPrismaService->VisitorModule\n\n\n\nAppModule -->\n\nAlertModule->AppModule\n\n\n\nAppModule -->\n\nArticleModule->AppModule\n\n\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\nAppModule -->\n\nImagesModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nMailService \n\nMailService \n\nMailService  -->\n\nMailModule->MailService \n\n\n\nAppModule -->\n\nMessagesModule->AppModule\n\n\n\nAppModule -->\n\nPagesModule->AppModule\n\n\n\nAuthModule -->\n\nUtilisateursModule->AuthModule\n\n\n\nAppModule -->\n\nUtilisateursModule->AppModule\n\n\n\n\n\nUtilisateursService \n\nUtilisateursService \n\nUtilisateursService  -->\n\nUtilisateursModule->UtilisateursService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nVisitorCounterMiddleware\n\nVisitorCounterMiddleware\n\nAuthModule -->\n\nVisitorCounterMiddleware->AuthModule\n\n\n\nAppModule -->\n\nVisitorCounterMiddleware->AppModule\n\n\n\n\n\nArticleService\n\nArticleService\n\nArticleModule -->\n\nArticleService->ArticleModule\n\n\n\nImagesModule -->\n\nArticleService->ImagesModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nPasswordResetService\n\nPasswordResetService\n\nAuthModule -->\n\nPasswordResetService->AuthModule\n\n\n\n\n\nUtilisateursService\n\nUtilisateursService\n\nAuthModule -->\n\nUtilisateursService->AuthModule\n\n\n\nUtilisateursModule -->\n\nUtilisateursService->UtilisateursModule\n\n\n\n\n\nImagesService\n\nImagesService\n\nImagesModule -->\n\nImagesService->ImagesModule\n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\nMessagesService\n\nMessagesService\n\nMessagesModule -->\n\nMessagesService->MessagesModule\n\n\n\n\n\nPagesService\n\nPagesService\n\nPagesModule -->\n\nPagesService->PagesModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nVisitorService\n\nVisitorService\n\nVisitorModule -->\n\nVisitorService->VisitorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        11 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    17 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    26 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/passwordForgotDto.html":{"url":"classes/passwordForgotDto.html","title":"class - passwordForgotDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  passwordForgotDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/password-forgot.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'test@test.com', description: 'The email of the User'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/password-forgot.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class passwordForgotDto {\n  @ApiProperty({\n    example: 'test@test.com',\n    description: 'The email of the User',\n  })\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/passwordResetDto.html":{"url":"classes/passwordResetDto.html","title":"class - passwordResetDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  passwordResetDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/password-reset.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: ' '})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/password-reset.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/password-reset.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class passwordResetDto {\n  @ApiProperty({\n    example: '',\n  })\n  token: string;\n  @ApiProperty({ example: ' ' })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description :     \n        \n            Homepage : https://github.com/Rowada/MLV_back#readme\n        \n            Bugs : https://github.com/Rowada/MLV_back/issues\n        \n            License : UNLICENSED\n        \n            Repository : git+https://github.com/Rowada/MLV_back.git\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Utilisateur   (src/.../utilisateurs.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/utilisateurs/utilisateurs.service.ts\n    \n    \n        \n            \n                \n                    \n                    Utilisateur\n                \n            \n            \n                \n                        utilisateur\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            allowedFields   (src/.../utilisateurs.service.ts)\n                        \n                        \n                            jwtConstants   (src/.../auth.constants.ts)\n                        \n                        \n                            Roles   (src/.../roles.decorator.ts)\n                        \n                        \n                            USER_NOT_FOUND_ERROR   (src/.../utilisateurs.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/utilisateurs/utilisateurs.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        allowedFields\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  'nom',\n  'prenom',\n  'email',\n  'telephone',\n  'adresse',\n  'nationalite',\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_NOT_FOUND_ERROR\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (id: number) => `User with ID ${id} not found`\n                    \n                \n\n\n        \n    \n\n    src/auth/constants/auth.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  secret: '2B5KVdCCPthBaU3R5yJQsAADbH4jmG8u',\n}\n                    \n                \n\n\n        \n    \n\n    src/auth/roles/roles.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roles: RolesEnum[]) => SetMetadata('roles', roles)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
