<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="21" failures="1" errors="0" time="4.272">
  <testsuite name="PrismaClientExceptionFilter" errors="0" failures="0" skipped="0" timestamp="2023-02-24T09:38:34" time="2.689" tests="1">
    <testcase classname="PrismaClientExceptionFilter should be defined" name="PrismaClientExceptionFilter should be defined" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="AppController" errors="0" failures="0" skipped="0" timestamp="2023-02-24T09:38:34" time="2.96" tests="2">
    <testcase classname="AppController login should return access token" name="AppController login should return access token" time="0.01">
    </testcase>
    <testcase classname="AppController getProfile should return user profile" name="AppController getProfile should return user profile" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="UtilisateursController" errors="0" failures="0" skipped="0" timestamp="2023-02-24T09:38:34" time="3.027" tests="5">
    <testcase classname="UtilisateursController create should return the created user" name="UtilisateursController create should return the created user" time="0.008">
    </testcase>
    <testcase classname="UtilisateursController findAll should return an array of users" name="UtilisateursController findAll should return an array of users" time="0.001">
    </testcase>
    <testcase classname="UtilisateursController findOne should return a user with the specified id" name="UtilisateursController findOne should return a user with the specified id" time="0.002">
    </testcase>
    <testcase classname="UtilisateursController update should return the updated user" name="UtilisateursController update should return the updated user" time="0.001">
    </testcase>
    <testcase classname="UtilisateursController remove should delete the  user" name="UtilisateursController remove should delete the  user" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="UtilisateursService" errors="0" failures="0" skipped="0" timestamp="2023-02-24T09:38:34" time="3.853" tests="7">
    <testcase classname="UtilisateursService createUtilisateur should create a new user with hashed password" name="UtilisateursService createUtilisateur should create a new user with hashed password" time="0.271">
    </testcase>
    <testcase classname="UtilisateursService findMany should return an array of users" name="UtilisateursService findMany should return an array of users" time="0.127">
    </testcase>
    <testcase classname="UtilisateursService findMany findOne should return the user with the specified id" name="UtilisateursService findMany findOne should return the user with the specified id" time="0.067">
    </testcase>
    <testcase classname="UtilisateursService findMany deleteUtilisateur should delete the user with the specified id" name="UtilisateursService findMany deleteUtilisateur should delete the user with the specified id" time="0.082">
    </testcase>
    <testcase classname="UtilisateursService updatePassword should update the password of the user with the specified id" name="UtilisateursService updatePassword should update the password of the user with the specified id" time="0.254">
    </testcase>
    <testcase classname="UtilisateursService updatePassword should throw an error if the user is not found" name="UtilisateursService updatePassword should throw an error if the user is not found" time="0.092">
    </testcase>
    <testcase classname="UtilisateursService updatePassword should throw an error if the current password is incorrect" name="UtilisateursService updatePassword should throw an error if the current password is incorrect" time="0.137">
    </testcase>
  </testsuite>
  <testsuite name="AuthService" errors="0" failures="1" skipped="0" timestamp="2023-02-24T09:38:34" time="4.069" tests="6">
    <testcase classname="AuthService should be defined" name="AuthService should be defined" time="0.125">
    </testcase>
    <testcase classname="AuthService validateUser should return a user object if the email and password are correct" name="AuthService validateUser should return a user object if the email and password are correct" time="0.165">
    </testcase>
    <testcase classname="AuthService validateUser should throw an error if the user is not found" name="AuthService validateUser should throw an error if the user is not found" time="0.107">
    </testcase>
    <testcase classname="AuthService validateUser should throw an error if the password is incorrect" name="AuthService validateUser should throw an error if the password is incorrect" time="0.214">
    </testcase>
    <testcase classname="AuthService login should return a JWT token if the email and password are correct" name="AuthService login should return a JWT token if the email and password are correct" time="0.197">
    </testcase>
    <testcase classname="AuthService login should throw an error if the password is incorrect" name="AuthService login should throw an error if the password is incorrect" time="0.246">
      <failure>UnauthorizedException: Identifiants incorrects
    at AuthService.validateUser (/Users/nathancuvelier/MLV_back/src/auth/auth.service.ts:26:13)
    at Object.&lt;anonymous&gt; (/Users/nathancuvelier/MLV_back/src/auth/auth.service.spec.ts:91:20)</failure>
    </testcase>
  </testsuite>
</testsuites>