<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="21" failures="8" errors="0" time="4.28">
  <testsuite name="PagesService" errors="0" failures="1" skipped="0" timestamp="2023-02-24T08:52:59" time="2.854" tests="1">
    <testcase classname="PagesService should be defined" name="PagesService should be defined" time="0.005">
      <failure>Error: Nest can&apos;t resolve dependencies of the PagesService (?). Please make sure that the argument PrismaService at index [0] is available in the RootTestModule context.

Potential solutions:
- Is RootTestModule a valid NestJS module?
- If PrismaService is a provider, is it part of the current RootTestModule?
- If PrismaService is exported from a separate @Module, is that module imported within RootTestModule?
  @Module({
    imports: [ /* the Module containing PrismaService */ ]
  })

    at TestingInjector.lookupComponentInParentModules (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/injector.js:247:19)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at TestingInjector.resolveComponentInstance (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/injector.js:200:33)
    at TestingInjector.resolveComponentInstance (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/testing/testing-injector.js:19:45)
    at resolveParam (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/injector.js:120:38)
    at async Promise.all (index 0)
    at TestingInjector.resolveConstructorParams (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/injector.js:135:27)
    at TestingInjector.loadInstance (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/injector.js:61:13)
    at TestingInjector.loadProvider (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/injector.js:88:9)
    at /Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/instance-loader.js:49:13
    at async Promise.all (index 3)
    at TestingInstanceLoader.createInstancesOfProviders (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/instance-loader.js:48:9)
    at /Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/instance-loader.js:33:13
    at async Promise.all (index 1)
    at TestingInstanceLoader.createInstances (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/instance-loader.js:32:9)
    at TestingInstanceLoader.createInstancesOfDependencies (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/instance-loader.js:21:9)
    at TestingInstanceLoader.createInstancesOfDependencies (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
    at TestingModuleBuilder.createInstancesOfDependencies (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/testing/testing-module.builder.js:97:9)
    at TestingModuleBuilder.compile (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/testing/testing-module.builder.js:63:9)
    at Object.&lt;anonymous&gt; (/Users/nathancuvelier/MLV_back/src/pages/pages.service.spec.ts:8:35)</failure>
    </testcase>
  </testsuite>
  <testsuite name="PrismaClientExceptionFilter" errors="0" failures="0" skipped="0" timestamp="2023-02-24T08:52:59" time="2.896" tests="1">
    <testcase classname="PrismaClientExceptionFilter should be defined" name="PrismaClientExceptionFilter should be defined" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="PagesController" errors="0" failures="1" skipped="0" timestamp="2023-02-24T08:52:59" time="3.087" tests="1">
    <testcase classname="PagesController should be defined" name="PagesController should be defined" time="0.005">
      <failure>Error: Nest can&apos;t resolve dependencies of the PagesService (?). Please make sure that the argument PrismaService at index [0] is available in the RootTestModule context.

Potential solutions:
- Is RootTestModule a valid NestJS module?
- If PrismaService is a provider, is it part of the current RootTestModule?
- If PrismaService is exported from a separate @Module, is that module imported within RootTestModule?
  @Module({
    imports: [ /* the Module containing PrismaService */ ]
  })

    at TestingInjector.lookupComponentInParentModules (/Users/josue/Documents/Pro/fil-rouge/MLV_back/node_modules/@nestjs/core/injector/injector.js:247:19)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at TestingInjector.resolveComponentInstance (/Users/josue/Documents/Pro/fil-rouge/MLV_back/node_modules/@nestjs/core/injector/injector.js:200:33)
    at TestingInjector.resolveComponentInstance (/Users/josue/Documents/Pro/fil-rouge/MLV_back/node_modules/@nestjs/testing/testing-injector.js:19:45)
    at resolveParam (/Users/josue/Documents/Pro/fil-rouge/MLV_back/node_modules/@nestjs/core/injector/injector.js:120:38)
    at async Promise.all (index 0)
    at TestingInjector.resolveConstructorParams (/Users/josue/Documents/Pro/fil-rouge/MLV_back/node_modules/@nestjs/core/injector/injector.js:135:27)
    at TestingInjector.loadInstance (/Users/josue/Documents/Pro/fil-rouge/MLV_back/node_modules/@nestjs/core/injector/injector.js:61:13)
    at TestingInjector.loadProvider (/Users/josue/Documents/Pro/fil-rouge/MLV_back/node_modules/@nestjs/core/injector/injector.js:88:9)
    at /Users/josue/Documents/Pro/fil-rouge/MLV_back/node_modules/@nestjs/core/injector/instance-loader.js:49:13
    at async Promise.all (index 3)
    at TestingInstanceLoader.createInstancesOfProviders (/Users/josue/Documents/Pro/fil-rouge/MLV_back/node_modules/@nestjs/core/injector/instance-loader.js:48:9)
    at /Users/josue/Documents/Pro/fil-rouge/MLV_back/node_modules/@nestjs/core/injector/instance-loader.js:33:13
    at async Promise.all (index 1)
    at TestingInstanceLoader.createInstances (/Users/josue/Documents/Pro/fil-rouge/MLV_back/node_modules/@nestjs/core/injector/instance-loader.js:32:9)
    at TestingInstanceLoader.createInstancesOfDependencies (/Users/josue/Documents/Pro/fil-rouge/MLV_back/node_modules/@nestjs/core/injector/instance-loader.js:21:9)
    at TestingInstanceLoader.createInstancesOfDependencies (/Users/josue/Documents/Pro/fil-rouge/MLV_back/node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
    at TestingModuleBuilder.createInstancesOfDependencies (/Users/josue/Documents/Pro/fil-rouge/MLV_back/node_modules/@nestjs/testing/testing-module.builder.js:97:9)
    at TestingModuleBuilder.compile (/Users/josue/Documents/Pro/fil-rouge/MLV_back/node_modules/@nestjs/testing/testing-module.builder.js:63:9)
    at Object.&lt;anonymous&gt; (/Users/josue/Documents/Pro/fil-rouge/MLV_back/src/pages/pages.service.spec.ts:8:35)</failure>
    </testcase>
  </testsuite>
  <testsuite name="UtilisateursController" errors="0" failures="0" skipped="0" timestamp="2023-02-24T08:52:59" time="3.077" tests="5">
    <testcase classname="UtilisateursController create should return the created user" name="UtilisateursController create should return the created user" time="0.008">
    </testcase>
    <testcase classname="UtilisateursController findAll should return an array of users" name="UtilisateursController findAll should return an array of users" time="0.001">
    </testcase>
    <testcase classname="UtilisateursController findOne should return a user with the specified id" name="UtilisateursController findOne should return a user with the specified id" time="0.001">
    </testcase>
    <testcase classname="UtilisateursController update should return the updated user" name="UtilisateursController update should return the updated user" time="0.001">
    </testcase>
    <testcase classname="UtilisateursController remove should delete the  user" name="UtilisateursController remove should delete the  user" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="AuthService" errors="0" failures="6" skipped="0" timestamp="2023-02-24T08:53:01" time="0.531" tests="6">
    <testcase classname="AuthService should be defined" name="AuthService should be defined" time="0.01">
      <failure>Error: Nest can&apos;t resolve dependencies of the AuthService (?, JwtService). Please make sure that the argument UtilisateursService at index [0] is available in the RootTestModule context.

Potential solutions:
- Is RootTestModule a valid NestJS module?
- If UtilisateursService is a provider, is it part of the current RootTestModule?
- If UtilisateursService is exported from a separate @Module, is that module imported within RootTestModule?
  @Module({
    imports: [ /* the Module containing UtilisateursService */ ]
  })

    at TestingInjector.lookupComponentInParentModules (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/injector.js:247:19)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at TestingInjector.resolveComponentInstance (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/injector.js:200:33)
    at TestingInjector.resolveComponentInstance (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/testing/testing-injector.js:19:45)
    at resolveParam (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/injector.js:120:38)
    at async Promise.all (index 0)
    at TestingInjector.resolveConstructorParams (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/injector.js:135:27)
    at TestingInjector.loadInstance (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/injector.js:61:13)
    at TestingInjector.loadProvider (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/injector.js:88:9)
    at /Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/instance-loader.js:49:13
    at async Promise.all (index 3)
    at TestingInstanceLoader.createInstancesOfProviders (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/instance-loader.js:48:9)
    at /Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/instance-loader.js:33:13
    at async Promise.all (index 1)
    at TestingInstanceLoader.createInstances (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/instance-loader.js:32:9)
    at TestingInstanceLoader.createInstancesOfDependencies (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/instance-loader.js:21:9)
    at TestingInstanceLoader.createInstancesOfDependencies (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
    at TestingModuleBuilder.createInstancesOfDependencies (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/testing/testing-module.builder.js:97:9)
    at TestingModuleBuilder.compile (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/testing/testing-module.builder.js:63:9)
    at Object.&lt;anonymous&gt; (/Users/nathancuvelier/MLV_back/src/auth/auth.service.spec.ts:12:35)</failure>
    </testcase>
    <testcase classname="AuthService validateUser should return a user object if the email and password are correct" name="AuthService validateUser should return a user object if the email and password are correct" time="0.004">
      <failure>Error: Nest can&apos;t resolve dependencies of the AuthService (?, JwtService). Please make sure that the argument UtilisateursService at index [0] is available in the RootTestModule context.

Potential solutions:
- Is RootTestModule a valid NestJS module?
- If UtilisateursService is a provider, is it part of the current RootTestModule?
- If UtilisateursService is exported from a separate @Module, is that module imported within RootTestModule?
  @Module({
    imports: [ /* the Module containing UtilisateursService */ ]
  })

    at TestingInjector.lookupComponentInParentModules (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/injector.js:247:19)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at TestingInjector.resolveComponentInstance (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/injector.js:200:33)
    at TestingInjector.resolveComponentInstance (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/testing/testing-injector.js:19:45)
    at resolveParam (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/injector.js:120:38)
    at async Promise.all (index 0)
    at TestingInjector.resolveConstructorParams (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/injector.js:135:27)
    at TestingInjector.loadInstance (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/injector.js:61:13)
    at TestingInjector.loadProvider (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/injector.js:88:9)
    at /Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/instance-loader.js:49:13
    at async Promise.all (index 3)
    at TestingInstanceLoader.createInstancesOfProviders (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/instance-loader.js:48:9)
    at /Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/instance-loader.js:33:13
    at async Promise.all (index 1)
    at TestingInstanceLoader.createInstances (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/instance-loader.js:32:9)
    at TestingInstanceLoader.createInstancesOfDependencies (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/instance-loader.js:21:9)
    at TestingInstanceLoader.createInstancesOfDependencies (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
    at TestingModuleBuilder.createInstancesOfDependencies (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/testing/testing-module.builder.js:97:9)
    at TestingModuleBuilder.compile (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/testing/testing-module.builder.js:63:9)
    at Object.&lt;anonymous&gt; (/Users/nathancuvelier/MLV_back/src/auth/auth.service.spec.ts:12:35)</failure>
    </testcase>
    <testcase classname="AuthService validateUser should throw an error if the user is not found" name="AuthService validateUser should throw an error if the user is not found" time="0.003">
      <failure>Error: Nest can&apos;t resolve dependencies of the AuthService (?, JwtService). Please make sure that the argument UtilisateursService at index [0] is available in the RootTestModule context.

Potential solutions:
- Is RootTestModule a valid NestJS module?
- If UtilisateursService is a provider, is it part of the current RootTestModule?
- If UtilisateursService is exported from a separate @Module, is that module imported within RootTestModule?
  @Module({
    imports: [ /* the Module containing UtilisateursService */ ]
  })

    at TestingInjector.lookupComponentInParentModules (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/injector.js:247:19)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at TestingInjector.resolveComponentInstance (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/injector.js:200:33)
    at TestingInjector.resolveComponentInstance (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/testing/testing-injector.js:19:45)
    at resolveParam (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/injector.js:120:38)
    at async Promise.all (index 0)
    at TestingInjector.resolveConstructorParams (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/injector.js:135:27)
    at TestingInjector.loadInstance (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/injector.js:61:13)
    at TestingInjector.loadProvider (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/injector.js:88:9)
    at /Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/instance-loader.js:49:13
    at async Promise.all (index 3)
    at TestingInstanceLoader.createInstancesOfProviders (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/instance-loader.js:48:9)
    at /Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/instance-loader.js:33:13
    at async Promise.all (index 1)
    at TestingInstanceLoader.createInstances (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/instance-loader.js:32:9)
    at TestingInstanceLoader.createInstancesOfDependencies (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/instance-loader.js:21:9)
    at TestingInstanceLoader.createInstancesOfDependencies (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
    at TestingModuleBuilder.createInstancesOfDependencies (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/testing/testing-module.builder.js:97:9)
    at TestingModuleBuilder.compile (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/testing/testing-module.builder.js:63:9)
    at Object.&lt;anonymous&gt; (/Users/nathancuvelier/MLV_back/src/auth/auth.service.spec.ts:12:35)</failure>
    </testcase>
    <testcase classname="AuthService validateUser should throw an error if the password is incorrect" name="AuthService validateUser should throw an error if the password is incorrect" time="0.002">
      <failure>Error: Nest can&apos;t resolve dependencies of the AuthService (?, JwtService). Please make sure that the argument UtilisateursService at index [0] is available in the RootTestModule context.

Potential solutions:
- Is RootTestModule a valid NestJS module?
- If UtilisateursService is a provider, is it part of the current RootTestModule?
- If UtilisateursService is exported from a separate @Module, is that module imported within RootTestModule?
  @Module({
    imports: [ /* the Module containing UtilisateursService */ ]
  })

    at TestingInjector.lookupComponentInParentModules (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/injector.js:247:19)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at TestingInjector.resolveComponentInstance (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/injector.js:200:33)
    at TestingInjector.resolveComponentInstance (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/testing/testing-injector.js:19:45)
    at resolveParam (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/injector.js:120:38)
    at async Promise.all (index 0)
    at TestingInjector.resolveConstructorParams (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/injector.js:135:27)
    at TestingInjector.loadInstance (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/injector.js:61:13)
    at TestingInjector.loadProvider (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/injector.js:88:9)
    at /Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/instance-loader.js:49:13
    at async Promise.all (index 3)
    at TestingInstanceLoader.createInstancesOfProviders (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/instance-loader.js:48:9)
    at /Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/instance-loader.js:33:13
    at async Promise.all (index 1)
    at TestingInstanceLoader.createInstances (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/instance-loader.js:32:9)
    at TestingInstanceLoader.createInstancesOfDependencies (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/instance-loader.js:21:9)
    at TestingInstanceLoader.createInstancesOfDependencies (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
    at TestingModuleBuilder.createInstancesOfDependencies (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/testing/testing-module.builder.js:97:9)
    at TestingModuleBuilder.compile (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/testing/testing-module.builder.js:63:9)
    at Object.&lt;anonymous&gt; (/Users/nathancuvelier/MLV_back/src/auth/auth.service.spec.ts:12:35)</failure>
    </testcase>
    <testcase classname="AuthService login should return a JWT token if the email and password are correct" name="AuthService login should return a JWT token if the email and password are correct" time="0.003">
      <failure>Error: Nest can&apos;t resolve dependencies of the AuthService (?, JwtService). Please make sure that the argument UtilisateursService at index [0] is available in the RootTestModule context.

Potential solutions:
- Is RootTestModule a valid NestJS module?
- If UtilisateursService is a provider, is it part of the current RootTestModule?
- If UtilisateursService is exported from a separate @Module, is that module imported within RootTestModule?
  @Module({
    imports: [ /* the Module containing UtilisateursService */ ]
  })

    at TestingInjector.lookupComponentInParentModules (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/injector.js:247:19)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at TestingInjector.resolveComponentInstance (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/injector.js:200:33)
    at TestingInjector.resolveComponentInstance (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/testing/testing-injector.js:19:45)
    at resolveParam (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/injector.js:120:38)
    at async Promise.all (index 0)
    at TestingInjector.resolveConstructorParams (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/injector.js:135:27)
    at TestingInjector.loadInstance (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/injector.js:61:13)
    at TestingInjector.loadProvider (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/injector.js:88:9)
    at /Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/instance-loader.js:49:13
    at async Promise.all (index 3)
    at TestingInstanceLoader.createInstancesOfProviders (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/instance-loader.js:48:9)
    at /Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/instance-loader.js:33:13
    at async Promise.all (index 1)
    at TestingInstanceLoader.createInstances (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/instance-loader.js:32:9)
    at TestingInstanceLoader.createInstancesOfDependencies (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/instance-loader.js:21:9)
    at TestingInstanceLoader.createInstancesOfDependencies (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
    at TestingModuleBuilder.createInstancesOfDependencies (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/testing/testing-module.builder.js:97:9)
    at TestingModuleBuilder.compile (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/testing/testing-module.builder.js:63:9)
    at Object.&lt;anonymous&gt; (/Users/nathancuvelier/MLV_back/src/auth/auth.service.spec.ts:12:35)</failure>
    </testcase>
    <testcase classname="AuthService login should throw an error if the password is incorrect" name="AuthService login should throw an error if the password is incorrect" time="0.002">
      <failure>Error: Nest can&apos;t resolve dependencies of the AuthService (?, JwtService). Please make sure that the argument UtilisateursService at index [0] is available in the RootTestModule context.

Potential solutions:
- Is RootTestModule a valid NestJS module?
- If UtilisateursService is a provider, is it part of the current RootTestModule?
- If UtilisateursService is exported from a separate @Module, is that module imported within RootTestModule?
  @Module({
    imports: [ /* the Module containing UtilisateursService */ ]
  })

    at TestingInjector.lookupComponentInParentModules (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/injector.js:247:19)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at TestingInjector.resolveComponentInstance (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/injector.js:200:33)
    at TestingInjector.resolveComponentInstance (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/testing/testing-injector.js:19:45)
    at resolveParam (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/injector.js:120:38)
    at async Promise.all (index 0)
    at TestingInjector.resolveConstructorParams (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/injector.js:135:27)
    at TestingInjector.loadInstance (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/injector.js:61:13)
    at TestingInjector.loadProvider (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/injector.js:88:9)
    at /Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/instance-loader.js:49:13
    at async Promise.all (index 3)
    at TestingInstanceLoader.createInstancesOfProviders (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/instance-loader.js:48:9)
    at /Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/instance-loader.js:33:13
    at async Promise.all (index 1)
    at TestingInstanceLoader.createInstances (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/instance-loader.js:32:9)
    at TestingInstanceLoader.createInstancesOfDependencies (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/core/injector/instance-loader.js:21:9)
    at TestingInstanceLoader.createInstancesOfDependencies (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/testing/testing-instance-loader.js:9:9)
    at TestingModuleBuilder.createInstancesOfDependencies (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/testing/testing-module.builder.js:97:9)
    at TestingModuleBuilder.compile (/Users/nathancuvelier/MLV_back/node_modules/@nestjs/testing/testing-module.builder.js:63:9)
    at Object.&lt;anonymous&gt; (/Users/nathancuvelier/MLV_back/src/auth/auth.service.spec.ts:12:35)</failure>
    </testcase>
  </testsuite>
  <testsuite name="UtilisateursService" errors="0" failures="0" skipped="0" timestamp="2023-02-24T08:52:59" time="4.056" tests="7">
    <testcase classname="UtilisateursService createUtilisateur should create a new user with hashed password" name="UtilisateursService createUtilisateur should create a new user with hashed password" time="0.29">
    </testcase>
    <testcase classname="UtilisateursService findMany should return an array of users" name="UtilisateursService findMany should return an array of users" time="0.146">
    </testcase>
    <testcase classname="UtilisateursService findMany findOne should return the user with the specified id" name="UtilisateursService findMany findOne should return the user with the specified id" time="0.092">
    </testcase>
    <testcase classname="UtilisateursService findMany deleteUtilisateur should delete the user with the specified id" name="UtilisateursService findMany deleteUtilisateur should delete the user with the specified id" time="0.088">
    </testcase>
    <testcase classname="UtilisateursService updatePassword should update the password of the user with the specified id" name="UtilisateursService updatePassword should update the password of the user with the specified id" time="0.266">
    </testcase>
    <testcase classname="UtilisateursService updatePassword should throw an error if the user is not found" name="UtilisateursService updatePassword should throw an error if the user is not found" time="0.08">
    </testcase>
    <testcase classname="UtilisateursService updatePassword should throw an error if the current password is incorrect" name="UtilisateursService updatePassword should throw an error if the current password is incorrect" time="0.155">
    </testcase>
  </testsuite>
</testsuites>